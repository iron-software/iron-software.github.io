{
  "api/Babel.Licensing.AfterSendReportEventArgs.html": {
    "href": "api/Babel.Licensing.AfterSendReportEventArgs.html",
    "title": "Class AfterSendReportEventArgs | C# OCR & Tesseract API | IronOCR",
    "keywords": "Class AfterSendReportEventArgs Inheritance System.Object AfterSendReportEventArgs Namespace : Babel.Licensing Assembly : IronOcr.dll Syntax public class AfterSendReportEventArgs : EventArgs Constructors AfterSendReportEventArgs(Report, Exception) Declaration public AfterSendReportEventArgs(Report report, Exception error) Parameters Type Name Description Report report System.Exception error Properties Error Declaration public Exception Error { get; } Property Value Type Description System.Exception Report Declaration public Report Report { get; } Property Value Type Description Report"
  },
  "api/Babel.Licensing.Ascii85Encoding.html": {
    "href": "api/Babel.Licensing.Ascii85Encoding.html",
    "title": "Class Ascii85Encoding | C# OCR & Tesseract API | IronOCR",
    "keywords": "Class Ascii85Encoding Inheritance System.Object Ascii85Encoding Implements IEncoding Namespace : Babel.Licensing Assembly : IronOcr.dll Syntax public sealed class Ascii85Encoding : Object, IEncoding Constructors Ascii85Encoding() Declaration public Ascii85Encoding() Methods CanDecode(String) Declaration public static bool CanDecode(string encoded) Parameters Type Name Description System.String encoded Returns Type Description System.Boolean Decode(String) Declaration public byte[] Decode(string encoded) Parameters Type Name Description System.String encoded Returns Type Description System.Byte [] Encode(Byte[]) Declaration public string Encode(byte[] bytes) Parameters Type Name Description System.Byte [] bytes Returns Type Description System.String IsValidChar(Char) Declaration public bool IsValidChar(char value) Parameters Type Name Description System.Char value Returns Type Description System.Boolean Implements IEncoding"
  },
  "api/Babel.Licensing.BabelFileLicenseProvider.html": {
    "href": "api/Babel.Licensing.BabelFileLicenseProvider.html",
    "title": "Class BabelFileLicenseProvider | C# OCR & Tesseract API | IronOCR",
    "keywords": "Class BabelFileLicenseProvider Inheritance System.Object BabelFileLicenseProvider Implements ILicenseProvider Namespace : Babel.Licensing Assembly : IronOcr.dll Syntax public class BabelFileLicenseProvider : Object, ILicenseProvider Constructors BabelFileLicenseProvider() Declaration public BabelFileLicenseProvider() BabelFileLicenseProvider(ILicenseFactory) Declaration public BabelFileLicenseProvider(ILicenseFactory factory) Parameters Type Name Description ILicenseFactory factory Properties EnvironmentVariable Declaration public static string EnvironmentVariable { get; set; } Property Value Type Description System.String LicenseFactory Declaration public ILicenseFactory LicenseFactory { get; set; } Property Value Type Description ILicenseFactory LicenseFile Declaration public static string LicenseFile { get; set; } Property Value Type Description System.String SearchDirectories Declaration public static string[] SearchDirectories { get; set; } Property Value Type Description System.String [] Methods GetLicense(ILicenseContext, Type, Object) Declaration public virtual ILicense GetLicense(ILicenseContext context, Type type, object instance) Parameters Type Name Description ILicenseContext context System.Type type System.Object instance Returns Type Description ILicense OnLicenseFileFound(LicenseFileFoundEventArgs) Declaration protected virtual void OnLicenseFileFound(LicenseFileFoundEventArgs args) Parameters Type Name Description LicenseFileFoundEventArgs args ValidateLicenseKey(String, ILicenseContext, Type, Object) Declaration protected virtual ILicense ValidateLicenseKey(string licenseKey, ILicenseContext context, Type type, object instance) Parameters Type Name Description System.String licenseKey ILicenseContext context System.Type type System.Object instance Returns Type Description ILicense Events LicenseFileFound Declaration public event EventHandler<LicenseFileFoundEventArgs> LicenseFileFound Event Type Type Description System.EventHandler < LicenseFileFoundEventArgs > Implements ILicenseProvider"
  },
  "api/Babel.Licensing.BabelLicense.html": {
    "href": "api/Babel.Licensing.BabelLicense.html",
    "title": "Class BabelLicense | C# OCR & Tesseract API | IronOCR",
    "keywords": "Class BabelLicense Inheritance System.Object BabelLicense Implements ILicense System.IDisposable Namespace : Babel.Licensing Assembly : IronOcr.dll Syntax public abstract class BabelLicense : Object, ILicense Constructors BabelLicense() Declaration protected BabelLicense() Properties Assemblies Declaration public ICollection<string> Assemblies { get; } Property Value Type Description System.Collections.Generic.ICollection < System.String > Components Declaration public ICollection<string> Components { get; } Property Value Type Description System.Collections.Generic.ICollection < System.String > ExpireDate Declaration public Nullable<DateTime> ExpireDate { get; set; } Property Value Type Description System.Nullable < System.DateTime > Features Declaration public ICollection<Feature> Features { get; } Property Value Type Description System.Collections.Generic.ICollection < Feature > Fields Declaration public ICollection<Field> Fields { get; } Property Value Type Description System.Collections.Generic.ICollection < Field > Id Declaration public string Id { get; set; } Property Value Type Description System.String IssueDate Declaration public Nullable<DateTime> IssueDate { get; set; } Property Value Type Description System.Nullable < System.DateTime > Licensee Declaration public Licensee Licensee { get; set; } Property Value Type Description Licensee LicenseKey Declaration public abstract string LicenseKey { get; } Property Value Type Description System.String Product Declaration public Product Product { get; set; } Property Value Type Description Product Restrictions Declaration public ICollection<Restriction> Restrictions { get; } Property Value Type Description System.Collections.Generic.ICollection < Restriction > SupportExpireDate Declaration public Nullable<DateTime> SupportExpireDate { get; set; } Property Value Type Description System.Nullable < System.DateTime > Type Declaration public string Type { get; set; } Property Value Type Description System.String Methods Dispose() Declaration public void Dispose() Dispose(Boolean) Declaration protected virtual void Dispose(bool disposing) Parameters Type Name Description System.Boolean disposing Finalize() Declaration protected override void Finalize() Implements ILicense System.IDisposable"
  },
  "api/Babel.Licensing.BabelLicenseContext.html": {
    "href": "api/Babel.Licensing.BabelLicenseContext.html",
    "title": "Class BabelLicenseContext | C# OCR & Tesseract API | IronOCR",
    "keywords": "Class BabelLicenseContext Inheritance System.Object BabelLicenseContext Implements ILicenseContext ILicenseServiceProvider Namespace : Babel.Licensing Assembly : IronOcr.dll Syntax public abstract class BabelLicenseContext : Object, ILicenseContext, ILicenseServiceProvider Constructors BabelLicenseContext() Declaration public BabelLicenseContext() Properties ContextName Declaration public abstract string ContextName { get; } Property Value Type Description System.String FallbackContext Declaration public ILicenseContext FallbackContext { get; set; } Property Value Type Description ILicenseContext Settings Declaration public ContextSettings Settings { get; set; } Property Value Type Description ContextSettings Methods GetService(Type) Declaration public virtual object GetService(Type serviceType) Parameters Type Name Description System.Type serviceType Returns Type Description System.Object IsContextValid(Type) Declaration protected virtual bool IsContextValid(Type type) Parameters Type Name Description System.Type type Returns Type Description System.Boolean LoadLicenseKey(Type) Declaration public virtual string LoadLicenseKey(Type type) Parameters Type Name Description System.Type type Returns Type Description System.String SaveLicenseKey(Type, String) Declaration public virtual void SaveLicenseKey(Type type, string key) Parameters Type Name Description System.Type type System.String key Implements ILicenseContext ILicenseServiceProvider"
  },
  "api/Babel.Licensing.BabelLicenseException.html": {
    "href": "api/Babel.Licensing.BabelLicenseException.html",
    "title": "Class BabelLicenseException | C# OCR & Tesseract API | IronOCR",
    "keywords": "Class BabelLicenseException Inheritance System.Object BabelLicenseException BabelMultipleLicenseException Namespace : Babel.Licensing Assembly : IronOcr.dll Syntax public class BabelLicenseException : Exception Constructors BabelLicenseException() Declaration public BabelLicenseException() BabelLicenseException(LicenseStatus) Declaration public BabelLicenseException(LicenseStatus status) Parameters Type Name Description LicenseStatus status BabelLicenseException(LicenseStatus, Exception) Declaration public BabelLicenseException(LicenseStatus status, Exception innerException) Parameters Type Name Description LicenseStatus status System.Exception innerException BabelLicenseException(String) Declaration public BabelLicenseException(string message) Parameters Type Name Description System.String message BabelLicenseException(String, Exception) Declaration public BabelLicenseException(string message, Exception innerException) Parameters Type Name Description System.String message System.Exception innerException BabelLicenseException(Type) Declaration public BabelLicenseException(Type type) Parameters Type Name Description System.Type type BabelLicenseException(Type, Object) Declaration public BabelLicenseException(Type type, object instance) Parameters Type Name Description System.Type type System.Object instance BabelLicenseException(Type, Object, String) Declaration public BabelLicenseException(Type type, object instance, string message) Parameters Type Name Description System.Type type System.Object instance System.String message BabelLicenseException(Type, Object, String, Exception) Declaration public BabelLicenseException(Type type, object instance, string message, Exception innerException) Parameters Type Name Description System.Type type System.Object instance System.String message System.Exception innerException Properties LicensedType Declaration public Type LicensedType { get; } Property Value Type Description System.Type Status Declaration public LicenseStatus Status { get; } Property Value Type Description LicenseStatus"
  },
  "api/Babel.Licensing.BabelLicenseManager.html": {
    "href": "api/Babel.Licensing.BabelLicenseManager.html",
    "title": "Class BabelLicenseManager | C# OCR & Tesseract API | IronOCR",
    "keywords": "Class BabelLicenseManager Inheritance System.Object BabelLicenseManager Namespace : Babel.Licensing Assembly : IronOcr.dll Syntax public sealed class BabelLicenseManager : Object Constructors BabelLicenseManager() Declaration public BabelLicenseManager() Properties CurrentContext Declaration public static ILicenseContext CurrentContext { get; } Property Value Type Description ILicenseContext Methods IsLicensed(Type) Declaration public static bool IsLicensed(Type type) Parameters Type Name Description System.Type type Returns Type Description System.Boolean IsValid(Type) Declaration public static bool IsValid(Type type) Parameters Type Name Description System.Type type Returns Type Description System.Boolean IsValid(Type, Object, out ILicense) Declaration public static bool IsValid(Type type, object instance, out ILicense license) Parameters Type Name Description System.Type type System.Object instance ILicense license Returns Type Description System.Boolean RegisterLicenseProvider(Type, ILicenseProvider) Declaration public static void RegisterLicenseProvider(Type type, ILicenseProvider provider) Parameters Type Name Description System.Type type ILicenseProvider provider Validate(Type) Declaration public static void Validate(Type type) Parameters Type Name Description System.Type type Validate(Type, Object) Declaration public static ILicense Validate(Type type, object instance) Parameters Type Name Description System.Type type System.Object instance Returns Type Description ILicense"
  },
  "api/Babel.Licensing.BabelLicenseProvider.html": {
    "href": "api/Babel.Licensing.BabelLicenseProvider.html",
    "title": "Class BabelLicenseProvider | C# OCR & Tesseract API | IronOCR",
    "keywords": "Class BabelLicenseProvider Inheritance System.Object BabelLicenseProvider Implements ILicenseProvider Namespace : Babel.Licensing Assembly : IronOcr.dll Syntax public abstract class BabelLicenseProvider : LicenseProvider, ILicenseProvider Constructors BabelLicenseProvider() Declaration protected BabelLicenseProvider() Methods GetLicense(ILicenseContext, Type, Object) Declaration public abstract ILicense GetLicense(ILicenseContext context, Type type, object instance) Parameters Type Name Description ILicenseContext context System.Type type System.Object instance Returns Type Description ILicense GetLicense(LicenseContext, Type, Object, Boolean) Declaration public override License GetLicense(LicenseContext context, Type type, object instance, bool allowExceptions) Parameters Type Name Description System.ComponentModel.LicenseContext context System.Type type System.Object instance System.Boolean allowExceptions Returns Type Description System.ComponentModel.License Implements ILicenseProvider"
  },
  "api/Babel.Licensing.BabelMultipleLicenseException.html": {
    "href": "api/Babel.Licensing.BabelMultipleLicenseException.html",
    "title": "Class BabelMultipleLicenseException | C# OCR & Tesseract API | IronOCR",
    "keywords": "Class BabelMultipleLicenseException Inheritance System.Object BabelLicenseException BabelMultipleLicenseException Inherited Members BabelLicenseException.Status BabelLicenseException.LicensedType Namespace : Babel.Licensing Assembly : IronOcr.dll Syntax public class BabelMultipleLicenseException : BabelLicenseException Constructors BabelMultipleLicenseException(IEnumerable<LicenseValidationResult>) Declaration public BabelMultipleLicenseException(IEnumerable<LicenseValidationResult> results) Parameters Type Name Description System.Collections.Generic.IEnumerable < LicenseValidationResult > results Properties ValidationResults Declaration public IEnumerable<LicenseValidationResult> ValidationResults { get; } Property Value Type Description System.Collections.Generic.IEnumerable < LicenseValidationResult > Inherited members Status LicensedType"
  },
  "api/Babel.Licensing.BabelReporting.html": {
    "href": "api/Babel.Licensing.BabelReporting.html",
    "title": "Class BabelReporting | C# OCR & Tesseract API | IronOCR",
    "keywords": "Class BabelReporting Inheritance System.Object BabelReporting Implements IReportSender Namespace : Babel.Licensing Assembly : IronOcr.dll Syntax public sealed class BabelReporting : Object, IReportSender Properties Configuration Declaration public BabelReportingConfiguration Configuration { get; } Property Value Type Description BabelReportingConfiguration Instance Declaration public static BabelReporting Instance { get; } Property Value Type Description BabelReporting Methods Create(BabelReportingConfiguration) Declaration public static BabelReporting Create(BabelReportingConfiguration configuration) Parameters Type Name Description BabelReportingConfiguration configuration Returns Type Description BabelReporting Send(Report) Declaration public bool Send(Report report) Parameters Type Name Description Report report Returns Type Description System.Boolean Events AfterSendReport Declaration public event EventHandler<AfterSendReportEventArgs> AfterSendReport Event Type Type Description System.EventHandler < AfterSendReportEventArgs > BeforeSendReport Declaration public event EventHandler<BeforeSendReportEventArgs> BeforeSendReport Event Type Type Description System.EventHandler < BeforeSendReportEventArgs > Implements IReportSender Extension Methods BabelReportingExtensions.ReportExceptions(BabelReporting, Action<ExceptionReportOptions>) BabelReportingExtensions.SendExceptionReport(BabelReporting, Exception) BabelReportingExtensions.ReportLicenseUsage(BabelReporting, Action<LicenseUsageReportOptions>) BabelReportingExtensions.SendLicenseUsageReport(BabelReporting)"
  },
  "api/Babel.Licensing.BabelReportingConfiguration.html": {
    "href": "api/Babel.Licensing.BabelReportingConfiguration.html",
    "title": "Class BabelReportingConfiguration | C# OCR & Tesseract API | IronOCR",
    "keywords": "Class BabelReportingConfiguration Inheritance System.Object BabelReportingConfiguration Namespace : Babel.Licensing Assembly : IronOcr.dll Syntax public class BabelReportingConfiguration : Object Constructors BabelReportingConfiguration() Declaration public BabelReportingConfiguration() Properties ApiKey Declaration public string ApiKey { get; set; } Property Value Type Description System.String ApiVersion Declaration public string ApiVersion { get; set; } Property Value Type Description System.String RetryCount Declaration public int RetryCount { get; set; } Property Value Type Description System.Int32 ServiceUrl Declaration public string ServiceUrl { get; set; } Property Value Type Description System.String TokenSeed Declaration public int TokenSeed { get; set; } Property Value Type Description System.Int32"
  },
  "api/Babel.Licensing.BabelReportingExtensions.html": {
    "href": "api/Babel.Licensing.BabelReportingExtensions.html",
    "title": "Class BabelReportingExtensions | C# OCR & Tesseract API | IronOCR",
    "keywords": "Class BabelReportingExtensions Inheritance System.Object BabelReportingExtensions Namespace : Babel.Licensing Assembly : IronOcr.dll Syntax public static class BabelReportingExtensions : Object Methods ReportExceptions(BabelReporting, Action<ExceptionReportOptions>) Declaration public static BabelReporting ReportExceptions(this BabelReporting self, Action<ExceptionReportOptions> configureOptions = null) Parameters Type Name Description BabelReporting self System.Action < ExceptionReportOptions > configureOptions Returns Type Description BabelReporting ReportLicenseUsage(BabelReporting, Action<LicenseUsageReportOptions>) Declaration public static BabelReporting ReportLicenseUsage(this BabelReporting self, Action<LicenseUsageReportOptions> configureOptions = null) Parameters Type Name Description BabelReporting self System.Action < LicenseUsageReportOptions > configureOptions Returns Type Description BabelReporting SendExceptionReport(BabelReporting, Exception) Declaration public static bool SendExceptionReport(this BabelReporting self, Exception e) Parameters Type Name Description BabelReporting self System.Exception e Returns Type Description System.Boolean SendLicenseUsageReport(BabelReporting) Declaration public static bool SendLicenseUsageReport(this BabelReporting self) Parameters Type Name Description BabelReporting self Returns Type Description System.Boolean"
  },
  "api/Babel.Licensing.Base32Encoding.html": {
    "href": "api/Babel.Licensing.Base32Encoding.html",
    "title": "Class Base32Encoding | C# OCR & Tesseract API | IronOCR",
    "keywords": "Class Base32Encoding Inheritance System.Object Base32Encoding Implements IEncoding Namespace : Babel.Licensing Assembly : IronOcr.dll Syntax public sealed class Base32Encoding : Object, IEncoding Constructors Base32Encoding() Declaration public Base32Encoding() Methods CanDecode(String) Declaration public static bool CanDecode(string encoded) Parameters Type Name Description System.String encoded Returns Type Description System.Boolean Decode(String) Declaration public byte[] Decode(string encoded) Parameters Type Name Description System.String encoded Returns Type Description System.Byte [] Encode(Byte[]) Declaration public string Encode(byte[] bytes) Parameters Type Name Description System.Byte [] bytes Returns Type Description System.String IsValidChar(Char) Declaration public bool IsValidChar(char ch) Parameters Type Name Description System.Char ch Returns Type Description System.Boolean Implements IEncoding"
  },
  "api/Babel.Licensing.BeforeSendReportEventArgs.html": {
    "href": "api/Babel.Licensing.BeforeSendReportEventArgs.html",
    "title": "Class BeforeSendReportEventArgs | C# OCR & Tesseract API | IronOCR",
    "keywords": "Class BeforeSendReportEventArgs Inheritance System.Object BeforeSendReportEventArgs Namespace : Babel.Licensing Assembly : IronOcr.dll Syntax public class BeforeSendReportEventArgs : EventArgs Constructors BeforeSendReportEventArgs(Report) Declaration public BeforeSendReportEventArgs(Report report) Parameters Type Name Description Report report Properties Cancel Declaration public bool Cancel { get; set; } Property Value Type Description System.Boolean Report Declaration public Report Report { get; } Property Value Type Description Report"
  },
  "api/Babel.Licensing.BetaRestriction.html": {
    "href": "api/Babel.Licensing.BetaRestriction.html",
    "title": "Class BetaRestriction | C# OCR & Tesseract API | IronOCR",
    "keywords": "Class BetaRestriction Inheritance System.Object Restriction BetaRestriction Implements IObservableObject Inherited Members Restriction.Validate(ILicenseContext, Type, Object) Restriction.Attach(IObjectListener) Restriction.Detach(IObjectListener) Restriction.Notify(Object[]) Restriction.Listeners Restriction.Id Restriction.ExpireDate Namespace : Babel.Licensing Assembly : IronOcr.dll Syntax public class BetaRestriction : Restriction, IObservableObject Constructors BetaRestriction() Declaration public BetaRestriction() Properties BuildType Declaration public string BuildType { get; set; } Property Value Type Description System.String Name Declaration public override string Name { get; } Property Value Type Description System.String Overrides Restriction.Name RecentChanges Declaration public string RecentChanges { get; set; } Property Value Type Description System.String Implements IObservableObject Inherited members Validate(ILicenseContext, Type, Object) Attach(IObjectListener) Detach(IObjectListener) Notify(Object[]) Listeners Id ExpireDate"
  },
  "api/Babel.Licensing.ContextSettings.html": {
    "href": "api/Babel.Licensing.ContextSettings.html",
    "title": "Class ContextSettings | C# OCR & Tesseract API | IronOCR",
    "keywords": "Class ContextSettings Inheritance System.Object ContextSettings Namespace : Babel.Licensing Assembly : IronOcr.dll Syntax public class ContextSettings : Object Constructors ContextSettings() Declaration public ContextSettings() Properties CheckSystemTimeRoollback Declaration public bool CheckSystemTimeRoollback { get; set; } Property Value Type Description System.Boolean RefreshTime Declaration public Nullable<TimeSpan> RefreshTime { get; set; } Property Value Type Description System.Nullable < System.TimeSpan >"
  },
  "api/Babel.Licensing.CreateCustomRestrictionEventArgs.html": {
    "href": "api/Babel.Licensing.CreateCustomRestrictionEventArgs.html",
    "title": "Class CreateCustomRestrictionEventArgs | C# OCR & Tesseract API | IronOCR",
    "keywords": "Class CreateCustomRestrictionEventArgs Inheritance System.Object CreateCustomRestrictionEventArgs Namespace : Babel.Licensing Assembly : IronOcr.dll Syntax public class CreateCustomRestrictionEventArgs : EventArgs Constructors CreateCustomRestrictionEventArgs(String) Declaration public CreateCustomRestrictionEventArgs(string restrictionName) Parameters Type Name Description System.String restrictionName Properties Restriction Declaration public Restriction Restriction { get; set; } Property Value Type Description Restriction RestrictionName Declaration public string RestrictionName { get; } Property Value Type Description System.String"
  },
  "api/Babel.Licensing.CreateCustomSignatureProviderEventArgs.html": {
    "href": "api/Babel.Licensing.CreateCustomSignatureProviderEventArgs.html",
    "title": "Class CreateCustomSignatureProviderEventArgs | C# OCR & Tesseract API | IronOCR",
    "keywords": "Class CreateCustomSignatureProviderEventArgs Inheritance System.Object CreateCustomSignatureProviderEventArgs Namespace : Babel.Licensing Assembly : IronOcr.dll Syntax public class CreateCustomSignatureProviderEventArgs : EventArgs Constructors CreateCustomSignatureProviderEventArgs(String) Declaration public CreateCustomSignatureProviderEventArgs(string algorithmName) Parameters Type Name Description System.String algorithmName Properties AlgorithmName Declaration public string AlgorithmName { get; } Property Value Type Description System.String SignatureProvider Declaration public ISignatureProvider SignatureProvider { get; set; } Property Value Type Description ISignatureProvider"
  },
  "api/Babel.Licensing.DomainRestriction.html": {
    "href": "api/Babel.Licensing.DomainRestriction.html",
    "title": "Class DomainRestriction | C# OCR & Tesseract API | IronOCR",
    "keywords": "Class DomainRestriction Inheritance System.Object Restriction DomainRestriction Implements IObservableObject Inherited Members Restriction.Attach(IObjectListener) Restriction.Detach(IObjectListener) Restriction.Notify(Object[]) Restriction.Listeners Restriction.Id Restriction.ExpireDate Namespace : Babel.Licensing Assembly : IronOcr.dll Syntax public class DomainRestriction : Restriction, IObservableObject Constructors DomainRestriction() Declaration public DomainRestriction() Properties Domain Declaration public string Domain { get; set; } Property Value Type Description System.String Name Declaration public override string Name { get; } Property Value Type Description System.String Overrides Restriction.Name Role Declaration public string Role { get; set; } Property Value Type Description System.String Methods Validate(ILicenseContext, Type, Object) Declaration public override ValidationResult Validate(ILicenseContext context, Type type, object instance) Parameters Type Name Description ILicenseContext context System.Type type System.Object instance Returns Type Description ValidationResult Overrides Restriction.Validate(ILicenseContext, Type, Object) Implements IObservableObject Inherited members Attach(IObjectListener) Detach(IObjectListener) Notify(Object[]) Listeners Id ExpireDate"
  },
  "api/Babel.Licensing.ECDsaKeySize.html": {
    "href": "api/Babel.Licensing.ECDsaKeySize.html",
    "title": "Class ECDsaKeySize | C# OCR & Tesseract API | IronOCR",
    "keywords": "Class ECDsaKeySize Inheritance System.Object ECDsaKeySize Namespace : Babel.Licensing Assembly : IronOcr.dll Syntax public sealed class ECDsaKeySize : Enum Fields KeySize112bit Declaration public const ECDsaKeySize KeySize112bit Field Value Type Description ECDsaKeySize KeySize192bit Declaration public const ECDsaKeySize KeySize192bit Field Value Type Description ECDsaKeySize KeySize256bit Declaration public const ECDsaKeySize KeySize256bit Field Value Type Description ECDsaKeySize KeySize384bit Declaration public const ECDsaKeySize KeySize384bit Field Value Type Description ECDsaKeySize KeySize521bit Declaration public const ECDsaKeySize KeySize521bit Field Value Type Description ECDsaKeySize value__ Declaration public int value__ Field Value Type Description System.Int32"
  },
  "api/Babel.Licensing.ECDsaSignature.html": {
    "href": "api/Babel.Licensing.ECDsaSignature.html",
    "title": "Class ECDsaSignature | C# OCR & Tesseract API | IronOCR",
    "keywords": "Class ECDsaSignature Inheritance System.Object ECDsaSignature Implements ISignatureProvider ILicenseSerializable ISignatureWriter ISignatureKeyInfo Namespace : Babel.Licensing Assembly : IronOcr.dll Syntax public sealed class ECDsaSignature : Object, ISignatureProvider, ILicenseSerializable, ISignatureWriter, ISignatureKeyInfo Constructors ECDsaSignature() Declaration public ECDsaSignature() ECDsaSignature(ECDsaKeySize) Declaration public ECDsaSignature(ECDsaKeySize keySize) Parameters Type Name Description ECDsaKeySize keySize Properties AlgorithmName Declaration public string AlgorithmName { get; } Property Value Type Description System.String GenerateKeyInfo Declaration public bool GenerateKeyInfo { get; set; } Property Value Type Description System.Boolean HasKeySize Declaration public bool HasKeySize { get; } Property Value Type Description System.Boolean HasPrivateKey Declaration public bool HasPrivateKey { get; } Property Value Type Description System.Boolean HasPublicKey Declaration public bool HasPublicKey { get; } Property Value Type Description System.Boolean KeySize Declaration public ECDsaKeySize KeySize { get; } Property Value Type Description ECDsaKeySize PrivateKey Declaration public string PrivateKey { get; } Property Value Type Description System.String PublicKey Declaration public string PublicKey { get; } Property Value Type Description System.String Methods CreateKeyPair() Declaration public void CreateKeyPair() ExportKeys(Boolean) Declaration public string ExportKeys(bool publicKeyOnly) Parameters Type Name Description System.Boolean publicKeyOnly Returns Type Description System.String FromKeys(String, String) Declaration public static ECDsaSignature FromKeys(string publicKey, string privateKey = null) Parameters Type Name Description System.String publicKey System.String privateKey Returns Type Description ECDsaSignature ImportKeys(String) Declaration public void ImportKeys(string key) Parameters Type Name Description System.String key SignData(Byte[]) Declaration public byte[] SignData(byte[] data) Parameters Type Name Description System.Byte [] data Returns Type Description System.Byte [] VerifyData(Byte[], Byte[]) Declaration public bool VerifyData(byte[] data, byte[] signature) Parameters Type Name Description System.Byte [] data System.Byte [] signature Returns Type Description System.Boolean WritePem(Stream, Boolean) Declaration public void WritePem(Stream stream, bool publicKeyOnly) Parameters Type Name Description System.IO.Stream stream System.Boolean publicKeyOnly WritePem(String, Boolean) Declaration public void WritePem(string path, bool publicKeyOnly) Parameters Type Name Description System.String path System.Boolean publicKeyOnly Explicit Interface Implementations ILicenseSerializable.Read(Object) Declaration void ILicenseSerializable.Read(object rkmuxqcg) Parameters Type Name Description System.Object rkmuxqcg ILicenseSerializable.Write(Object) Declaration void ILicenseSerializable.Write(object rkmuxqcg) Parameters Type Name Description System.Object rkmuxqcg ISignatureKeyInfo.KeySize Declaration int ISignatureKeyInfo.KeySize { get; } Returns Type Description System.Int32 Implements ISignatureProvider ILicenseSerializable ISignatureWriter ISignatureKeyInfo"
  },
  "api/Babel.Licensing.EnvironmentReportOptions.html": {
    "href": "api/Babel.Licensing.EnvironmentReportOptions.html",
    "title": "Class EnvironmentReportOptions | C# OCR & Tesseract API | IronOCR",
    "keywords": "Class EnvironmentReportOptions Inheritance System.Object EnvironmentReportOptions Namespace : Babel.Licensing Assembly : IronOcr.dll Syntax public class EnvironmentReportOptions : Object Constructors EnvironmentReportOptions() Declaration public EnvironmentReportOptions() Properties AssemblyNames Declaration public List<string> AssemblyNames { get; set; } Property Value Type Description System.Collections.Generic.List < System.String > CollectApplicationInformation Declaration public bool CollectApplicationInformation { get; set; } Property Value Type Description System.Boolean CollectEnvironmentVariables Declaration public bool CollectEnvironmentVariables { get; set; } Property Value Type Description System.Boolean CollectLoadedAssemblies Declaration public bool CollectLoadedAssemblies { get; set; } Property Value Type Description System.Boolean CollectLoadeModules Declaration public bool CollectLoadeModules { get; set; } Property Value Type Description System.Boolean CollectProcessInformation Declaration public bool CollectProcessInformation { get; set; } Property Value Type Description System.Boolean CollectUserInformation Declaration public bool CollectUserInformation { get; set; } Property Value Type Description System.Boolean CollectVirtualMachineInformation Declaration public bool CollectVirtualMachineInformation { get; set; } Property Value Type Description System.Boolean EnvironmentVariables Declaration public List<string> EnvironmentVariables { get; set; } Property Value Type Description System.Collections.Generic.List < System.String > ProcessNames Declaration public List<string> ProcessNames { get; set; } Property Value Type Description System.Collections.Generic.List < System.String >"
  },
  "api/Babel.Licensing.ExceptionReportOptions.html": {
    "href": "api/Babel.Licensing.ExceptionReportOptions.html",
    "title": "Class ExceptionReportOptions | C# OCR & Tesseract API | IronOCR",
    "keywords": "Class ExceptionReportOptions Inheritance System.Object ExceptionReportOptions Namespace : Babel.Licensing Assembly : IronOcr.dll Syntax public class ExceptionReportOptions : Object Constructors ExceptionReportOptions() Declaration public ExceptionReportOptions() Properties EncryptionEncoding Declaration public IEncoding EncryptionEncoding { get; set; } Property Value Type Description IEncoding EncryptionKey Declaration public string EncryptionKey { get; set; } Property Value Type Description System.String Environment Declaration public EnvironmentReportOptions Environment { get; set; } Property Value Type Description EnvironmentReportOptions Formatted Declaration public bool Formatted { get; set; } Property Value Type Description System.Boolean Network Declaration public NetworkReportOptions Network { get; set; } Property Value Type Description NetworkReportOptions System Declaration public SystemReportOptions System { get; set; } Property Value Type Description SystemReportOptions"
  },
  "api/Babel.Licensing.Feature.html": {
    "href": "api/Babel.Licensing.Feature.html",
    "title": "Class Feature | C# OCR & Tesseract API | IronOCR",
    "keywords": "Class Feature Inheritance System.Object Feature Implements IObservableObject Namespace : Babel.Licensing Assembly : IronOcr.dll Syntax public class Feature : Object, IObservableObject Constructors Feature() Declaration protected Feature() Feature(Feature) Declaration public Feature(Feature other) Parameters Type Name Description Feature other Feature(String) Declaration public Feature(string name) Parameters Type Name Description System.String name Feature(String, Byte[]) Declaration public Feature(string name, byte[] data) Parameters Type Name Description System.String name System.Byte [] data Properties Data Declaration public virtual byte[] Data { get; set; } Property Value Type Description System.Byte [] Description Declaration public virtual string Description { get; set; } Property Value Type Description System.String ExpireDate Declaration public virtual Nullable<DateTime> ExpireDate { get; set; } Property Value Type Description System.Nullable < System.DateTime > Id Declaration public virtual string Id { get; set; } Property Value Type Description System.String Key Declaration public virtual byte[] Key { get; set; } Property Value Type Description System.Byte [] Listeners Declaration public virtual IEnumerable<IObjectListener> Listeners { get; } Property Value Type Description System.Collections.Generic.IEnumerable < IObjectListener > Name Declaration public virtual string Name { get; set; } Property Value Type Description System.String Methods Attach(IObjectListener) Declaration public virtual void Attach(IObjectListener listener) Parameters Type Name Description IObjectListener listener Detach(IObjectListener) Declaration public virtual void Detach(IObjectListener listener) Parameters Type Name Description IObjectListener listener Notify(Object[]) Declaration public virtual void Notify(params object[] args) Parameters Type Name Description System.Object [] args Implements IObservableObject"
  },
  "api/Babel.Licensing.Field.html": {
    "href": "api/Babel.Licensing.Field.html",
    "title": "Class Field | C# OCR & Tesseract API | IronOCR",
    "keywords": "Class Field Inheritance System.Object Field Implements IObservableObject Namespace : Babel.Licensing Assembly : IronOcr.dll Syntax public class Field : Object, IObservableObject Constructors Field() Declaration protected Field() Field(Field) Declaration public Field(Field other) Parameters Type Name Description Field other Field(String) Declaration public Field(string name) Parameters Type Name Description System.String name Field(String, String) Declaration public Field(string name, string value) Parameters Type Name Description System.String name System.String value Properties Id Declaration public virtual string Id { get; set; } Property Value Type Description System.String Listeners Declaration public virtual IEnumerable<IObjectListener> Listeners { get; } Property Value Type Description System.Collections.Generic.IEnumerable < IObjectListener > Name Declaration public virtual string Name { get; set; } Property Value Type Description System.String Value Declaration public virtual string Value { get; set; } Property Value Type Description System.String Methods Attach(IObjectListener) Declaration public virtual void Attach(IObjectListener listener) Parameters Type Name Description IObjectListener listener Detach(IObjectListener) Declaration public virtual void Detach(IObjectListener listener) Parameters Type Name Description IObjectListener listener Notify(Object[]) Declaration public virtual void Notify(params object[] args) Parameters Type Name Description System.Object [] args Implements IObservableObject"
  },
  "api/Babel.Licensing.HardwareComponents.html": {
    "href": "api/Babel.Licensing.HardwareComponents.html",
    "title": "Class HardwareComponents | C# OCR & Tesseract API | IronOCR",
    "keywords": "Class HardwareComponents Inheritance System.Object HardwareComponents Namespace : Babel.Licensing Assembly : IronOcr.dll Syntax public sealed class HardwareComponents : Enum Fields All Declaration public const HardwareComponents All Field Value Type Description HardwareComponents Bios Declaration public const HardwareComponents Bios Field Value Type Description HardwareComponents Cpu Declaration public const HardwareComponents Cpu Field Value Type Description HardwareComponents Disk Declaration public const HardwareComponents Disk Field Value Type Description HardwareComponents Ethernet Declaration public const HardwareComponents Ethernet Field Value Type Description HardwareComponents Motherboard Declaration public const HardwareComponents Motherboard Field Value Type Description HardwareComponents SystemName Declaration public const HardwareComponents SystemName Field Value Type Description HardwareComponents value__ Declaration public int value__ Field Value Type Description System.Int32"
  },
  "api/Babel.Licensing.HardwareId.html": {
    "href": "api/Babel.Licensing.HardwareId.html",
    "title": "Class HardwareId | C# OCR & Tesseract API | IronOCR",
    "keywords": "Class HardwareId Inheritance System.Object HardwareId Namespace : Babel.Licensing Assembly : IronOcr.dll Syntax public class HardwareId : Object Constructors HardwareId() Declaration public HardwareId() HardwareId(HardwareComponents) Declaration public HardwareId(HardwareComponents components) Parameters Type Name Description HardwareComponents components HardwareId(HardwareComponents, Byte[]) Declaration public HardwareId(HardwareComponents components, byte[] salt) Parameters Type Name Description HardwareComponents components System.Byte [] salt Properties RequiredComponents Declaration public HardwareComponents RequiredComponents { get; set; } Property Value Type Description HardwareComponents Salt Declaration public byte[] Salt { get; set; } Property Value Type Description System.Byte [] Methods IsValid(String) Declaration public static bool IsValid(string key) Parameters Type Name Description System.String key Returns Type Description System.Boolean ToMachineKey(Int32) Declaration public string ToMachineKey(int tokenSize = 5) Parameters Type Name Description System.Int32 tokenSize Returns Type Description System.String"
  },
  "api/Babel.Licensing.HardwareRestriction.html": {
    "href": "api/Babel.Licensing.HardwareRestriction.html",
    "title": "Class HardwareRestriction | C# OCR & Tesseract API | IronOCR",
    "keywords": "Class HardwareRestriction Inheritance System.Object Restriction HardwareRestriction Implements IObservableObject Inherited Members Restriction.Attach(IObjectListener) Restriction.Detach(IObjectListener) Restriction.Notify(Object[]) Restriction.Listeners Restriction.Id Restriction.ExpireDate Namespace : Babel.Licensing Assembly : IronOcr.dll Syntax public class HardwareRestriction : Restriction, IObservableObject Constructors HardwareRestriction() Declaration public HardwareRestriction() Properties Data Declaration public byte[] Data { get; set; } Property Value Type Description System.Byte [] HardwareKey Declaration public string HardwareKey { get; set; } Property Value Type Description System.String Name Declaration public override string Name { get; } Property Value Type Description System.String Overrides Restriction.Name Methods Validate(ILicenseContext, Type, Object) Declaration public override ValidationResult Validate(ILicenseContext context, Type type, object instance) Parameters Type Name Description ILicenseContext context System.Type type System.Object instance Returns Type Description ValidationResult Overrides Restriction.Validate(ILicenseContext, Type, Object) Implements IObservableObject Inherited members Attach(IObjectListener) Detach(IObjectListener) Notify(Object[]) Listeners Id ExpireDate"
  },
  "api/Babel.Licensing.HexEncoding.html": {
    "href": "api/Babel.Licensing.HexEncoding.html",
    "title": "Class HexEncoding | C# OCR & Tesseract API | IronOCR",
    "keywords": "Class HexEncoding Inheritance System.Object HexEncoding Implements IEncoding Namespace : Babel.Licensing Assembly : IronOcr.dll Syntax public sealed class HexEncoding : Object, IEncoding Constructors HexEncoding() Declaration public HexEncoding() Methods Decode(String) Declaration public byte[] Decode(string encoded) Parameters Type Name Description System.String encoded Returns Type Description System.Byte [] Encode(Byte[]) Declaration public string Encode(byte[] buffer) Parameters Type Name Description System.Byte [] buffer Returns Type Description System.String IsValidChar(Char) Declaration public bool IsValidChar(char value) Parameters Type Name Description System.Char value Returns Type Description System.Boolean TryDecode(String, out Byte[]) Declaration public static bool TryDecode(string encoded, out byte[] buffer) Parameters Type Name Description System.String encoded System.Byte [] buffer Returns Type Description System.Boolean Implements IEncoding"
  },
  "api/Babel.Licensing.html": {
    "href": "api/Babel.Licensing.html",
    "title": "Namespace Babel.Licensing | C# OCR & Tesseract API | IronOCR",
    "keywords": "Namespace Babel.Licensing Classes AfterSendReportEventArgs Ascii85Encoding BabelFileLicenseProvider BabelLicense BabelLicenseContext BabelLicenseException BabelLicenseManager BabelLicenseProvider BabelMultipleLicenseException BabelReporting BabelReportingConfiguration BabelReportingExtensions Base32Encoding BeforeSendReportEventArgs BetaRestriction ContextSettings CreateCustomRestrictionEventArgs CreateCustomSignatureProviderEventArgs DomainRestriction ECDsaKeySize ECDsaSignature EnvironmentReportOptions ExceptionReportOptions Feature Field HardwareComponents HardwareId HardwareRestriction HexEncoding IdFormat IdGenerator KeyHelpers Licenseable Licensee LicenseFileFoundEventArgs LicenseReportOptions LicenseRestrictionProvider LicenseRestrictionProviderAttribute LicenseServices LicenseStatus LicenseUsageReportOptions LicenseValidationResult NetworkReportOptions Pem Product Report ReportToken Restriction Rnd RSASignature SerialBuilder SerialManager StringEncrypter StringFormat StringLicense StringLicenseBuilder StringLicenseManager SystemReportOptions TrialRestriction UsageRestriction ValidationResult XmlDigitalSignature XmlLicense XmlLicenseBuilder XmlLicenseManager Interfaces ICreateCustomRestriction ICreateCustomSignatureProvider IEncoding IEnvironmentInformation ILicense ILicenseBuilder ILicenseBuilderProvider ILicenseBuilderProvider<T> ILicenseContext ILicenseFactory ILicenseProvider ILicenseSerializable ILicenseServiceProvider INetworkInformation IObjectListener IObservableObject IReadableLicenseString IReportSender IRestrictionFactory IRSAKeys ISignatureKeyInfo ISignatureProvider ISignatureProviderFactory ISignatureWriter ISystemInformation"
  },
  "api/Babel.Licensing.ICreateCustomRestriction.html": {
    "href": "api/Babel.Licensing.ICreateCustomRestriction.html",
    "title": "Interface ICreateCustomRestriction | C# OCR & Tesseract API | IronOCR",
    "keywords": "Interface ICreateCustomRestriction Namespace : Babel.Licensing Assembly : IronOcr.dll Syntax public interface ICreateCustomRestriction Events CreateCustomRestriction Declaration event EventHandler<CreateCustomRestrictionEventArgs> CreateCustomRestriction Event Type Type Description System.EventHandler < CreateCustomRestrictionEventArgs >"
  },
  "api/Babel.Licensing.ICreateCustomSignatureProvider.html": {
    "href": "api/Babel.Licensing.ICreateCustomSignatureProvider.html",
    "title": "Interface ICreateCustomSignatureProvider | C# OCR & Tesseract API | IronOCR",
    "keywords": "Interface ICreateCustomSignatureProvider Namespace : Babel.Licensing Assembly : IronOcr.dll Syntax public interface ICreateCustomSignatureProvider Events CreateCustomSignatureProvider Declaration event EventHandler<CreateCustomSignatureProviderEventArgs> CreateCustomSignatureProvider Event Type Type Description System.EventHandler < CreateCustomSignatureProviderEventArgs >"
  },
  "api/Babel.Licensing.IdFormat.html": {
    "href": "api/Babel.Licensing.IdFormat.html",
    "title": "Class IdFormat | C# OCR & Tesseract API | IronOCR",
    "keywords": "Class IdFormat Inheritance System.Object IdFormat Namespace : Babel.Licensing Assembly : IronOcr.dll Syntax public sealed class IdFormat : Enum Fields Base32 Declaration public const IdFormat Base32 Field Value Type Description IdFormat Decimal Declaration public const IdFormat Decimal Field Value Type Description IdFormat Hex Declaration public const IdFormat Hex Field Value Type Description IdFormat value__ Declaration public int value__ Field Value Type Description System.Int32"
  },
  "api/Babel.Licensing.IdGenerator.html": {
    "href": "api/Babel.Licensing.IdGenerator.html",
    "title": "Class IdGenerator | C# OCR & Tesseract API | IronOCR",
    "keywords": "Class IdGenerator Inheritance System.Object IdGenerator Namespace : Babel.Licensing Assembly : IronOcr.dll Syntax public sealed class IdGenerator : Object Constructors IdGenerator() Declaration public IdGenerator() IdGenerator(String) Declaration public IdGenerator(string prefix) Parameters Type Name Description System.String prefix IdGenerator(String, Int32) Declaration public IdGenerator(string prefix, int length) Parameters Type Name Description System.String prefix System.Int32 length Properties Format Declaration public IdFormat Format { get; set; } Property Value Type Description IdFormat Length Declaration public int Length { get; set; } Property Value Type Description System.Int32 Prefix Declaration public string Prefix { get; set; } Property Value Type Description System.String Methods Create(String, Int32) Declaration public static string Create(string prefix, int length) Parameters Type Name Description System.String prefix System.Int32 length Returns Type Description System.String CreateId() Declaration public string CreateId() Returns Type Description System.String"
  },
  "api/Babel.Licensing.IEncoding.html": {
    "href": "api/Babel.Licensing.IEncoding.html",
    "title": "Interface IEncoding | C# OCR & Tesseract API | IronOCR",
    "keywords": "Interface IEncoding Namespace : Babel.Licensing Assembly : IronOcr.dll Syntax public interface IEncoding Methods Decode(String) Declaration byte[] Decode(string encoded) Parameters Type Name Description System.String encoded Returns Type Description System.Byte [] Encode(Byte[]) Declaration string Encode(byte[] buffer) Parameters Type Name Description System.Byte [] buffer Returns Type Description System.String IsValidChar(Char) Declaration bool IsValidChar(char value) Parameters Type Name Description System.Char value Returns Type Description System.Boolean"
  },
  "api/Babel.Licensing.IEnvironmentInformation.html": {
    "href": "api/Babel.Licensing.IEnvironmentInformation.html",
    "title": "Interface IEnvironmentInformation | C# OCR & Tesseract API | IronOCR",
    "keywords": "Interface IEnvironmentInformation Namespace : Babel.Licensing Assembly : IronOcr.dll Syntax public interface IEnvironmentInformation Properties ApplicationName Declaration string ApplicationName { get; } Property Value Type Description System.String ApplicationVersion Declaration string ApplicationVersion { get; } Property Value Type Description System.String InstanceCount Declaration int InstanceCount { get; } Property Value Type Description System.Int32 Is64BitProcess Declaration bool Is64BitProcess { get; } Property Value Type Description System.Boolean IsSystemClockRollback Declaration bool IsSystemClockRollback { get; } Property Value Type Description System.Boolean IsVirtualEnvironment Declaration bool IsVirtualEnvironment { get; } Property Value Type Description System.Boolean ProcessName Declaration string ProcessName { get; } Property Value Type Description System.String VirtualEnvironment Declaration string VirtualEnvironment { get; } Property Value Type Description System.String Methods GetLicenseUsageMode(ILicenseContext) Declaration string GetLicenseUsageMode(ILicenseContext context) Parameters Type Name Description ILicenseContext context Returns Type Description System.String"
  },
  "api/Babel.Licensing.ILicense.html": {
    "href": "api/Babel.Licensing.ILicense.html",
    "title": "Interface ILicense | C# OCR & Tesseract API | IronOCR",
    "keywords": "Interface ILicense Namespace : Babel.Licensing Assembly : IronOcr.dll Syntax public interface ILicense Properties Assemblies Declaration ICollection<string> Assemblies { get; } Property Value Type Description System.Collections.Generic.ICollection < System.String > Components Declaration ICollection<string> Components { get; } Property Value Type Description System.Collections.Generic.ICollection < System.String > ExpireDate Declaration Nullable<DateTime> ExpireDate { get; set; } Property Value Type Description System.Nullable < System.DateTime > Features Declaration ICollection<Feature> Features { get; } Property Value Type Description System.Collections.Generic.ICollection < Feature > Fields Declaration ICollection<Field> Fields { get; } Property Value Type Description System.Collections.Generic.ICollection < Field > Id Declaration string Id { get; set; } Property Value Type Description System.String IssueDate Declaration Nullable<DateTime> IssueDate { get; set; } Property Value Type Description System.Nullable < System.DateTime > Licensee Declaration Licensee Licensee { get; set; } Property Value Type Description Licensee LicenseKey Declaration string LicenseKey { get; } Property Value Type Description System.String Product Declaration Product Product { get; set; } Property Value Type Description Product Restrictions Declaration ICollection<Restriction> Restrictions { get; } Property Value Type Description System.Collections.Generic.ICollection < Restriction > SupportExpireDate Declaration Nullable<DateTime> SupportExpireDate { get; set; } Property Value Type Description System.Nullable < System.DateTime > Type Declaration string Type { get; set; } Property Value Type Description System.String Extension Methods Licenseable.ForAnyAssembly<T>(T) Licenseable.ForAssembly<T>(T, Assembly) Licenseable.ForAssembly<T>(T, String) Licenseable.WithId<T>(T, String) Licenseable.WithUniqueId<T>(T, String) Licenseable.WithType<T>(T, String) Licenseable.IssuedAt<T>(T, Nullable<DateTime>) Licenseable.ExpiresAt<T>(T, Nullable<DateTime>) Licenseable.SupportExpiresAt<T>(T, Nullable<DateTime>) Licenseable.LicensedTo<T>(T, String, String, String, String, Byte[]) Licenseable.ForProduct<T>(T, String, String, String, String, String) Licenseable.ForAnyComponent<T>(T) Licenseable.WithComponents<T>(T, String[]) Licenseable.WithField<T>(T, String, String) Licenseable.WithFields<T>(T, IDictionary<String, String>) Licenseable.WithFields<T>(T, Field[]) Licenseable.WithFeature<T>(T, String, String, Byte[], Nullable<DateTime>, Byte[]) Licenseable.WithFeature<T>(T, Feature) Licenseable.WithFeatures<T>(T, Feature[]) Licenseable.WithRestrictions<T>(T, Restriction[]) Licenseable.ForBetaTesters<T>(T, String, String, Nullable<DateTime>) Licenseable.WithTrialDays<T>(T, Nullable<Int32>) Licenseable.WithTrialRunTime<T>(T, Nullable<TimeSpan>) Licenseable.WithMaximumRunningInstances<T>(T, Nullable<Int32>) Licenseable.WithMaximumRunCount<T>(T, Nullable<Int32>) Licenseable.WithHardwareKey<T>(T, String) Licenseable.UseOnlyAt<T>(T, String) Licenseable.NotForVirtualEnvironment<T>(T) Licenseable.RestrictedToProcess<T>(T, String[]) Licenseable.CopyFrom<T>(T, T) Licenseable.ToRestrictedDomain<T>(T, String, String) Licenseable.SignWith(ILicense, ISignatureProvider) Licenseable.SignWithKeys(ILicense, String, String) Licenseable.ValidateWith(ILicense, ISignatureProvider) Licenseable.ValidateWithPublicKey(ILicense, String) Licenseable.Build(ILicense)"
  },
  "api/Babel.Licensing.ILicenseBuilder.html": {
    "href": "api/Babel.Licensing.ILicenseBuilder.html",
    "title": "Interface ILicenseBuilder | C# OCR & Tesseract API | IronOCR",
    "keywords": "Interface ILicenseBuilder Namespace : Babel.Licensing Assembly : IronOcr.dll Syntax public interface ILicenseBuilder Properties SignatureProvider Declaration ISignatureProvider SignatureProvider { get; set; } Property Value Type Description ISignatureProvider Methods AddOrUpdate(ILicense) Declaration void AddOrUpdate(ILicense license) Parameters Type Name Description ILicense license Load(Stream) Declaration void Load(Stream stream) Parameters Type Name Description System.IO.Stream stream Remove(ILicense) Declaration bool Remove(ILicense license) Parameters Type Name Description ILicense license Returns Type Description System.Boolean Save(Stream) Declaration void Save(Stream stream) Parameters Type Name Description System.IO.Stream stream Sign() Declaration void Sign() ToLicenses() Declaration IEnumerable<ILicense> ToLicenses() Returns Type Description System.Collections.Generic.IEnumerable < ILicense > Validate() Declaration bool Validate() Returns Type Description System.Boolean Extension Methods Licenseable.ToReadableString(ILicenseBuilder, String) Licenseable.AddLicense<T>(T, ILicense) Licenseable.RemoveLicense<T>(T, ILicense) Licenseable.SignWith(ILicenseBuilder, ISignatureProvider) Licenseable.SignWithKeys(ILicenseBuilder, String, String) Licenseable.ValidateSignature(ILicenseBuilder) Licenseable.Load(ILicenseBuilder, String) Licenseable.Save<T>(T, String)"
  },
  "api/Babel.Licensing.ILicenseBuilderProvider.html": {
    "href": "api/Babel.Licensing.ILicenseBuilderProvider.html",
    "title": "Interface ILicenseBuilderProvider | C# OCR & Tesseract API | IronOCR",
    "keywords": "Interface ILicenseBuilderProvider Namespace : Babel.Licensing Assembly : IronOcr.dll Syntax public interface ILicenseBuilderProvider Methods GetLicenseBuilder() Declaration ILicenseBuilder GetLicenseBuilder() Returns Type Description ILicenseBuilder"
  },
  "api/Babel.Licensing.ILicenseBuilderProvider-1.html": {
    "href": "api/Babel.Licensing.ILicenseBuilderProvider-1.html",
    "title": "Interface ILicenseBuilderProvider<T> | C# OCR & Tesseract API | IronOCR",
    "keywords": "Interface ILicenseBuilderProvider<T> Inherited Members ILicenseBuilderProvider.GetLicenseBuilder() Namespace : Babel.Licensing Assembly : IronOcr.dll Syntax public interface ILicenseBuilderProvider<T> : ILicenseBuilderProvider where T : ILicense Type Parameters Name Description T Inherited members GetLicenseBuilder()"
  },
  "api/Babel.Licensing.ILicenseContext.html": {
    "href": "api/Babel.Licensing.ILicenseContext.html",
    "title": "Interface ILicenseContext | C# OCR & Tesseract API | IronOCR",
    "keywords": "Interface ILicenseContext Inherited Members ILicenseServiceProvider.GetService(Type) Namespace : Babel.Licensing Assembly : IronOcr.dll Syntax public interface ILicenseContext : ILicenseServiceProvider Properties ContextName Declaration string ContextName { get; } Property Value Type Description System.String FallbackContext Declaration ILicenseContext FallbackContext { get; set; } Property Value Type Description ILicenseContext Settings Declaration ContextSettings Settings { get; set; } Property Value Type Description ContextSettings Methods LoadLicenseKey(Type) Declaration string LoadLicenseKey(Type type) Parameters Type Name Description System.Type type Returns Type Description System.String SaveLicenseKey(Type, String) Declaration void SaveLicenseKey(Type type, string key) Parameters Type Name Description System.Type type System.String key Inherited members GetService(Type)"
  },
  "api/Babel.Licensing.ILicenseFactory.html": {
    "href": "api/Babel.Licensing.ILicenseFactory.html",
    "title": "Interface ILicenseFactory | C# OCR & Tesseract API | IronOCR",
    "keywords": "Interface ILicenseFactory Inherited Members ISignatureProviderFactory.CreateSignatureProvider(String) IRestrictionFactory.CreateRestriction(String) Namespace : Babel.Licensing Assembly : IronOcr.dll Syntax public interface ILicenseFactory : ISignatureProviderFactory, IRestrictionFactory Methods CreateFeature(String) Declaration Feature CreateFeature(string name) Parameters Type Name Description System.String name Returns Type Description Feature CreateField(String) Declaration Field CreateField(string name) Parameters Type Name Description System.String name Returns Type Description Field Inherited members CreateSignatureProvider(String) CreateRestriction(String)"
  },
  "api/Babel.Licensing.ILicenseProvider.html": {
    "href": "api/Babel.Licensing.ILicenseProvider.html",
    "title": "Interface ILicenseProvider | C# OCR & Tesseract API | IronOCR",
    "keywords": "Interface ILicenseProvider Namespace : Babel.Licensing Assembly : IronOcr.dll Syntax public interface ILicenseProvider Methods GetLicense(ILicenseContext, Type, Object) Declaration ILicense GetLicense(ILicenseContext context, Type type, object instance) Parameters Type Name Description ILicenseContext context System.Type type System.Object instance Returns Type Description ILicense"
  },
  "api/Babel.Licensing.ILicenseSerializable.html": {
    "href": "api/Babel.Licensing.ILicenseSerializable.html",
    "title": "Interface ILicenseSerializable | C# OCR & Tesseract API | IronOCR",
    "keywords": "Interface ILicenseSerializable Namespace : Babel.Licensing Assembly : IronOcr.dll Syntax public interface ILicenseSerializable Methods Read(Object) Declaration void Read(object context) Parameters Type Name Description System.Object context Write(Object) Declaration void Write(object context) Parameters Type Name Description System.Object context"
  },
  "api/Babel.Licensing.ILicenseServiceProvider.html": {
    "href": "api/Babel.Licensing.ILicenseServiceProvider.html",
    "title": "Interface ILicenseServiceProvider | C# OCR & Tesseract API | IronOCR",
    "keywords": "Interface ILicenseServiceProvider Namespace : Babel.Licensing Assembly : IronOcr.dll Syntax public interface ILicenseServiceProvider Methods GetService(Type) Declaration object GetService(Type serviceType) Parameters Type Name Description System.Type serviceType Returns Type Description System.Object"
  },
  "api/Babel.Licensing.INetworkInformation.html": {
    "href": "api/Babel.Licensing.INetworkInformation.html",
    "title": "Interface INetworkInformation | C# OCR & Tesseract API | IronOCR",
    "keywords": "Interface INetworkInformation Namespace : Babel.Licensing Assembly : IronOcr.dll Syntax public interface INetworkInformation Properties NetworkDomains Declaration IEnumerable<string> NetworkDomains { get; } Property Value Type Description System.Collections.Generic.IEnumerable < System.String > NetworkIPs Declaration IEnumerable<string> NetworkIPs { get; } Property Value Type Description System.Collections.Generic.IEnumerable < System.String >"
  },
  "api/Babel.Licensing.IObjectListener.html": {
    "href": "api/Babel.Licensing.IObjectListener.html",
    "title": "Interface IObjectListener | C# OCR & Tesseract API | IronOCR",
    "keywords": "Interface IObjectListener Namespace : Babel.Licensing Assembly : IronOcr.dll Syntax public interface IObjectListener Methods Update(IObservableObject, Object[]) Declaration void Update(IObservableObject observable, params object[] args) Parameters Type Name Description IObservableObject observable System.Object [] args"
  },
  "api/Babel.Licensing.IObservableObject.html": {
    "href": "api/Babel.Licensing.IObservableObject.html",
    "title": "Interface IObservableObject | C# OCR & Tesseract API | IronOCR",
    "keywords": "Interface IObservableObject Namespace : Babel.Licensing Assembly : IronOcr.dll Syntax public interface IObservableObject Methods Attach(IObjectListener) Declaration void Attach(IObjectListener listener) Parameters Type Name Description IObjectListener listener Detach(IObjectListener) Declaration void Detach(IObjectListener listener) Parameters Type Name Description IObjectListener listener Notify(Object[]) Declaration void Notify(params object[] args) Parameters Type Name Description System.Object [] args"
  },
  "api/Babel.Licensing.IReadableLicenseString.html": {
    "href": "api/Babel.Licensing.IReadableLicenseString.html",
    "title": "Interface IReadableLicenseString | C# OCR & Tesseract API | IronOCR",
    "keywords": "Interface IReadableLicenseString Namespace : Babel.Licensing Assembly : IronOcr.dll Syntax public interface IReadableLicenseString Methods Parse(String) Declaration void Parse(string license) Parameters Type Name Description System.String license ToReadableString(String) Declaration string ToReadableString(string format) Parameters Type Name Description System.String format Returns Type Description System.String"
  },
  "api/Babel.Licensing.IReportSender.html": {
    "href": "api/Babel.Licensing.IReportSender.html",
    "title": "Interface IReportSender | C# OCR & Tesseract API | IronOCR",
    "keywords": "Interface IReportSender Namespace : Babel.Licensing Assembly : IronOcr.dll Syntax public interface IReportSender Methods Send(Report) Declaration bool Send(Report report) Parameters Type Name Description Report report Returns Type Description System.Boolean Events AfterSendReport Declaration event EventHandler<AfterSendReportEventArgs> AfterSendReport Event Type Type Description System.EventHandler < AfterSendReportEventArgs > BeforeSendReport Declaration event EventHandler<BeforeSendReportEventArgs> BeforeSendReport Event Type Type Description System.EventHandler < BeforeSendReportEventArgs >"
  },
  "api/Babel.Licensing.IRestrictionFactory.html": {
    "href": "api/Babel.Licensing.IRestrictionFactory.html",
    "title": "Interface IRestrictionFactory | C# OCR & Tesseract API | IronOCR",
    "keywords": "Interface IRestrictionFactory Namespace : Babel.Licensing Assembly : IronOcr.dll Syntax public interface IRestrictionFactory Methods CreateRestriction(String) Declaration Restriction CreateRestriction(string type) Parameters Type Name Description System.String type Returns Type Description Restriction"
  },
  "api/Babel.Licensing.IRSAKeys.html": {
    "href": "api/Babel.Licensing.IRSAKeys.html",
    "title": "Interface IRSAKeys | C# OCR & Tesseract API | IronOCR",
    "keywords": "Interface IRSAKeys Namespace : Babel.Licensing Assembly : IronOcr.dll Syntax public interface IRSAKeys Properties HasPrivateKey Declaration bool HasPrivateKey { get; } Property Value Type Description System.Boolean HasPublicKey Declaration bool HasPublicKey { get; } Property Value Type Description System.Boolean KeyPair Declaration byte[] KeyPair { get; set; } Property Value Type Description System.Byte [] RSA Declaration RSA RSA { get; set; } Property Value Type Description System.Security.Cryptography.RSA"
  },
  "api/Babel.Licensing.ISignatureKeyInfo.html": {
    "href": "api/Babel.Licensing.ISignatureKeyInfo.html",
    "title": "Interface ISignatureKeyInfo | C# OCR & Tesseract API | IronOCR",
    "keywords": "Interface ISignatureKeyInfo Namespace : Babel.Licensing Assembly : IronOcr.dll Syntax public interface ISignatureKeyInfo Properties AlgorithmName Declaration string AlgorithmName { get; } Property Value Type Description System.String GenerateKeyInfo Declaration bool GenerateKeyInfo { get; set; } Property Value Type Description System.Boolean HasKeySize Declaration bool HasKeySize { get; } Property Value Type Description System.Boolean HasPrivateKey Declaration bool HasPrivateKey { get; } Property Value Type Description System.Boolean HasPublicKey Declaration bool HasPublicKey { get; } Property Value Type Description System.Boolean KeySize Declaration int KeySize { get; } Property Value Type Description System.Int32"
  },
  "api/Babel.Licensing.ISignatureProvider.html": {
    "href": "api/Babel.Licensing.ISignatureProvider.html",
    "title": "Interface ISignatureProvider | C# OCR & Tesseract API | IronOCR",
    "keywords": "Interface ISignatureProvider Namespace : Babel.Licensing Assembly : IronOcr.dll Syntax public interface ISignatureProvider Properties AlgorithmName Declaration string AlgorithmName { get; } Property Value Type Description System.String Methods SignData(Byte[]) Declaration byte[] SignData(byte[] data) Parameters Type Name Description System.Byte [] data Returns Type Description System.Byte [] VerifyData(Byte[], Byte[]) Declaration bool VerifyData(byte[] data, byte[] signature) Parameters Type Name Description System.Byte [] data System.Byte [] signature Returns Type Description System.Boolean"
  },
  "api/Babel.Licensing.ISignatureProviderFactory.html": {
    "href": "api/Babel.Licensing.ISignatureProviderFactory.html",
    "title": "Interface ISignatureProviderFactory | C# OCR & Tesseract API | IronOCR",
    "keywords": "Interface ISignatureProviderFactory Namespace : Babel.Licensing Assembly : IronOcr.dll Syntax public interface ISignatureProviderFactory Methods CreateSignatureProvider(String) Declaration ISignatureProvider CreateSignatureProvider(string name) Parameters Type Name Description System.String name Returns Type Description ISignatureProvider"
  },
  "api/Babel.Licensing.ISignatureWriter.html": {
    "href": "api/Babel.Licensing.ISignatureWriter.html",
    "title": "Interface ISignatureWriter | C# OCR & Tesseract API | IronOCR",
    "keywords": "Interface ISignatureWriter Namespace : Babel.Licensing Assembly : IronOcr.dll Syntax public interface ISignatureWriter Methods WritePem(Stream, Boolean) Declaration void WritePem(Stream stream, bool publicKeyOnly) Parameters Type Name Description System.IO.Stream stream System.Boolean publicKeyOnly"
  },
  "api/Babel.Licensing.ISystemInformation.html": {
    "href": "api/Babel.Licensing.ISystemInformation.html",
    "title": "Interface ISystemInformation | C# OCR & Tesseract API | IronOCR",
    "keywords": "Interface ISystemInformation Namespace : Babel.Licensing Assembly : IronOcr.dll Syntax public interface ISystemInformation Properties BiosSerialNumber Declaration string BiosSerialNumber { get; } Property Value Type Description System.String CurrentMemoryUsage Declaration long CurrentMemoryUsage { get; } Property Value Type Description System.Int64 DiskSerialNumbers Declaration string[] DiskSerialNumbers { get; } Property Value Type Description System.String [] DisplayProperties Declaration IDictionary<string, object> DisplayProperties { get; } Property Value Type Description System.Collections.Generic.IDictionary < System.String , System.Object > EthernetCards Declaration string[] EthernetCards { get; } Property Value Type Description System.String [] LogicalProcessorCount Declaration int LogicalProcessorCount { get; } Property Value Type Description System.Int32 MotherboardSerialNumber Declaration string MotherboardSerialNumber { get; } Property Value Type Description System.String OperatingSystem Declaration string OperatingSystem { get; } Property Value Type Description System.String ProcessorArchitecture Declaration string ProcessorArchitecture { get; } Property Value Type Description System.String ProcessorCount Declaration int ProcessorCount { get; } Property Value Type Description System.Int32 ProcessorFeatures Declaration string[] ProcessorFeatures { get; } Property Value Type Description System.String [] ProcessorId Declaration string ProcessorId { get; } Property Value Type Description System.String ProcessorName Declaration string ProcessorName { get; } Property Value Type Description System.String ProcessorType Declaration string ProcessorType { get; } Property Value Type Description System.String SystemManufacturer Declaration string SystemManufacturer { get; } Property Value Type Description System.String SystemName Declaration string SystemName { get; } Property Value Type Description System.String SystemProductName Declaration string SystemProductName { get; } Property Value Type Description System.String TotalPhysicalMemory Declaration long TotalPhysicalMemory { get; } Property Value Type Description System.Int64"
  },
  "api/Babel.Licensing.KeyHelpers.html": {
    "href": "api/Babel.Licensing.KeyHelpers.html",
    "title": "Class KeyHelpers | C# OCR & Tesseract API | IronOCR",
    "keywords": "Class KeyHelpers Inheritance System.Object KeyHelpers Namespace : Babel.Licensing Assembly : IronOcr.dll Syntax public static class KeyHelpers : Object Methods ToReadableKey(String, Int32) Declaration public static string ToReadableKey(string key, int tokenSize) Parameters Type Name Description System.String key System.Int32 tokenSize Returns Type Description System.String"
  },
  "api/Babel.Licensing.Licenseable.html": {
    "href": "api/Babel.Licensing.Licenseable.html",
    "title": "Class Licenseable | C# OCR & Tesseract API | IronOCR",
    "keywords": "Class Licenseable Inheritance System.Object Licenseable Namespace : Babel.Licensing Assembly : IronOcr.dll Syntax public static class Licenseable : Object Methods AddLicense<T>(T, ILicense) Declaration public static T AddLicense<T>(this T builder, ILicense license) where T : ILicenseBuilder Parameters Type Name Description T builder ILicense license Returns Type Description T Type Parameters Name Description T Build(ILicense) Declaration public static ILicenseBuilder Build(this ILicense license) Parameters Type Name Description ILicense license Returns Type Description ILicenseBuilder CopyFrom<T>(T, T) Declaration public static T CopyFrom<T>(this T license, T other) where T : ILicense Parameters Type Name Description T license T other Returns Type Description T Type Parameters Name Description T ExpiresAt<T>(T, Nullable<DateTime>) Declaration public static T ExpiresAt<T>(this T license, Nullable<DateTime> expireDate) where T : ILicense Parameters Type Name Description T license System.Nullable < System.DateTime > expireDate Returns Type Description T Type Parameters Name Description T ForAnyAssembly<T>(T) Declaration public static T ForAnyAssembly<T>(this T license) where T : ILicense Parameters Type Name Description T license Returns Type Description T Type Parameters Name Description T ForAnyComponent<T>(T) Declaration public static T ForAnyComponent<T>(this T license) where T : ILicense Parameters Type Name Description T license Returns Type Description T Type Parameters Name Description T ForAssembly<T>(T, Assembly) Declaration public static T ForAssembly<T>(this T license, Assembly assembly) where T : ILicense Parameters Type Name Description T license System.Reflection.Assembly assembly Returns Type Description T Type Parameters Name Description T ForAssembly<T>(T, String) Declaration public static T ForAssembly<T>(this T license, string fullName) where T : ILicense Parameters Type Name Description T license System.String fullName Returns Type Description T Type Parameters Name Description T ForBetaTesters<T>(T, String, String, Nullable<DateTime>) Declaration public static T ForBetaTesters<T>(this T license, string recentChanges, string buildType = \"\", Nullable<DateTime> expires = null) where T : ILicense Parameters Type Name Description T license System.String recentChanges System.String buildType System.Nullable < System.DateTime > expires Returns Type Description T Type Parameters Name Description T ForProduct<T>(T, String, String, String, String, String) Declaration public static T ForProduct<T>(this T license, string name, string version = null, string description = null, string url = null, string copyright = null) where T : ILicense Parameters Type Name Description T license System.String name System.String version System.String description System.String url System.String copyright Returns Type Description T Type Parameters Name Description T IssuedAt<T>(T, Nullable<DateTime>) Declaration public static T IssuedAt<T>(this T license, Nullable<DateTime> issueDate) where T : ILicense Parameters Type Name Description T license System.Nullable < System.DateTime > issueDate Returns Type Description T Type Parameters Name Description T LicensedTo<T>(T, String, String, String, String, Byte[]) Declaration public static T LicensedTo<T>(this T license, string name, string contactInfo = null, string company = null, string url = null, byte[] data = null) where T : ILicense Parameters Type Name Description T license System.String name System.String contactInfo System.String company System.String url System.Byte [] data Returns Type Description T Type Parameters Name Description T Load(ILicenseBuilder, String) Declaration public static ILicenseBuilder Load(this ILicenseBuilder builder, string path) Parameters Type Name Description ILicenseBuilder builder System.String path Returns Type Description ILicenseBuilder NotForVirtualEnvironment<T>(T) Declaration public static T NotForVirtualEnvironment<T>(this T license) where T : ILicense Parameters Type Name Description T license Returns Type Description T Type Parameters Name Description T RemoveLicense<T>(T, ILicense) Declaration public static T RemoveLicense<T>(this T builder, ILicense license) where T : ILicenseBuilder Parameters Type Name Description T builder ILicense license Returns Type Description T Type Parameters Name Description T RestrictedToProcess<T>(T, String[]) Declaration public static T RestrictedToProcess<T>(this T license, params string[] process) where T : ILicense Parameters Type Name Description T license System.String [] process Returns Type Description T Type Parameters Name Description T Save<T>(T, String) Declaration public static T Save<T>(this T builder, string path) where T : ILicenseBuilder Parameters Type Name Description T builder System.String path Returns Type Description T Type Parameters Name Description T SignWith(ILicense, ISignatureProvider) Declaration public static ILicenseBuilder SignWith(this ILicense license, ISignatureProvider signature) Parameters Type Name Description ILicense license ISignatureProvider signature Returns Type Description ILicenseBuilder SignWith(ILicenseBuilder, ISignatureProvider) Declaration public static ILicenseBuilder SignWith(this ILicenseBuilder builder, ISignatureProvider provider) Parameters Type Name Description ILicenseBuilder builder ISignatureProvider provider Returns Type Description ILicenseBuilder SignWithKeys(ILicense, String, String) Declaration public static ILicenseBuilder SignWithKeys(this ILicense license, string publicKey, string privateKey) Parameters Type Name Description ILicense license System.String publicKey System.String privateKey Returns Type Description ILicenseBuilder SignWithKeys(ILicenseBuilder, String, String) Declaration public static ILicenseBuilder SignWithKeys(this ILicenseBuilder builder, string publicKey, string privateKey) Parameters Type Name Description ILicenseBuilder builder System.String publicKey System.String privateKey Returns Type Description ILicenseBuilder SupportExpiresAt<T>(T, Nullable<DateTime>) Declaration public static T SupportExpiresAt<T>(this T license, Nullable<DateTime> expireDate) where T : ILicense Parameters Type Name Description T license System.Nullable < System.DateTime > expireDate Returns Type Description T Type Parameters Name Description T ToReadableString(ILicenseBuilder, String) Declaration public static string ToReadableString(this ILicenseBuilder builder, string format = \"\") Parameters Type Name Description ILicenseBuilder builder System.String format Returns Type Description System.String ToRestrictedDomain<T>(T, String, String) Declaration public static T ToRestrictedDomain<T>(this T license, string domain, string role = null) where T : ILicense Parameters Type Name Description T license System.String domain System.String role Returns Type Description T Type Parameters Name Description T UseOnlyAt<T>(T, String) Declaration public static T UseOnlyAt<T>(this T license, string usage) where T : ILicense Parameters Type Name Description T license System.String usage Returns Type Description T Type Parameters Name Description T ValidateSignature(ILicenseBuilder) Declaration public static ILicenseBuilder ValidateSignature(this ILicenseBuilder builder) Parameters Type Name Description ILicenseBuilder builder Returns Type Description ILicenseBuilder ValidateWith(ILicense, ISignatureProvider) Declaration public static ILicenseBuilder ValidateWith(this ILicense license, ISignatureProvider signature) Parameters Type Name Description ILicense license ISignatureProvider signature Returns Type Description ILicenseBuilder ValidateWithPublicKey(ILicense, String) Declaration public static ILicenseBuilder ValidateWithPublicKey(this ILicense license, string publicKey) Parameters Type Name Description ILicense license System.String publicKey Returns Type Description ILicenseBuilder WithComponents<T>(T, String[]) Declaration public static T WithComponents<T>(this T license, params string[] components) where T : ILicense Parameters Type Name Description T license System.String [] components Returns Type Description T Type Parameters Name Description T WithFeature<T>(T, Feature) Declaration public static T WithFeature<T>(this T license, Feature feature) where T : ILicense Parameters Type Name Description T license Feature feature Returns Type Description T Type Parameters Name Description T WithFeature<T>(T, String, String, Byte[], Nullable<DateTime>, Byte[]) Declaration public static T WithFeature<T>(this T license, string name, string description, byte[] data, Nullable<DateTime> expires = null, byte[] key = null) where T : ILicense Parameters Type Name Description T license System.String name System.String description System.Byte [] data System.Nullable < System.DateTime > expires System.Byte [] key Returns Type Description T Type Parameters Name Description T WithFeatures<T>(T, Feature[]) Declaration public static T WithFeatures<T>(this T license, params Feature[] features) where T : ILicense Parameters Type Name Description T license Feature [] features Returns Type Description T Type Parameters Name Description T WithField<T>(T, String, String) Declaration public static T WithField<T>(this T license, string name, string value) where T : ILicense Parameters Type Name Description T license System.String name System.String value Returns Type Description T Type Parameters Name Description T WithFields<T>(T, Field[]) Declaration public static T WithFields<T>(this T license, params Field[] fields) where T : ILicense Parameters Type Name Description T license Field [] fields Returns Type Description T Type Parameters Name Description T WithFields<T>(T, IDictionary<String, String>) Declaration public static T WithFields<T>(this T license, IDictionary<string, string> fields) where T : ILicense Parameters Type Name Description T license System.Collections.Generic.IDictionary < System.String , System.String > fields Returns Type Description T Type Parameters Name Description T WithHardwareKey<T>(T, String) Declaration public static T WithHardwareKey<T>(this T license, string hardwareKey) where T : ILicense Parameters Type Name Description T license System.String hardwareKey Returns Type Description T Type Parameters Name Description T WithId<T>(T, String) Declaration public static T WithId<T>(this T license, string id) where T : ILicense Parameters Type Name Description T license System.String id Returns Type Description T Type Parameters Name Description T WithMaximumRunCount<T>(T, Nullable<Int32>) Declaration public static T WithMaximumRunCount<T>(this T license, Nullable<int> runCount) where T : ILicense Parameters Type Name Description T license System.Nullable < System.Int32 > runCount Returns Type Description T Type Parameters Name Description T WithMaximumRunningInstances<T>(T, Nullable<Int32>) Declaration public static T WithMaximumRunningInstances<T>(this T license, Nullable<int> instanceCount) where T : ILicense Parameters Type Name Description T license System.Nullable < System.Int32 > instanceCount Returns Type Description T Type Parameters Name Description T WithRestrictions<T>(T, Restriction[]) Declaration public static T WithRestrictions<T>(this T license, params Restriction[] restrictions) where T : ILicense Parameters Type Name Description T license Restriction [] restrictions Returns Type Description T Type Parameters Name Description T WithTrialDays<T>(T, Nullable<Int32>) Declaration public static T WithTrialDays<T>(this T license, Nullable<int> trialDays) where T : ILicense Parameters Type Name Description T license System.Nullable < System.Int32 > trialDays Returns Type Description T Type Parameters Name Description T WithTrialRunTime<T>(T, Nullable<TimeSpan>) Declaration public static T WithTrialRunTime<T>(this T license, Nullable<TimeSpan> runTime) where T : ILicense Parameters Type Name Description T license System.Nullable < System.TimeSpan > runTime Returns Type Description T Type Parameters Name Description T WithType<T>(T, String) Declaration public static T WithType<T>(this T license, string type) where T : ILicense Parameters Type Name Description T license System.String type Returns Type Description T Type Parameters Name Description T WithUniqueId<T>(T, String) Declaration public static T WithUniqueId<T>(this T license, string prefix = \"\") where T : ILicense Parameters Type Name Description T license System.String prefix Returns Type Description T Type Parameters Name Description T"
  },
  "api/Babel.Licensing.Licensee.html": {
    "href": "api/Babel.Licensing.Licensee.html",
    "title": "Class Licensee | C# OCR & Tesseract API | IronOCR",
    "keywords": "Class Licensee Inheritance System.Object Licensee Namespace : Babel.Licensing Assembly : IronOcr.dll Syntax public sealed class Licensee : Object Constructors Licensee() Declaration public Licensee() Licensee(Licensee) Declaration public Licensee(Licensee other) Parameters Type Name Description Licensee other Properties Company Declaration public string Company { get; set; } Property Value Type Description System.String ContactInfo Declaration public string ContactInfo { get; set; } Property Value Type Description System.String Data Declaration public byte[] Data { get; set; } Property Value Type Description System.Byte [] Id Declaration public string Id { get; set; } Property Value Type Description System.String Name Declaration public string Name { get; set; } Property Value Type Description System.String Url Declaration public string Url { get; set; } Property Value Type Description System.String"
  },
  "api/Babel.Licensing.LicenseFileFoundEventArgs.html": {
    "href": "api/Babel.Licensing.LicenseFileFoundEventArgs.html",
    "title": "Class LicenseFileFoundEventArgs | C# OCR & Tesseract API | IronOCR",
    "keywords": "Class LicenseFileFoundEventArgs Inheritance System.Object LicenseFileFoundEventArgs Namespace : Babel.Licensing Assembly : IronOcr.dll Syntax public class LicenseFileFoundEventArgs : EventArgs Constructors LicenseFileFoundEventArgs(String) Declaration public LicenseFileFoundEventArgs(string licenseFilePath) Parameters Type Name Description System.String licenseFilePath Properties LicenseFilePath Declaration public string LicenseFilePath { get; } Property Value Type Description System.String Skip Declaration public bool Skip { get; set; } Property Value Type Description System.Boolean"
  },
  "api/Babel.Licensing.LicenseReportOptions.html": {
    "href": "api/Babel.Licensing.LicenseReportOptions.html",
    "title": "Class LicenseReportOptions | C# OCR & Tesseract API | IronOCR",
    "keywords": "Class LicenseReportOptions Inheritance System.Object LicenseReportOptions Namespace : Babel.Licensing Assembly : IronOcr.dll Syntax public class LicenseReportOptions : Object Constructors LicenseReportOptions() Declaration public LicenseReportOptions() Properties CollectFeaturesAccess Declaration public bool CollectFeaturesAccess { get; set; } Property Value Type Description System.Boolean CollectFieldsAccess Declaration public bool CollectFieldsAccess { get; set; } Property Value Type Description System.Boolean CollectMembers Declaration public List<string> CollectMembers { get; set; } Property Value Type Description System.Collections.Generic.List < System.String > CollectRestrictionsAccess Declaration public bool CollectRestrictionsAccess { get; set; } Property Value Type Description System.Boolean"
  },
  "api/Babel.Licensing.LicenseRestrictionProvider.html": {
    "href": "api/Babel.Licensing.LicenseRestrictionProvider.html",
    "title": "Class LicenseRestrictionProvider | C# OCR & Tesseract API | IronOCR",
    "keywords": "Class LicenseRestrictionProvider Inheritance System.Object LicenseRestrictionProvider Namespace : Babel.Licensing Assembly : IronOcr.dll Syntax public abstract class LicenseRestrictionProvider : Object Constructors LicenseRestrictionProvider() Declaration protected LicenseRestrictionProvider() Methods GetLicenseRestriction(String, Type, Object) Declaration public abstract Restriction GetLicenseRestriction(string restriction, Type type, object instance) Parameters Type Name Description System.String restriction System.Type type System.Object instance Returns Type Description Restriction"
  },
  "api/Babel.Licensing.LicenseRestrictionProviderAttribute.html": {
    "href": "api/Babel.Licensing.LicenseRestrictionProviderAttribute.html",
    "title": "Class LicenseRestrictionProviderAttribute | C# OCR & Tesseract API | IronOCR",
    "keywords": "Class LicenseRestrictionProviderAttribute Inheritance System.Object LicenseRestrictionProviderAttribute Namespace : Babel.Licensing Assembly : IronOcr.dll Syntax public sealed class LicenseRestrictionProviderAttribute : Attribute Constructors LicenseRestrictionProviderAttribute() Declaration public LicenseRestrictionProviderAttribute() LicenseRestrictionProviderAttribute(String) Declaration public LicenseRestrictionProviderAttribute(string name) Parameters Type Name Description System.String name LicenseRestrictionProviderAttribute(Type) Declaration public LicenseRestrictionProviderAttribute(Type type) Parameters Type Name Description System.Type type Properties LicenseRestrictionProvider Declaration public Type LicenseRestrictionProvider { get; } Property Value Type Description System.Type RestrictionProviderName Declaration public string RestrictionProviderName { get; } Property Value Type Description System.String RestrictionProviderType Declaration public Type RestrictionProviderType { get; } Property Value Type Description System.Type Methods Equals(Object) Declaration public override bool Equals(object obj) Parameters Type Name Description System.Object obj Returns Type Description System.Boolean GetHashCode() Declaration public override int GetHashCode() Returns Type Description System.Int32"
  },
  "api/Babel.Licensing.LicenseServices.html": {
    "href": "api/Babel.Licensing.LicenseServices.html",
    "title": "Class LicenseServices | C# OCR & Tesseract API | IronOCR",
    "keywords": "Class LicenseServices Inheritance System.Object LicenseServices Implements ILicenseServiceProvider Namespace : Babel.Licensing Assembly : IronOcr.dll Syntax public sealed class LicenseServices : Object, ILicenseServiceProvider Fields Current Declaration public static readonly LicenseServices Current Field Value Type Description LicenseServices Properties LicenseContext Declaration public ILicenseContext LicenseContext { get; set; } Property Value Type Description ILicenseContext Methods AddService(Type, Object) Declaration public void AddService(Type serviceType, object service) Parameters Type Name Description System.Type serviceType System.Object service GetService(Type) Declaration public object GetService(Type serviceType) Parameters Type Name Description System.Type serviceType Returns Type Description System.Object Implements ILicenseServiceProvider"
  },
  "api/Babel.Licensing.LicenseStatus.html": {
    "href": "api/Babel.Licensing.LicenseStatus.html",
    "title": "Class LicenseStatus | C# OCR & Tesseract API | IronOCR",
    "keywords": "Class LicenseStatus Inheritance System.Object LicenseStatus Namespace : Babel.Licensing Assembly : IronOcr.dll Syntax public sealed class LicenseStatus : Enum Fields AssemblyNotLicensed Declaration public const LicenseStatus AssemblyNotLicensed Field Value Type Description LicenseStatus AssemblyNotSigned Declaration public const LicenseStatus AssemblyNotSigned Field Value Type Description LicenseStatus BadLicenseFormat Declaration public const LicenseStatus BadLicenseFormat Field Value Type Description LicenseStatus BadRestrictionFormat Declaration public const LicenseStatus BadRestrictionFormat Field Value Type Description LicenseStatus ComponentNotLicensed Declaration public const LicenseStatus ComponentNotLicensed Field Value Type Description LicenseStatus InternalError Declaration public const LicenseStatus InternalError Field Value Type Description LicenseStatus InvalidRestriction Declaration public const LicenseStatus InvalidRestriction Field Value Type Description LicenseStatus InvalidSignature Declaration public const LicenseStatus InvalidSignature Field Value Type Description LicenseStatus LicenseExpired Declaration public const LicenseStatus LicenseExpired Field Value Type Description LicenseStatus MultipleLicenseValidationErrors Declaration public const LicenseStatus MultipleLicenseValidationErrors Field Value Type Description LicenseStatus NoPublicKey Declaration public const LicenseStatus NoPublicKey Field Value Type Description LicenseStatus NoSignature Declaration public const LicenseStatus NoSignature Field Value Type Description LicenseStatus RestrictionExpired Declaration public const LicenseStatus RestrictionExpired Field Value Type Description LicenseStatus TimeRollback Declaration public const LicenseStatus TimeRollback Field Value Type Description LicenseStatus Valid Declaration public const LicenseStatus Valid Field Value Type Description LicenseStatus value__ Declaration public int value__ Field Value Type Description System.Int32"
  },
  "api/Babel.Licensing.LicenseUsageReportOptions.html": {
    "href": "api/Babel.Licensing.LicenseUsageReportOptions.html",
    "title": "Class LicenseUsageReportOptions | C# OCR & Tesseract API | IronOCR",
    "keywords": "Class LicenseUsageReportOptions Inheritance System.Object LicenseUsageReportOptions Namespace : Babel.Licensing Assembly : IronOcr.dll Syntax public class LicenseUsageReportOptions : Object Constructors LicenseUsageReportOptions() Declaration public LicenseUsageReportOptions() Properties EncryptionEncoding Declaration public IEncoding EncryptionEncoding { get; set; } Property Value Type Description IEncoding EncryptionKey Declaration public string EncryptionKey { get; set; } Property Value Type Description System.String Environment Declaration public EnvironmentReportOptions Environment { get; set; } Property Value Type Description EnvironmentReportOptions Formatted Declaration public bool Formatted { get; set; } Property Value Type Description System.Boolean License Declaration public LicenseReportOptions License { get; set; } Property Value Type Description LicenseReportOptions Network Declaration public NetworkReportOptions Network { get; set; } Property Value Type Description NetworkReportOptions System Declaration public SystemReportOptions System { get; set; } Property Value Type Description SystemReportOptions"
  },
  "api/Babel.Licensing.LicenseValidationResult.html": {
    "href": "api/Babel.Licensing.LicenseValidationResult.html",
    "title": "Class LicenseValidationResult | C# OCR & Tesseract API | IronOCR",
    "keywords": "Class LicenseValidationResult Inheritance System.Object LicenseValidationResult Namespace : Babel.Licensing Assembly : IronOcr.dll Syntax public class LicenseValidationResult : Object Constructors LicenseValidationResult(String, Exception) Declaration public LicenseValidationResult(string licenseId, Exception exception) Parameters Type Name Description System.String licenseId System.Exception exception Properties Exception Declaration public Exception Exception { get; set; } Property Value Type Description System.Exception LicenseId Declaration public string LicenseId { get; set; } Property Value Type Description System.String Restriction Declaration public string Restriction { get; set; } Property Value Type Description System.String"
  },
  "api/Babel.Licensing.NetworkReportOptions.html": {
    "href": "api/Babel.Licensing.NetworkReportOptions.html",
    "title": "Class NetworkReportOptions | C# OCR & Tesseract API | IronOCR",
    "keywords": "Class NetworkReportOptions Inheritance System.Object NetworkReportOptions Namespace : Babel.Licensing Assembly : IronOcr.dll Syntax public class NetworkReportOptions : Object Constructors NetworkReportOptions() Declaration public NetworkReportOptions() Properties CollecAdapterInformation Declaration public bool CollecAdapterInformation { get; set; } Property Value Type Description System.Boolean CollecDomainInformation Declaration public bool CollecDomainInformation { get; set; } Property Value Type Description System.Boolean"
  },
  "api/Babel.Licensing.Pem.html": {
    "href": "api/Babel.Licensing.Pem.html",
    "title": "Class Pem | C# OCR & Tesseract API | IronOCR",
    "keywords": "Class Pem Inheritance System.Object Pem Namespace : Babel.Licensing Assembly : IronOcr.dll Syntax public static class Pem : Object Methods ReadSignature(Stream) Declaration public static ISignatureProvider ReadSignature(Stream stream) Parameters Type Name Description System.IO.Stream stream Returns Type Description ISignatureProvider ReadSignature(String) Declaration public static ISignatureProvider ReadSignature(string fileName) Parameters Type Name Description System.String fileName Returns Type Description ISignatureProvider"
  },
  "api/Babel.Licensing.Product.html": {
    "href": "api/Babel.Licensing.Product.html",
    "title": "Class Product | C# OCR & Tesseract API | IronOCR",
    "keywords": "Class Product Inheritance System.Object Product Namespace : Babel.Licensing Assembly : IronOcr.dll Syntax public sealed class Product : Object Constructors Product() Declaration public Product() Product(Product) Declaration public Product(Product other) Parameters Type Name Description Product other Properties Copyright Declaration public string Copyright { get; set; } Property Value Type Description System.String Description Declaration public string Description { get; set; } Property Value Type Description System.String Id Declaration public string Id { get; set; } Property Value Type Description System.String Name Declaration public string Name { get; set; } Property Value Type Description System.String Url Declaration public string Url { get; set; } Property Value Type Description System.String Version Declaration public string Version { get; set; } Property Value Type Description System.String"
  },
  "api/Babel.Licensing.Report.html": {
    "href": "api/Babel.Licensing.Report.html",
    "title": "Class Report | C# OCR & Tesseract API | IronOCR",
    "keywords": "Class Report Inheritance System.Object Report Namespace : Babel.Licensing Assembly : IronOcr.dll Syntax public class Report : Object Constructors Report(String) Declaration public Report(string name) Parameters Type Name Description System.String name Report(String, String) Declaration public Report(string name, string content) Parameters Type Name Description System.String name System.String content Fields FormatVersion Declaration public static readonly string FormatVersion Field Value Type Description System.String Properties Content Declaration public virtual string Content { get; } Property Value Type Description System.String Date Declaration public virtual Nullable<DateTime> Date { get; set; } Property Value Type Description System.Nullable < System.DateTime > Encrypted Declaration public virtual bool Encrypted { get; } Property Value Type Description System.Boolean Name Declaration public virtual string Name { get; } Property Value Type Description System.String Properties Declaration public Dictionary<string, object> Properties { get; } Property Value Type Description System.Collections.Generic.Dictionary < System.String , System.Object > Version Declaration public virtual string Version { get; } Property Value Type Description System.String Methods Build() Declaration public virtual void Build() Create(String, String) Declaration public static Report Create(string report, string password = null) Parameters Type Name Description System.String report System.String password Returns Type Description Report"
  },
  "api/Babel.Licensing.ReportToken.html": {
    "href": "api/Babel.Licensing.ReportToken.html",
    "title": "Class ReportToken | C# OCR & Tesseract API | IronOCR",
    "keywords": "Class ReportToken Inheritance System.Object ReportToken Namespace : Babel.Licensing Assembly : IronOcr.dll Syntax public class ReportToken : Object Properties ApiKey Declaration public string ApiKey { get; } Property Value Type Description System.String Hash Declaration public byte[] Hash { get; } Property Value Type Description System.Byte [] Id Declaration public string Id { get; } Property Value Type Description System.String TimeStamp Declaration public DateTime TimeStamp { get; } Property Value Type Description System.DateTime Methods Parse(String, Nullable<Int32>) Declaration public static ReportToken Parse(string token, Nullable<int> seed) Parameters Type Name Description System.String token System.Nullable < System.Int32 > seed Returns Type Description ReportToken"
  },
  "api/Babel.Licensing.Restriction.html": {
    "href": "api/Babel.Licensing.Restriction.html",
    "title": "Class Restriction | C# OCR & Tesseract API | IronOCR",
    "keywords": "Class Restriction Inheritance System.Object Restriction BetaRestriction DomainRestriction HardwareRestriction TrialRestriction UsageRestriction Implements IObservableObject Namespace : Babel.Licensing Assembly : IronOcr.dll Syntax public abstract class Restriction : Object, IObservableObject Constructors Restriction() Declaration protected Restriction() Properties ExpireDate Declaration public virtual Nullable<DateTime> ExpireDate { get; set; } Property Value Type Description System.Nullable < System.DateTime > Id Declaration public virtual string Id { get; set; } Property Value Type Description System.String Listeners Declaration public virtual IEnumerable<IObjectListener> Listeners { get; } Property Value Type Description System.Collections.Generic.IEnumerable < IObjectListener > Name Declaration public abstract string Name { get; } Property Value Type Description System.String Methods Attach(IObjectListener) Declaration public virtual void Attach(IObjectListener listener) Parameters Type Name Description IObjectListener listener Detach(IObjectListener) Declaration public virtual void Detach(IObjectListener listener) Parameters Type Name Description IObjectListener listener Notify(Object[]) Declaration public virtual void Notify(params object[] args) Parameters Type Name Description System.Object [] args Validate(ILicenseContext, Type, Object) Declaration public virtual ValidationResult Validate(ILicenseContext context, Type type, object instance) Parameters Type Name Description ILicenseContext context System.Type type System.Object instance Returns Type Description ValidationResult Implements IObservableObject"
  },
  "api/Babel.Licensing.Rnd.html": {
    "href": "api/Babel.Licensing.Rnd.html",
    "title": "Class Rnd | C# OCR & Tesseract API | IronOCR",
    "keywords": "Class Rnd Inheritance System.Object Rnd Namespace : Babel.Licensing Assembly : IronOcr.dll Syntax public sealed class Rnd : Object Constructors Rnd() Declaration public Rnd() Rnd(Int32) Declaration public Rnd(int seed) Parameters Type Name Description System.Int32 seed Fields Alphabet Declaration public static string Alphabet Field Value Type Description System.String Methods Array(Int32) Declaration public byte[] Array(int size) Parameters Type Name Description System.Int32 size Returns Type Description System.Byte [] Double() Declaration public double Double() Returns Type Description System.Double Fill(Byte[], Int32, Int32) Declaration public void Fill(byte[] array, int start, int count) Parameters Type Name Description System.Byte [] array System.Int32 start System.Int32 count Int() Declaration public double Int() Returns Type Description System.Double Int(Int32, Int32) Declaration public double Int(int min, int max) Parameters Type Name Description System.Int32 min System.Int32 max Returns Type Description System.Double Long() Declaration public long Long() Returns Type Description System.Int64 Seed(Int32) Declaration public void Seed(int seed) Parameters Type Name Description System.Int32 seed String(Int32) Declaration public string String(int length) Parameters Type Name Description System.Int32 length Returns Type Description System.String"
  },
  "api/Babel.Licensing.RSASignature.html": {
    "href": "api/Babel.Licensing.RSASignature.html",
    "title": "Class RSASignature | C# OCR & Tesseract API | IronOCR",
    "keywords": "Class RSASignature Inheritance System.Object RSASignature Implements ISignatureProvider ILicenseSerializable ISignatureWriter IRSAKeys ISignatureKeyInfo Namespace : Babel.Licensing Assembly : IronOcr.dll Syntax public sealed class RSASignature : Object, ISignatureProvider, ILicenseSerializable, ISignatureWriter, IRSAKeys, ISignatureKeyInfo Constructors RSASignature() Declaration public RSASignature() RSASignature(Int32) Declaration public RSASignature(int keySize) Parameters Type Name Description System.Int32 keySize RSASignature(RSA) Declaration public RSASignature(RSA rsa) Parameters Type Name Description System.Security.Cryptography.RSA rsa RSASignature(RSA, Boolean) Declaration public RSASignature(RSA rsa, bool generateKeyInfo) Parameters Type Name Description System.Security.Cryptography.RSA rsa System.Boolean generateKeyInfo Properties AlgorithmName Declaration public string AlgorithmName { get; } Property Value Type Description System.String GenerateKeyInfo Declaration public bool GenerateKeyInfo { get; set; } Property Value Type Description System.Boolean HasKeySize Declaration public bool HasKeySize { get; } Property Value Type Description System.Boolean HasPrivateKey Declaration public bool HasPrivateKey { get; } Property Value Type Description System.Boolean HasPublicKey Declaration public bool HasPublicKey { get; } Property Value Type Description System.Boolean KeyPair Declaration public byte[] KeyPair { get; set; } Property Value Type Description System.Byte [] KeySize Declaration public int KeySize { get; set; } Property Value Type Description System.Int32 RSA Declaration public RSA RSA { get; set; } Property Value Type Description System.Security.Cryptography.RSA Methods CreateFromKeyContainer(String) Declaration public static RSASignature CreateFromKeyContainer(string container) Parameters Type Name Description System.String container Returns Type Description RSASignature CreateFromKeyFile(String, String) Declaration public static RSASignature CreateFromKeyFile(string keyFile, string password = null) Parameters Type Name Description System.String keyFile System.String password Returns Type Description RSASignature CreateFromRawData(Byte[], String) Declaration public static RSASignature CreateFromRawData(byte[] keyData, string password = null) Parameters Type Name Description System.Byte [] keyData System.String password Returns Type Description RSASignature CreateKeyPair() Declaration public void CreateKeyPair() ExportKeys(Boolean) Declaration public string ExportKeys(bool publicKeyOnly) Parameters Type Name Description System.Boolean publicKeyOnly Returns Type Description System.String FromKeys(String) Declaration public static RSASignature FromKeys(string rsaKey) Parameters Type Name Description System.String rsaKey Returns Type Description RSASignature FromStrongNamePublicKey(Byte[]) Declaration public static RSASignature FromStrongNamePublicKey(byte[] publicKey) Parameters Type Name Description System.Byte [] publicKey Returns Type Description RSASignature ImportKeys(String) Declaration public void ImportKeys(string rsaKey) Parameters Type Name Description System.String rsaKey ImportRSA(RSA) Declaration public void ImportRSA(RSA rsa) Parameters Type Name Description System.Security.Cryptography.RSA rsa SignData(Byte[]) Declaration public byte[] SignData(byte[] data) Parameters Type Name Description System.Byte [] data Returns Type Description System.Byte [] ToRSA() Declaration public RSA ToRSA() Returns Type Description System.Security.Cryptography.RSA VerifyData(Byte[], Byte[]) Declaration public bool VerifyData(byte[] data, byte[] signature) Parameters Type Name Description System.Byte [] data System.Byte [] signature Returns Type Description System.Boolean WritePem(Stream, Boolean) Declaration public void WritePem(Stream stream, bool publicKeyOnly) Parameters Type Name Description System.IO.Stream stream System.Boolean publicKeyOnly WritePem(String, Boolean) Declaration public void WritePem(string path, bool publicKeyOnly) Parameters Type Name Description System.String path System.Boolean publicKeyOnly Explicit Interface Implementations ILicenseSerializable.Read(Object) Declaration void ILicenseSerializable.Read(object rkmuxqcg) Parameters Type Name Description System.Object rkmuxqcg ILicenseSerializable.Write(Object) Declaration void ILicenseSerializable.Write(object rkmuxqcg) Parameters Type Name Description System.Object rkmuxqcg Implements ISignatureProvider ILicenseSerializable ISignatureWriter IRSAKeys ISignatureKeyInfo"
  },
  "api/Babel.Licensing.SerialBuilder.html": {
    "href": "api/Babel.Licensing.SerialBuilder.html",
    "title": "Class SerialBuilder | C# OCR & Tesseract API | IronOCR",
    "keywords": "Class SerialBuilder Inheritance System.Object SerialBuilder Namespace : Babel.Licensing Assembly : IronOcr.dll Syntax public sealed class SerialBuilder : Object Constructors SerialBuilder() Declaration public SerialBuilder() Properties DomainName Declaration public string DomainName { get; set; } Property Value Type Description System.String ExpireDate Declaration public Nullable<DateTime> ExpireDate { get; set; } Property Value Type Description System.Nullable < System.DateTime > ExpireDays Declaration public Nullable<int> ExpireDays { get; set; } Property Value Type Description System.Nullable < System.Int32 > HardwareKey Declaration public string HardwareKey { get; set; } Property Value Type Description System.String LicenseId Declaration public int LicenseId { get; set; } Property Value Type Description System.Int32 LicenseInfo Declaration public string LicenseInfo { get; set; } Property Value Type Description System.String PrivateKey Declaration public string PrivateKey { get; set; } Property Value Type Description System.String PublicKey Declaration public string PublicKey { get; set; } Property Value Type Description System.String RunInstances Declaration public Nullable<int> RunInstances { get; set; } Property Value Type Description System.Nullable < System.Int32 > SerialFormat Declaration public StringFormat SerialFormat { get; set; } Property Value Type Description StringFormat Methods CreateKeyPair(ECDsaKeySize) Declaration public void CreateKeyPair(ECDsaKeySize keySize) Parameters Type Name Description ECDsaKeySize keySize GenerateSerial(Int32) Declaration public string GenerateSerial(int tokenLength = -1) Parameters Type Name Description System.Int32 tokenLength Returns Type Description System.String IsValid(String) Declaration public bool IsValid(string serial) Parameters Type Name Description System.String serial Returns Type Description System.Boolean"
  },
  "api/Babel.Licensing.SerialManager.html": {
    "href": "api/Babel.Licensing.SerialManager.html",
    "title": "Class SerialManager | C# OCR & Tesseract API | IronOCR",
    "keywords": "Class SerialManager Inheritance System.Object SerialManager Namespace : Babel.Licensing Assembly : IronOcr.dll Syntax public sealed class SerialManager : Object Constructors SerialManager() Declaration public SerialManager() Properties PublicKey Declaration public string PublicKey { get; set; } Property Value Type Description System.String Methods IsValid(String) Declaration public bool IsValid(string serial) Parameters Type Name Description System.String serial Returns Type Description System.Boolean Validate(String, Type, Object) Declaration public StringLicense Validate(string serial, Type type = null, object instance = null) Parameters Type Name Description System.String serial System.Type type System.Object instance Returns Type Description StringLicense"
  },
  "api/Babel.Licensing.StringEncrypter.html": {
    "href": "api/Babel.Licensing.StringEncrypter.html",
    "title": "Class StringEncrypter | C# OCR & Tesseract API | IronOCR",
    "keywords": "Class StringEncrypter Inheritance System.Object StringEncrypter Namespace : Babel.Licensing Assembly : IronOcr.dll Syntax public static class StringEncrypter : Object Methods Decrypt(String, Byte[]) Declaration public static string Decrypt(this string self, byte[] password) Parameters Type Name Description System.String self System.Byte [] password Returns Type Description System.String Decrypt(String, String) Declaration public static string Decrypt(this string self, string password) Parameters Type Name Description System.String self System.String password Returns Type Description System.String Decrypt(String, String, IEncoding) Declaration public static string Decrypt(this string self, string password, IEncoding encoding) Parameters Type Name Description System.String self System.String password IEncoding encoding Returns Type Description System.String Encrypt(String, Byte[]) Declaration public static string Encrypt(this string self, byte[] password) Parameters Type Name Description System.String self System.Byte [] password Returns Type Description System.String Encrypt(String, String) Declaration public static string Encrypt(this string self, string password) Parameters Type Name Description System.String self System.String password Returns Type Description System.String Encrypt(String, String, IEncoding) Declaration public static string Encrypt(this string self, string password, IEncoding encoding) Parameters Type Name Description System.String self System.String password IEncoding encoding Returns Type Description System.String"
  },
  "api/Babel.Licensing.StringFormat.html": {
    "href": "api/Babel.Licensing.StringFormat.html",
    "title": "Class StringFormat | C# OCR & Tesseract API | IronOCR",
    "keywords": "Class StringFormat Inheritance System.Object StringFormat Namespace : Babel.Licensing Assembly : IronOcr.dll Syntax public sealed class StringFormat : Enum Fields Ascii Declaration public const StringFormat Ascii Field Value Type Description StringFormat Base32 Declaration public const StringFormat Base32 Field Value Type Description StringFormat value__ Declaration public int value__ Field Value Type Description System.Int32"
  },
  "api/Babel.Licensing.StringLicense.html": {
    "href": "api/Babel.Licensing.StringLicense.html",
    "title": "Class StringLicense | C# OCR & Tesseract API | IronOCR",
    "keywords": "Class StringLicense Inheritance System.Object StringLicense Implements ILicense Namespace : Babel.Licensing Assembly : IronOcr.dll Syntax public class StringLicense : Object, ILicense Constructors StringLicense() Declaration public StringLicense() Fields DefaultMaskSize Declaration public static int DefaultMaskSize Field Value Type Description System.Int32 Properties Assemblies Declaration public ICollection<string> Assemblies { get; } Property Value Type Description System.Collections.Generic.ICollection < System.String > Components Declaration public ICollection<string> Components { get; } Property Value Type Description System.Collections.Generic.ICollection < System.String > ExpireDate Declaration public Nullable<DateTime> ExpireDate { get; set; } Property Value Type Description System.Nullable < System.DateTime > Features Declaration public ICollection<Feature> Features { get; } Property Value Type Description System.Collections.Generic.ICollection < Feature > Fields Declaration public ICollection<Field> Fields { get; } Property Value Type Description System.Collections.Generic.ICollection < Field > Id Declaration public string Id { get; set; } Property Value Type Description System.String IsBeta Declaration public bool IsBeta { get; } Property Value Type Description System.Boolean IssueDate Declaration public Nullable<DateTime> IssueDate { get; set; } Property Value Type Description System.Nullable < System.DateTime > IsTrial Declaration public bool IsTrial { get; } Property Value Type Description System.Boolean Licensee Declaration public Licensee Licensee { get; set; } Property Value Type Description Licensee LicenseKey Declaration public string LicenseKey { get; } Property Value Type Description System.String Product Declaration public Product Product { get; set; } Property Value Type Description Product Restrictions Declaration public ICollection<Restriction> Restrictions { get; } Property Value Type Description System.Collections.Generic.ICollection < Restriction > SupportExpireDate Declaration public Nullable<DateTime> SupportExpireDate { get; set; } Property Value Type Description System.Nullable < System.DateTime > Timestamp Declaration public DateTime Timestamp { get; } Property Value Type Description System.DateTime Type Declaration public string Type { get; set; } Property Value Type Description System.String Methods Dispose() Declaration public void Dispose() Finalize() Declaration protected override void Finalize() Implements ILicense"
  },
  "api/Babel.Licensing.StringLicenseBuilder.html": {
    "href": "api/Babel.Licensing.StringLicenseBuilder.html",
    "title": "Class StringLicenseBuilder | C# OCR & Tesseract API | IronOCR",
    "keywords": "Class StringLicenseBuilder Inheritance System.Object StringLicenseBuilder Implements ILicenseBuilder ICreateCustomRestriction ICreateCustomSignatureProvider IReadableLicenseString Namespace : Babel.Licensing Assembly : IronOcr.dll Syntax public sealed class StringLicenseBuilder : Object, ILicenseBuilder, ICreateCustomRestriction, ICreateCustomSignatureProvider, IReadableLicenseString Constructors StringLicenseBuilder() Declaration public StringLicenseBuilder() StringLicenseBuilder(ISignatureProvider) Declaration public StringLicenseBuilder(ISignatureProvider signer) Parameters Type Name Description ISignatureProvider signer Properties Format Declaration public StringFormat Format { get; set; } Property Value Type Description StringFormat SignatureProvider Declaration public ISignatureProvider SignatureProvider { get; set; } Property Value Type Description ISignatureProvider Methods AddOrUpdate(ILicense) Declaration public void AddOrUpdate(ILicense license) Parameters Type Name Description ILicense license Load(Stream) Declaration public void Load(Stream stream) Parameters Type Name Description System.IO.Stream stream Load(TextReader) Declaration public void Load(TextReader reader) Parameters Type Name Description System.IO.TextReader reader Parse(String) Declaration public void Parse(string license) Parameters Type Name Description System.String license Remove(ILicense) Declaration public bool Remove(ILicense license) Parameters Type Name Description ILicense license Returns Type Description System.Boolean Save(Stream) Declaration public void Save(Stream stream) Parameters Type Name Description System.IO.Stream stream Save(TextWriter) Declaration public void Save(TextWriter writer) Parameters Type Name Description System.IO.TextWriter writer SetMask(Byte[]) Declaration public void SetMask(byte[] mask) Parameters Type Name Description System.Byte [] mask SetMaskSize(Int32) Declaration public void SetMaskSize(int size) Parameters Type Name Description System.Int32 size Sign() Declaration public void Sign() ToLicenses() Declaration public IEnumerable<ILicense> ToLicenses() Returns Type Description System.Collections.Generic.IEnumerable < ILicense > ToReadableString(String) Declaration public string ToReadableString(string format) Parameters Type Name Description System.String format Returns Type Description System.String ToString() Declaration public override string ToString() Returns Type Description System.String ToString(String) Declaration public string ToString(string format) Parameters Type Name Description System.String format Returns Type Description System.String Validate() Declaration public bool Validate() Returns Type Description System.Boolean Events CreateCustomRestriction Declaration public event EventHandler<CreateCustomRestrictionEventArgs> CreateCustomRestriction Event Type Type Description System.EventHandler < CreateCustomRestrictionEventArgs > CreateCustomSignatureProvider Declaration public event EventHandler<CreateCustomSignatureProviderEventArgs> CreateCustomSignatureProvider Event Type Type Description System.EventHandler < CreateCustomSignatureProviderEventArgs > Implements ILicenseBuilder ICreateCustomRestriction ICreateCustomSignatureProvider IReadableLicenseString"
  },
  "api/Babel.Licensing.StringLicenseManager.html": {
    "href": "api/Babel.Licensing.StringLicenseManager.html",
    "title": "Class StringLicenseManager | C# OCR & Tesseract API | IronOCR",
    "keywords": "Class StringLicenseManager Inheritance System.Object StringLicenseManager Implements ICreateCustomRestriction ICreateCustomSignatureProvider Namespace : Babel.Licensing Assembly : IronOcr.dll Syntax public class StringLicenseManager : Object, ICreateCustomRestriction, ICreateCustomSignatureProvider Constructors StringLicenseManager() Declaration public StringLicenseManager() Properties CurrentContext Declaration public ILicenseContext CurrentContext { get; set; } Property Value Type Description ILicenseContext LicenseFactory Declaration public ILicenseFactory LicenseFactory { get; set; } Property Value Type Description ILicenseFactory SignatureProvider Declaration public ISignatureProvider SignatureProvider { get; set; } Property Value Type Description ISignatureProvider Methods IsValid(String, Type, Object) Declaration public bool IsValid(string license, Type type = null, object instance = null) Parameters Type Name Description System.String license System.Type type System.Object instance Returns Type Description System.Boolean OnCreateCustomRestriction(CreateCustomRestrictionEventArgs) Declaration protected virtual void OnCreateCustomRestriction(CreateCustomRestrictionEventArgs ea) Parameters Type Name Description CreateCustomRestrictionEventArgs ea OnCreateCustomSignatureProvider(CreateCustomSignatureProviderEventArgs) Declaration protected virtual void OnCreateCustomSignatureProvider(CreateCustomSignatureProviderEventArgs ea) Parameters Type Name Description CreateCustomSignatureProviderEventArgs ea Validate(String, Type, Object) Declaration public StringLicense Validate(string licenseKey, Type type = null, object instance = null) Parameters Type Name Description System.String licenseKey System.Type type System.Object instance Returns Type Description StringLicense Events CreateCustomRestriction Declaration public event EventHandler<CreateCustomRestrictionEventArgs> CreateCustomRestriction Event Type Type Description System.EventHandler < CreateCustomRestrictionEventArgs > CreateCustomSignatureProvider Declaration public event EventHandler<CreateCustomSignatureProviderEventArgs> CreateCustomSignatureProvider Event Type Type Description System.EventHandler < CreateCustomSignatureProviderEventArgs > Implements ICreateCustomRestriction ICreateCustomSignatureProvider"
  },
  "api/Babel.Licensing.SystemReportOptions.html": {
    "href": "api/Babel.Licensing.SystemReportOptions.html",
    "title": "Class SystemReportOptions | C# OCR & Tesseract API | IronOCR",
    "keywords": "Class SystemReportOptions Inheritance System.Object SystemReportOptions Namespace : Babel.Licensing Assembly : IronOcr.dll Syntax public class SystemReportOptions : Object Constructors SystemReportOptions() Declaration public SystemReportOptions() Properties CollectDiskInformation Declaration public bool CollectDiskInformation { get; set; } Property Value Type Description System.Boolean CollectDisplayInformation Declaration public bool CollectDisplayInformation { get; set; } Property Value Type Description System.Boolean CollectMemoryInformation Declaration public bool CollectMemoryInformation { get; set; } Property Value Type Description System.Boolean CollectNetworkInformation Declaration public bool CollectNetworkInformation { get; set; } Property Value Type Description System.Boolean CollectOsInformation Declaration public bool CollectOsInformation { get; set; } Property Value Type Description System.Boolean CollectProcessorInformation Declaration public bool CollectProcessorInformation { get; set; } Property Value Type Description System.Boolean CollectSystemInformation Declaration public bool CollectSystemInformation { get; set; } Property Value Type Description System.Boolean"
  },
  "api/Babel.Licensing.TrialRestriction.html": {
    "href": "api/Babel.Licensing.TrialRestriction.html",
    "title": "Class TrialRestriction | C# OCR & Tesseract API | IronOCR",
    "keywords": "Class TrialRestriction Inheritance System.Object Restriction TrialRestriction Implements IObservableObject Inherited Members Restriction.Attach(IObjectListener) Restriction.Detach(IObjectListener) Restriction.Notify(Object[]) Restriction.Listeners Restriction.Id Restriction.ExpireDate Namespace : Babel.Licensing Assembly : IronOcr.dll Syntax public class TrialRestriction : Restriction, IObservableObject Constructors TrialRestriction() Declaration public TrialRestriction() Properties ExpireDays Declaration public Nullable<int> ExpireDays { get; set; } Property Value Type Description System.Nullable < System.Int32 > Name Declaration public override string Name { get; } Property Value Type Description System.String Overrides Restriction.Name RunCount Declaration public Nullable<int> RunCount { get; set; } Property Value Type Description System.Nullable < System.Int32 > RunCountLeft Declaration public Nullable<int> RunCountLeft { get; } Property Value Type Description System.Nullable < System.Int32 > RunInstances Declaration public Nullable<int> RunInstances { get; set; } Property Value Type Description System.Nullable < System.Int32 > RunTime Declaration public Nullable<TimeSpan> RunTime { get; set; } Property Value Type Description System.Nullable < System.TimeSpan > Terms Declaration public string Terms { get; set; } Property Value Type Description System.String TimeLeft Declaration public Nullable<TimeSpan> TimeLeft { get; } Property Value Type Description System.Nullable < System.TimeSpan > Methods Validate(ILicenseContext, Type, Object) Declaration public override ValidationResult Validate(ILicenseContext context, Type type, object instance) Parameters Type Name Description ILicenseContext context System.Type type System.Object instance Returns Type Description ValidationResult Overrides Restriction.Validate(ILicenseContext, Type, Object) Implements IObservableObject Inherited members Attach(IObjectListener) Detach(IObjectListener) Notify(Object[]) Listeners Id ExpireDate"
  },
  "api/Babel.Licensing.UsageRestriction.html": {
    "href": "api/Babel.Licensing.UsageRestriction.html",
    "title": "Class UsageRestriction | C# OCR & Tesseract API | IronOCR",
    "keywords": "Class UsageRestriction Inheritance System.Object Restriction UsageRestriction Implements IObservableObject Inherited Members Restriction.Attach(IObjectListener) Restriction.Detach(IObjectListener) Restriction.Notify(Object[]) Restriction.Listeners Restriction.Id Restriction.ExpireDate Namespace : Babel.Licensing Assembly : IronOcr.dll Syntax public class UsageRestriction : Restriction, IObservableObject Constructors UsageRestriction() Declaration public UsageRestriction() Properties CanRunInVirtualEnvironment Declaration public Nullable<bool> CanRunInVirtualEnvironment { get; set; } Property Value Type Description System.Nullable < System.Boolean > Name Declaration public override string Name { get; } Property Value Type Description System.String Overrides Restriction.Name ProcessList Declaration public string ProcessList { get; set; } Property Value Type Description System.String Usage Declaration public string Usage { get; set; } Property Value Type Description System.String Methods Validate(ILicenseContext, Type, Object) Declaration public override ValidationResult Validate(ILicenseContext context, Type type, object instance) Parameters Type Name Description ILicenseContext context System.Type type System.Object instance Returns Type Description ValidationResult Overrides Restriction.Validate(ILicenseContext, Type, Object) Implements IObservableObject Inherited members Attach(IObjectListener) Detach(IObjectListener) Notify(Object[]) Listeners Id ExpireDate"
  },
  "api/Babel.Licensing.ValidationResult.html": {
    "href": "api/Babel.Licensing.ValidationResult.html",
    "title": "Class ValidationResult | C# OCR & Tesseract API | IronOCR",
    "keywords": "Class ValidationResult Inheritance System.Object ValidationResult Namespace : Babel.Licensing Assembly : IronOcr.dll Syntax public sealed class ValidationResult : Enum Fields BadFormat Declaration public const ValidationResult BadFormat Field Value Type Description ValidationResult Expired Declaration public const ValidationResult Expired Field Value Type Description ValidationResult Invalid Declaration public const ValidationResult Invalid Field Value Type Description ValidationResult Valid Declaration public const ValidationResult Valid Field Value Type Description ValidationResult value__ Declaration public int value__ Field Value Type Description System.Int32"
  },
  "api/Babel.Licensing.XmlDigitalSignature.html": {
    "href": "api/Babel.Licensing.XmlDigitalSignature.html",
    "title": "Class XmlDigitalSignature | C# OCR & Tesseract API | IronOCR",
    "keywords": "Class XmlDigitalSignature Inheritance System.Object XmlDigitalSignature Implements ISignatureProvider ISignatureWriter IRSAKeys ISignatureKeyInfo Namespace : Babel.Licensing Assembly : IronOcr.dll Syntax public class XmlDigitalSignature : Object, ISignatureProvider, ISignatureWriter, IRSAKeys, ISignatureKeyInfo Constructors XmlDigitalSignature(RSA) Declaration public XmlDigitalSignature(RSA rsa) Parameters Type Name Description System.Security.Cryptography.RSA rsa XmlDigitalSignature(RSA, Boolean) Declaration public XmlDigitalSignature(RSA rsa, bool generateKeyInfo) Parameters Type Name Description System.Security.Cryptography.RSA rsa System.Boolean generateKeyInfo Fields XmlDSigNamespace Declaration public static readonly string XmlDSigNamespace Field Value Type Description System.String Properties AlgorithmName Declaration public string AlgorithmName { get; } Property Value Type Description System.String GenerateKeyInfo Declaration public bool GenerateKeyInfo { get; set; } Property Value Type Description System.Boolean HasKeySize Declaration public bool HasKeySize { get; } Property Value Type Description System.Boolean HasPrivateKey Declaration public bool HasPrivateKey { get; } Property Value Type Description System.Boolean HasPublicKey Declaration public bool HasPublicKey { get; } Property Value Type Description System.Boolean KeyPair Declaration public byte[] KeyPair { get; set; } Property Value Type Description System.Byte [] KeySize Declaration public int KeySize { get; } Property Value Type Description System.Int32 RSA Declaration public RSA RSA { get; set; } Property Value Type Description System.Security.Cryptography.RSA SignatureValue Declaration public byte[] SignatureValue { get; } Property Value Type Description System.Byte [] Methods CreateFromKeyContainer(String) Declaration public static XmlDigitalSignature CreateFromKeyContainer(string container) Parameters Type Name Description System.String container Returns Type Description XmlDigitalSignature CreateFromKeyFile(String, String) Declaration public static XmlDigitalSignature CreateFromKeyFile(string keyFile, string password = null) Parameters Type Name Description System.String keyFile System.String password Returns Type Description XmlDigitalSignature CreateFromSignedXml(String) Declaration public static XmlDigitalSignature CreateFromSignedXml(string xml) Parameters Type Name Description System.String xml Returns Type Description XmlDigitalSignature LoadXml(String) Declaration public void LoadXml(string xml) Parameters Type Name Description System.String xml Sign() Declaration public void Sign() ToRSASignature() Declaration public RSASignature ToRSASignature() Returns Type Description RSASignature VerifySignature() Declaration public bool VerifySignature() Returns Type Description System.Boolean WritePem(Stream, Boolean) Declaration public void WritePem(Stream stream, bool publicKeyOnly) Parameters Type Name Description System.IO.Stream stream System.Boolean publicKeyOnly WritePem(String, Boolean) Declaration public void WritePem(string path, bool publicKeyOnly) Parameters Type Name Description System.String path System.Boolean publicKeyOnly WriteXml(XmlWriter) Declaration public void WriteXml(XmlWriter writer) Parameters Type Name Description System.Xml.XmlWriter writer Explicit Interface Implementations ISignatureProvider.SignData(Byte[]) Declaration byte[] ISignatureProvider.SignData(byte[] rkmuxqcg) Parameters Type Name Description System.Byte [] rkmuxqcg Returns Type Description System.Byte [] ISignatureProvider.VerifyData(Byte[], Byte[]) Declaration bool ISignatureProvider.VerifyData(byte[] rkmuxqcg, byte[] rkmuxqch) Parameters Type Name Description System.Byte [] rkmuxqcg System.Byte [] rkmuxqch Returns Type Description System.Boolean Implements ISignatureProvider ISignatureWriter IRSAKeys ISignatureKeyInfo"
  },
  "api/Babel.Licensing.XmlLicense.html": {
    "href": "api/Babel.Licensing.XmlLicense.html",
    "title": "Class XmlLicense | C# OCR & Tesseract API | IronOCR",
    "keywords": "Class XmlLicense Inheritance System.Object XmlLicense Implements ILicense Namespace : Babel.Licensing Assembly : IronOcr.dll Syntax public sealed class XmlLicense : Object, ILicense Constructors XmlLicense() Declaration public XmlLicense() Properties Assemblies Declaration public ICollection<string> Assemblies { get; } Property Value Type Description System.Collections.Generic.ICollection < System.String > Components Declaration public ICollection<string> Components { get; } Property Value Type Description System.Collections.Generic.ICollection < System.String > ExpireDate Declaration public Nullable<DateTime> ExpireDate { get; set; } Property Value Type Description System.Nullable < System.DateTime > Features Declaration public ICollection<Feature> Features { get; } Property Value Type Description System.Collections.Generic.ICollection < Feature > Fields Declaration public ICollection<Field> Fields { get; } Property Value Type Description System.Collections.Generic.ICollection < Field > Id Declaration public string Id { get; set; } Property Value Type Description System.String IsBeta Declaration public bool IsBeta { get; } Property Value Type Description System.Boolean IssueDate Declaration public Nullable<DateTime> IssueDate { get; set; } Property Value Type Description System.Nullable < System.DateTime > IsTrial Declaration public bool IsTrial { get; } Property Value Type Description System.Boolean Licensee Declaration public Licensee Licensee { get; set; } Property Value Type Description Licensee LicenseKey Declaration public string LicenseKey { get; } Property Value Type Description System.String Product Declaration public Product Product { get; set; } Property Value Type Description Product Restrictions Declaration public ICollection<Restriction> Restrictions { get; } Property Value Type Description System.Collections.Generic.ICollection < Restriction > SupportExpireDate Declaration public Nullable<DateTime> SupportExpireDate { get; set; } Property Value Type Description System.Nullable < System.DateTime > Timestamp Declaration public DateTime Timestamp { get; } Property Value Type Description System.DateTime Type Declaration public string Type { get; set; } Property Value Type Description System.String Methods Dispose() Declaration public void Dispose() Finalize() Declaration protected override void Finalize() Implements ILicense"
  },
  "api/Babel.Licensing.XmlLicenseBuilder.html": {
    "href": "api/Babel.Licensing.XmlLicenseBuilder.html",
    "title": "Class XmlLicenseBuilder | C# OCR & Tesseract API | IronOCR",
    "keywords": "Class XmlLicenseBuilder Inheritance System.Object XmlLicenseBuilder Implements ILicenseBuilder ICreateCustomRestriction ICreateCustomSignatureProvider IReadableLicenseString Namespace : Babel.Licensing Assembly : IronOcr.dll Syntax public class XmlLicenseBuilder : Object, ILicenseBuilder, ICreateCustomRestriction, ICreateCustomSignatureProvider, IReadableLicenseString Constructors XmlLicenseBuilder() Declaration public XmlLicenseBuilder() XmlLicenseBuilder(ISignatureProvider) Declaration public XmlLicenseBuilder(ISignatureProvider signer) Parameters Type Name Description ISignatureProvider signer Properties AddXmlDeclaration Declaration public bool AddXmlDeclaration { get; set; } Property Value Type Description System.Boolean Encoding Declaration public Encoding Encoding { get; set; } Property Value Type Description System.Text.Encoding Formatted Declaration public bool Formatted { get; set; } Property Value Type Description System.Boolean HasSignature Declaration public bool HasSignature { get; } Property Value Type Description System.Boolean SignatureProvider Declaration public ISignatureProvider SignatureProvider { get; set; } Property Value Type Description ISignatureProvider Methods AddOrUpdate(ILicense) Declaration public void AddOrUpdate(ILicense license) Parameters Type Name Description ILicense license Load(Stream) Declaration public void Load(Stream stream) Parameters Type Name Description System.IO.Stream stream Load(String) Declaration public void Load(string path) Parameters Type Name Description System.String path LoadXml(String) Declaration public void LoadXml(string xml) Parameters Type Name Description System.String xml Parse(String) Declaration public void Parse(string license) Parameters Type Name Description System.String license Remove(ILicense) Declaration public bool Remove(ILicense license) Parameters Type Name Description ILicense license Returns Type Description System.Boolean Save(Stream) Declaration public void Save(Stream stream) Parameters Type Name Description System.IO.Stream stream Save(String) Declaration public void Save(string path) Parameters Type Name Description System.String path Sign() Declaration public void Sign() ToLicenses() Declaration public IEnumerable<ILicense> ToLicenses() Returns Type Description System.Collections.Generic.IEnumerable < ILicense > ToReadableString(String) Declaration public string ToReadableString(string format) Parameters Type Name Description System.String format Returns Type Description System.String ToXml(Boolean) Declaration public string ToXml(bool formatted = true) Parameters Type Name Description System.Boolean formatted Returns Type Description System.String Validate() Declaration public bool Validate() Returns Type Description System.Boolean Events CreateCustomRestriction Declaration public event EventHandler<CreateCustomRestrictionEventArgs> CreateCustomRestriction Event Type Type Description System.EventHandler < CreateCustomRestrictionEventArgs > CreateCustomSignatureProvider Declaration public event EventHandler<CreateCustomSignatureProviderEventArgs> CreateCustomSignatureProvider Event Type Type Description System.EventHandler < CreateCustomSignatureProviderEventArgs > Implements ILicenseBuilder ICreateCustomRestriction ICreateCustomSignatureProvider IReadableLicenseString"
  },
  "api/Babel.Licensing.XmlLicenseManager.html": {
    "href": "api/Babel.Licensing.XmlLicenseManager.html",
    "title": "Class XmlLicenseManager | C# OCR & Tesseract API | IronOCR",
    "keywords": "Class XmlLicenseManager Inheritance System.Object XmlLicenseManager Implements ICreateCustomRestriction ICreateCustomSignatureProvider Namespace : Babel.Licensing Assembly : IronOcr.dll Syntax public class XmlLicenseManager : Object, ICreateCustomRestriction, ICreateCustomSignatureProvider Constructors XmlLicenseManager() Declaration public XmlLicenseManager() Properties CurrentContext Declaration public ILicenseContext CurrentContext { get; set; } Property Value Type Description ILicenseContext LicenseFactory Declaration public ILicenseFactory LicenseFactory { get; set; } Property Value Type Description ILicenseFactory SignatureProvider Declaration public ISignatureProvider SignatureProvider { get; set; } Property Value Type Description ISignatureProvider Methods IsValid(String, Type, Object) Declaration public bool IsValid(string xml, Type type = null, object instance = null) Parameters Type Name Description System.String xml System.Type type System.Object instance Returns Type Description System.Boolean OnCreateCustomRestriction(CreateCustomRestrictionEventArgs) Declaration protected virtual void OnCreateCustomRestriction(CreateCustomRestrictionEventArgs ea) Parameters Type Name Description CreateCustomRestrictionEventArgs ea OnCreateCustomSignatureProvider(CreateCustomSignatureProviderEventArgs) Declaration protected virtual void OnCreateCustomSignatureProvider(CreateCustomSignatureProviderEventArgs ea) Parameters Type Name Description CreateCustomSignatureProviderEventArgs ea Validate(String, Type, Object) Declaration public XmlLicense Validate(string xml, Type type = null, object instance = null) Parameters Type Name Description System.String xml System.Type type System.Object instance Returns Type Description XmlLicense Events CreateCustomRestriction Declaration public event EventHandler<CreateCustomRestrictionEventArgs> CreateCustomRestriction Event Type Type Description System.EventHandler < CreateCustomRestrictionEventArgs > CreateCustomSignatureProvider Declaration public event EventHandler<CreateCustomSignatureProviderEventArgs> CreateCustomSignatureProvider Event Type Type Description System.EventHandler < CreateCustomSignatureProviderEventArgs > Implements ICreateCustomRestriction ICreateCustomSignatureProvider"
  },
  "api/index.html": {
    "href": "api/index.html",
    "title": "IronOCR - The OCR & Tesseract Library for .NET | C# OCR & Tesseract API | IronOCR",
    "keywords": "IronOCR - The OCR & Tesseract Library for .NET IronOCR is an advanced OCR (Optical Character Recognition) library for C# and .NET IronOCR reads Text, Barcodes & QR from all major image and PDF formats using the latest Tesseract 5 engine. This library adds OCR functionality to Desktop, Console and Web applications in minutes. IronOCR's Unique Features: Pure .Net OCR API All OCR tasks run locally (no SAAS) 125 languages Barcode & QR Code reading Corrects low quality, noisy and distorted scans Performance tuned above and beyond any other known build of Tesseract OCR. Reads PDFs Can export searchable PDF documents from OCR Reads multi-page TIFFs Can save any OCR Scan to a searchable PDF document or XHTML Data output options include: Plain Text, Barcode Data and an OCR Result class containing paragraphs, lines, words, and characters. Language Support: 125 Languages including: Arabic, Chinese, English, Finnish, French, German, Hebrew, Italian, Japanese, Korean, Portuguese, Russian, Spanish... Custom language packs can also be created. Get Started Quickstart : https://ironsoftware.com/csharp/ocr/ Install With NuGet : https://www.nuget.org/packages/IronOcr/ Compatibility IronOcr provides Tesseract OCR on Mac, Windows, Linux, Azure and Docker for: .Net Framework 4.0 + .Net Standard 2.0 + .Net Core 2.0 + .Net 5 Mono for MacOS and Linux Xamarin for MacOS C# Code Example using IronOcr; var Ocr = new IronTesseract(); Ocr.Language = OcrLanguage.English; using (var Input = new OcrInput(\"image.png\")) { // Input.Deskew(); // use if image not straight // Input.DeNoise(); // use if image contains digital noise var Result = Ocr.Read(Input); Console.WriteLine(Result.Text); } Further Documentation Code Samples : https://ironsoftware.com/csharp/ocr/examples/simple-csharp-ocr-tesseract/ MSDN Class Reference : https://ironsoftware.com/csharp/ocr/object-reference/ Tutorials : https://ironsoftware.com/csharp/ocr/tutorials/how-to-read-text-from-an-image-in-csharp-net/ Support : developers@ironsoftware.com"
  },
  "api/IronOcr.CropRectangle.html": {
    "href": "api/IronOcr.CropRectangle.html",
    "title": "Class CropRectangle | C# OCR & Tesseract API | IronOCR",
    "keywords": "Class CropRectangle Crop rectangle for OCR input Inheritance System.Object CropRectangle Namespace : IronOcr Assembly : IronOcr.dll Syntax public class CropRectangle : Object Constructors CropRectangle(Rectangle, CropRectangle.MeasurementUnits) Create a new crop rectangle using the specified values Declaration public CropRectangle(Rectangle rect, CropRectangle.MeasurementUnits units) Parameters Type Name Description System.Drawing.Rectangle rect Rectangle CropRectangle.MeasurementUnits units Unit of measurement CropRectangle(Single, Single, Single, Single, CropRectangle.MeasurementUnits) Create a new crop rectangle using the specified values Declaration public CropRectangle(float x, float y, float width, float height, CropRectangle.MeasurementUnits units) Parameters Type Name Description System.Single x X System.Single y Y System.Single width Width System.Single height Height CropRectangle.MeasurementUnits units Unit of measurement Properties Height Height Declaration public float Height { get; } Property Value Type Description System.Single Rectangle Crop rectangle values Declaration public RectangleF Rectangle { get; set; } Property Value Type Description System.Drawing.RectangleF Units Unit of measurement Declaration public CropRectangle.MeasurementUnits Units { get; set; } Property Value Type Description CropRectangle.MeasurementUnits Width Width Declaration public float Width { get; } Property Value Type Description System.Single X X Declaration public float X { get; } Property Value Type Description System.Single Y Y Declaration public float Y { get; } Property Value Type Description System.Single Methods ConvertTo(CropRectangle.MeasurementUnits, Int32) Convert this crop rectangle to the specified units of measurement using the specified DPI Declaration public CropRectangle ConvertTo(CropRectangle.MeasurementUnits units, int dpi) Parameters Type Name Description CropRectangle.MeasurementUnits units Unit of measurement System.Int32 dpi DPI for conversion Returns Type Description CropRectangle A new crop rectangle which uses the desired units of measurement Exceptions Type Condition System.NotImplementedException Conversion not implemented Operators Implicit(CropRectangle to Nullable<Rectangle>) Crop rectangle values as a Rectangle Declaration public static implicit operator Nullable<Rectangle>(CropRectangle value) Parameters Type Name Description CropRectangle value Crop rectangle Returns Type Description System.Nullable < System.Drawing.Rectangle > Implicit(CropRectangle to Nullable<RectangleF>) Crop rectangle values as a RectangleF Declaration public static implicit operator Nullable<RectangleF>(CropRectangle value) Parameters Type Name Description CropRectangle value Crop rectangle Returns Type Description System.Nullable < System.Drawing.RectangleF >"
  },
  "api/IronOcr.CropRectangle.MeasurementUnits.html": {
    "href": "api/IronOcr.CropRectangle.MeasurementUnits.html",
    "title": "Class CropRectangle.MeasurementUnits | C# OCR & Tesseract API | IronOCR",
    "keywords": "Class CropRectangle.MeasurementUnits Units of measurement Inheritance System.Object CropRectangle.MeasurementUnits Namespace : IronOcr Assembly : IronOcr.dll Syntax public sealed class MeasurementUnits : Enum Fields Millimeters Millimeters Declaration public const CropRectangle.MeasurementUnits Millimeters Field Value Type Description CropRectangle.MeasurementUnits Pixels Pixels Declaration public const CropRectangle.MeasurementUnits Pixels Field Value Type Description CropRectangle.MeasurementUnits value__ Declaration public int value__ Field Value Type Description System.Int32"
  },
  "api/IronOcr.Events.html": {
    "href": "api/IronOcr.Events.html",
    "title": "Namespace IronOcr.Events | C# OCR & Tesseract API | IronOCR",
    "keywords": "Namespace IronOcr.Events Classes OcrProgresEventsArgs An event allowing developers to track and display profess of longer OCR jobs. Use the OcrProgress event to receive detailed notifications of ocr job progress."
  },
  "api/IronOcr.Events.OcrProgresEventsArgs.html": {
    "href": "api/IronOcr.Events.OcrProgresEventsArgs.html",
    "title": "Class OcrProgresEventsArgs | C# OCR & Tesseract API | IronOCR",
    "keywords": "Class OcrProgresEventsArgs An event allowing developers to track and display profess of longer OCR jobs. Use the OcrProgress event to receive detailed notifications of ocr job progress. Inheritance System.Object OcrProgresEventsArgs Namespace : IronOcr.Events Assembly : IronOcr.dll Syntax public class OcrProgresEventsArgs : EventArgs Constructors OcrProgresEventsArgs() Declaration public OcrProgresEventsArgs() Properties Duration The time taken for the entire OCR job. The counter stops when OCR is complete on every page. Declaration public TimeSpan Duration { get; } Property Value Type Description System.TimeSpan EndTimeUTC The DateTime at which the Read(OcrInput) OCR job was 100% completed in UTC format. null while OCR is still in progress Declaration public Nullable<DateTime> EndTimeUTC { get; } Property Value Type Description System.Nullable < System.DateTime > PagesComplete The number of pages where OCR 'reading' has been fully completed. They are normally processed in parallel across multiple CPU cores. Declaration public int PagesComplete { get; } Property Value Type Description System.Int32 ProgressPercent OCR job progress as a percentage of pages completed. Values range from 0 to 100. Declaration public int ProgressPercent { get; } Property Value Type Description System.Int32 StartTimeUTC The DateTime at which the Read(OcrInput) OCR job started in UTC format. Declaration public DateTime StartTimeUTC { get; } Property Value Type Description System.DateTime TotalPages The total number of pages being OCR 'read' by Read(OcrInput) method class. Declaration public int TotalPages { get; } Property Value Type Description System.Int32 See Also OcrProgress"
  },
  "api/IronOcr.Exceptions.html": {
    "href": "api/IronOcr.Exceptions.html",
    "title": "Namespace IronOcr.Exceptions | C# OCR & Tesseract API | IronOCR",
    "keywords": "Namespace IronOcr.Exceptions Classes IronOcrAssemblyVersionMismatchException Represents errors that occur while loading assemblies during IronOcr deployment. IronOcrDictionaryException Represents errors that occur relating to IronOCR language files. IronOcrInstallationException IronOcrLicensingException Represents errors that occur during IronOCR execution due to the library not being appropriately licensed. https://ironsoftware.com/csharp/ocr/licensing/ IronOcrNativeException Represents errors that occur in IronOCR native code IronOcrProductException Represents errors that occur during IronOCR execution."
  },
  "api/IronOcr.Exceptions.IronOcrAssemblyVersionMismatchException.html": {
    "href": "api/IronOcr.Exceptions.IronOcrAssemblyVersionMismatchException.html",
    "title": "Class IronOcrAssemblyVersionMismatchException | C# OCR & Tesseract API | IronOCR",
    "keywords": "Class IronOcrAssemblyVersionMismatchException Represents errors that occur while loading assemblies during IronOcr deployment. Inheritance System.Object IronOcrAssemblyVersionMismatchException Namespace : IronOcr.Exceptions Assembly : IronOcr.dll Syntax public class IronOcrAssemblyVersionMismatchException : Exception Properties Message Declaration public override string Message { get; } Property Value Type Description System.String"
  },
  "api/IronOcr.Exceptions.IronOcrDictionaryException.html": {
    "href": "api/IronOcr.Exceptions.IronOcrDictionaryException.html",
    "title": "Class IronOcrDictionaryException | C# OCR & Tesseract API | IronOCR",
    "keywords": "Class IronOcrDictionaryException Represents errors that occur relating to IronOCR language files. Inheritance System.Object IronOcrProductException IronOcrDictionaryException Namespace : IronOcr.Exceptions Assembly : IronOcr.dll Syntax public class IronOcrDictionaryException : IronOcrProductException Constructors IronOcrDictionaryException() Initializes a new instance of the IronOcrDictionaryException class. Declaration public IronOcrDictionaryException() IronOcrDictionaryException(String) Initializes a new instance of the IronOcrDictionaryException class with a specified error message. Declaration public IronOcrDictionaryException(string message) Parameters Type Name Description System.String message The message that describes the error. IronOcrDictionaryException(String, Exception) Initializes a new instance of the IronOcrDictionaryException class with a specified error message and a reference to the inner exception that is the cause of this exception. Declaration public IronOcrDictionaryException(string message, Exception innerException) Parameters Type Name Description System.String message The error message that explains the reason for the exception. System.Exception innerException The exception that is the cause of the current exception, or a null reference ( langword_csharp_Nothing in Visual Basic) if no inner exception is specified."
  },
  "api/IronOcr.Exceptions.IronOcrInstallationException.html": {
    "href": "api/IronOcr.Exceptions.IronOcrInstallationException.html",
    "title": "Class IronOcrInstallationException | C# OCR & Tesseract API | IronOCR",
    "keywords": "Class IronOcrInstallationException Inheritance System.Object IronOcrInstallationException Namespace : IronOcr.Exceptions Assembly : IronOcr.dll Syntax public class IronOcrInstallationException : Exception Constructors IronOcrInstallationException() Declaration public IronOcrInstallationException() IronOcrInstallationException(String) Declaration public IronOcrInstallationException(string message) Parameters Type Name Description System.String message IronOcrInstallationException(String, Exception) Declaration public IronOcrInstallationException(string message, Exception innerException) Parameters Type Name Description System.String message System.Exception innerException"
  },
  "api/IronOcr.Exceptions.IronOcrLicensingException.html": {
    "href": "api/IronOcr.Exceptions.IronOcrLicensingException.html",
    "title": "Class IronOcrLicensingException | C# OCR & Tesseract API | IronOCR",
    "keywords": "Class IronOcrLicensingException Represents errors that occur during IronOCR execution due to the library not being appropriately licensed. https://ironsoftware.com/csharp/ocr/licensing/ Inheritance System.Object IronOcrProductException IronOcrLicensingException Namespace : IronOcr.Exceptions Assembly : IronOcr.dll Syntax public class IronOcrLicensingException : IronOcrProductException Constructors IronOcrLicensingException() Initializes a new instance of the IronOcrLicensingException class. Declaration public IronOcrLicensingException() IronOcrLicensingException(String) Initializes a new instance of the IronOcrLicensingException class with a specified error message. Declaration public IronOcrLicensingException(string message) Parameters Type Name Description System.String message The message that describes the error. IronOcrLicensingException(String, Exception) Initializes a new instance of the IronOcrLicensingException class with a specified error message and a reference to the inner exception that is the cause of this exception. Declaration public IronOcrLicensingException(string message, Exception innerException) Parameters Type Name Description System.String message The error message that explains the reason for the exception. System.Exception innerException The exception that is the cause of the current exception, or a null reference ( langword_csharp_Nothing in Visual Basic) if no inner exception is specified."
  },
  "api/IronOcr.Exceptions.IronOcrNativeException.html": {
    "href": "api/IronOcr.Exceptions.IronOcrNativeException.html",
    "title": "Class IronOcrNativeException | C# OCR & Tesseract API | IronOCR",
    "keywords": "Class IronOcrNativeException Represents errors that occur in IronOCR native code Inheritance System.Object IronOcrNativeException Namespace : IronOcr.Exceptions Assembly : IronOcr.dll Syntax public class IronOcrNativeException : Exception Constructors IronOcrNativeException() Initializes a new instance of the IronOcrNativeException class. Declaration public IronOcrNativeException() IronOcrNativeException(String) Initializes a new instance of the IronOcrNativeException class with a specified error message. Declaration public IronOcrNativeException(string message) Parameters Type Name Description System.String message The message that describes the error. IronOcrNativeException(String, Exception) Initializes a new instance of the IronOcrNativeException class with a specified error message and a reference to the inner exception that is the cause of this exception. Declaration public IronOcrNativeException(string message, Exception innerException) Parameters Type Name Description System.String message The error message that explains the reason for the exception. System.Exception innerException The exception that is the cause of the current exception, or a null reference ( langword_csharp_Nothing in Visual Basic) if no inner exception is specified."
  },
  "api/IronOcr.Exceptions.IronOcrProductException.html": {
    "href": "api/IronOcr.Exceptions.IronOcrProductException.html",
    "title": "Class IronOcrProductException | C# OCR & Tesseract API | IronOCR",
    "keywords": "Class IronOcrProductException Represents errors that occur during IronOCR execution. Inheritance System.Object IronOcrProductException IronOcrDictionaryException IronOcrLicensingException Namespace : IronOcr.Exceptions Assembly : IronOcr.dll Syntax public class IronOcrProductException : Exception Constructors IronOcrProductException() Initializes a new instance of the IronOcrProductException class. Declaration public IronOcrProductException() IronOcrProductException(String) Initializes a new instance of the IronOcrProductException class with a specified error message. Declaration public IronOcrProductException(string message) Parameters Type Name Description System.String message The message that describes the error. IronOcrProductException(String, Exception) Initializes a new instance of the IronOcrProductException class with a specified error message and a reference to the inner exception that is the cause of this exception. Declaration public IronOcrProductException(string message, Exception innerException) Parameters Type Name Description System.String message The error message that explains the reason for the exception. System.Exception innerException The exception that is the cause of the current exception, or a null reference ( langword_csharp_Nothing in Visual Basic) if no inner exception is specified."
  },
  "api/IronOcr.html": {
    "href": "api/IronOcr.html",
    "title": "Namespace IronOcr | C# OCR & Tesseract API | IronOCR",
    "keywords": "Namespace IronOcr Classes CropRectangle Crop rectangle for OCR input CropRectangle.MeasurementUnits Units of measurement Installation A static class providing everything to need to configure the installation and licensing of IronOcr Installation.LoggingModes Logging modes. You may use any combination of these flags to enable logging. IronTesseract IronTesseract is a comprehensive managed class for performing Tesseract OCR in .Net applications. IronTesseract natively supports Tesseract 3, 4 and 5 engines, and will automatically install all required binaries and language packs (tessdata) files. OcrFilters OcrInput OcrInput provides a robust class for preparing one or more Image Files, PDFs, System.Drawing Objects, Streams and Binary Image data for OCR. Instances of OcrInput can be read by the IronTesseract class. We recognise that much of the quality of OCR results depends on preparing images to be read. This class allows developers to enhance their scanned documents provide faster, more accurate OCR results using filters such as: EnhanceResolution(Int32) , DeNoise() , ToGrayScale() , Deskew(OcrLanguage, Int32, OrientationConfidence) , Rotate(Double) and Sharpen() . Supports for multi-paged OCR input. OcrInput.ImageType Type of Image to save as. Common examples are PNG , JPG , and GIF . OcrInput.Page A full page (one image) within an OcrInput object. OcrLanguage The natural language in which OCR documents will be read. Any number of languages may be used simultaneously using the IronTessseract.AddSecondaryLanguage() Method. To use a custom Tesseract language file (.traineddata) please see the IronTessseract.UseCustomLanguageFile() Method OcrResult A full document object model (DOM) for results when IronTesseract reads an image or OcrInput . Gives access to Text, Pages, Words, Paragraphs, Lines, Words, Characters, Images, Barcodes, Coordinates, Font information in granular detail. OcrResult.Barcode Represents a barcode discovered during OCR. See ReadBarCodes which must be set true to use this feature. OcrResult.BarcodeEncoding Barcode Encoding Types. OcrResult.Block Represents a block of text containing zero or more paragraphs. OcrResult.Character Represents a single character (char) of text. OcrResult.Choice OcrResult.Line A line of text within an Paragraph OcrResult.OcrFont Detailed font information returned when using Tesseract OEM engine modes. OcrResult.OcrResultElement Lowest level of abstract OcrResult DOM element. All result objects extend from this including OcrResult.Barcode , OcrResult.Character , OcrResult.Word , OcrResult.Line , OcrResult.Paragraph ... OcrResult.OcrResultTextElement An abstract class representing discovered OCR DOM text elements such as OcrResult.Character , OcrResult.Word , OcrResult.Line , OcrResult.Paragraph ... OcrResult.Page Represents a single page within an OcrResult object. OcrResult.Paragraph Represents a paragraph of text with an OcrResult object. OcrResult.TextFlow Describes text direction OcrResult.Word Represents a Word discovered during OCR. OpenCvClient OrientationConfidence TesseractConfiguration A configuration object that fine-tunes Tesseract behavior at an Instance level. Gives access to every option available to tesseract command line or C++ API users. TesseractEngineMode Allows the developer to choose the algorithm Tesseract will use for OCR. TesseractAndLstm is the recommended behavior for IronOCR. TesseractPageSegmentationMode Page segmentation mode defines how your text will be searched for by Tesseract. TesseractVersion Selects between different binary versions of Tesseract."
  },
  "api/IronOcr.Installation.html": {
    "href": "api/IronOcr.Installation.html",
    "title": "Class Installation | C# OCR & Tesseract API | IronOCR",
    "keywords": "Class Installation A static class providing everything to need to configure the installation and licensing of IronOcr Inheritance System.Object Installation Namespace : IronOcr Assembly : IronOcr.dll Syntax public static class Installation : Object Fields SendAnonymousAnalyiticsAndCrashData Opt in or out of sending anonymous usage statistics about Iron Software usage and performance to help us improve the product and developer experience. Usage statistics are never sent in commercially deployed projects(when a license key is applied), only during development usage. Declaration public static bool SendAnonymousAnalyiticsAndCrashData Field Value Type Description System.Boolean Properties CustomLogger Custom logger implementation Declaration public static ILogger CustomLogger { get; set; } Property Value Type Description Microsoft.Extensions.Logging.ILogger InstallationPath IronOcr installation path Declaration public static string InstallationPath { get; set; } Property Value Type Description System.String IsLicensed Determines whether this instance of IronOcr is Licensed. Will return false unless a LicenseKey is set to a valid trial or full license key in IronOcr.Installation.LicenseKey, Web.Config , App.Config or appsettings.json in .Net Core. Declaration public static bool IsLicensed { get; } Property Value Type Description System.Boolean LicenseKey Removes watermarks. Get Licensed at https://ironsoftware.com Declaration public static string LicenseKey { get; set; } Property Value Type Description System.String LinuxAndDockerDependenciesAutoConfig If true The necessary package dependencies for IronOCR rendering will we automatically installed to Docker and Debian / Ubuntu Linux deployments. Applies only to IronOCR for .Net Core. This will take a few minutes the next time you run IronOCR. Watch the Visual Studio \"Output\" window for progress. Set this to false if manual Docker / Linux setup is more convenient: https://ironsoftware.com/csharp/ocr/docs/questions/csharp-tesseract-ocr-docker-linux-setup-tutorial/ Declaration public static bool LinuxAndDockerDependenciesAutoConfig { get; set; } Property Value Type Description System.Boolean See Also IronSoftware.Deployment.DeploymentEngine.SkipInstallCommands LogFilePath Setting a log path produces ‘log files’ which may be vey useful for debugging in production or providing to Iron Software support when reporting an issue. LogFilePath may be set to a directory name or a full file name. Setting LogFilePath = null will turn off log files. Declaration public static string LogFilePath { get; set; } Property Value Type Description System.String See Also ClearLogFiles() LoggingMode Activate or disable detailed developer messages sent to your choice of location in the IDE or application console. Declaration public static Installation.LoggingModes LoggingMode { get; set; } Property Value Type Description Installation.LoggingModes MachineLearningModelsDirectory Directory containing machine learning files for computer vision features Declaration public static string MachineLearningModelsDirectory { get; set; } Property Value Type Description System.String Methods ClearLogFiles() Removes any Iron Software log files at the LogFilePath . Declaration public static void ClearLogFiles() See Also LogFilePath IsValidLicense(String) Checks if a license key is valid. Declaration public static bool IsValidLicense(string LicenseKey) Parameters Type Name Description System.String LicenseKey Returns Type Description System.Boolean True when a valid key is given."
  },
  "api/IronOcr.Installation.LoggingModes.html": {
    "href": "api/IronOcr.Installation.LoggingModes.html",
    "title": "Class Installation.LoggingModes | C# OCR & Tesseract API | IronOCR",
    "keywords": "Class Installation.LoggingModes Logging modes. You may use any combination of these flags to enable logging. Inheritance System.Object Installation.LoggingModes Namespace : IronOcr Assembly : IronOcr.dll Syntax public sealed class LoggingModes : Enum Fields All Enable logging to the debug output window Declaration public const Installation.LoggingModes All Field Value Type Description Installation.LoggingModes Console Enable logging to the console Declaration public const Installation.LoggingModes Console Field Value Type Description Installation.LoggingModes Custom Enable custom logging Declaration public const Installation.LoggingModes Custom Field Value Type Description Installation.LoggingModes See Also CustomLogger DebugOutputWindow Enable logging to the debug output window Declaration public const Installation.LoggingModes DebugOutputWindow Field Value Type Description Installation.LoggingModes File Enable logging to the debug output window Declaration public const Installation.LoggingModes File Field Value Type Description Installation.LoggingModes See Also LogFilePath None Disable logging Declaration public const Installation.LoggingModes None Field Value Type Description Installation.LoggingModes value__ Declaration public int value__ Field Value Type Description System.Int32 See Also LoggingMode"
  },
  "api/IronOcr.IronTesseract.html": {
    "href": "api/IronOcr.IronTesseract.html",
    "title": "Class IronTesseract | C# OCR & Tesseract API | IronOCR",
    "keywords": "Class IronTesseract IronTesseract is a comprehensive managed class for performing Tesseract OCR in .Net applications. IronTesseract natively supports Tesseract 3, 4 and 5 engines, and will automatically install all required binaries and language packs (tessdata) files. Inheritance System.Object IronTesseract Namespace : IronOcr Assembly : IronOcr.dll Syntax public class IronTesseract : Object Constructors IronTesseract() Public constructor. Creates a default instance of IronTesseract Declaration public IronTesseract() IronTesseract(TesseractConfiguration) Public constructor. Creates an instance of IronTesseract with a customized TesseractConfiguration . This allows advanced developers to fine tune Tesseract behavior. Declaration public IronTesseract(TesseractConfiguration Configuration) Parameters Type Name Description TesseractConfiguration Configuration Fields Configuration An instance of TesseractConfiguration which allows fine-grained control of the underlying Tesseract OCR Engine. Options include: Language file detail level. Page Segmentation Mode and access to the entire API of tesseract settings variables. Declaration public TesseractConfiguration Configuration Field Value Type Description TesseractConfiguration Properties Language The Natural Language of the documents Which IronTesseract will read. Default is English. Additional languages can be installed easily using Nuget https://www.nuget.org/packages?q=IronOcr.Languages or downloaded from https://ironsoftware.com/csharp/ocr/languages/ We may use multiple languages packs simultaneously with the UseMultipleLanguages method. We can use custom Tesseract .tessdata language packs with the UseCustomTesseractLanguageFile(String) method. Declaration public OcrLanguage Language { get; set; } Property Value Type Description OcrLanguage See Also OcrLanguage MultiThreaded Allows IronTesseract to read documents using multiple threads on multiple CPU cores. A significant performance improvement over traditional Tesseract. Declaration public bool MultiThreaded { get; set; } Property Value Type Description System.Boolean Methods AddSecondaryLanguage(OcrLanguage) IronTesseract will use multiple tesseract language files simultaneously. MultilingualOCR. Any number of secondary languages may be added. Speed and performance may be affected. Declaration public void AddSecondaryLanguage(OcrLanguage SecondaryLanguage) Parameters Type Name Description OcrLanguage SecondaryLanguage An additional OcrLanguage AddSecondaryLanguage(String) IronTesseract will use multiple tesseract language files simultaneously. MultilingualOCR using a custom .traineddata tesseract 3,4 or 5 language file. Any number of secondary languages may be added. Speed and performance may be affected. Declaration public void AddSecondaryLanguage(string CustomLanguagePath) Parameters Type Name Description System.String CustomLanguagePath File path to a .traineddata tesseract language pack. ClearSecondaryLanguages() Removes all languages add by AddSecondaryLanguage(OcrLanguage) or AddSecondaryLanguage(String) Declaration public void ClearSecondaryLanguages() Read(OcrInput) Reads text from an OcrInput object and returns an OcrResult object. OcrInput is the preferred input type because it allows for OCR of multi-paged documents, and allows images to be enhanced before OCR to obtain faster, more accurate results. There are also other overloads of this method that allow for Images and PDFs to be read directly as File paths and Bitmaps. Declaration public OcrResult Read(OcrInput Input) Parameters Type Name Description OcrInput Input An OcrInput document which can contain one or more images and PDFs Returns Type Description OcrResult A OcrResult object containing text, and detailed, structured information about the extracted text content. Read(Image) Reads text from a System.Drawing.Image Image file and returns an OcrResult object. Declaration public OcrResult Read(Image Image) Parameters Type Name Description System.Drawing.Image Image A System.Drawing.Image or Bitmap Returns Type Description OcrResult A OcrResult object containing text, and detailed, structured information about the extracted text content. Read(Image, CropRectangle) Reads text from a region of a System.Drawing.Image Image file and returns an OcrResult object. Declaration public OcrResult Read(Image Image, CropRectangle ContentArea) Parameters Type Name Description System.Drawing.Image Image A System.Drawing.Image or Bitmap CropRectangle ContentArea Specifies a region within the image to extract text from as a CropRectangle with X, Y Width and Height in pixels. Setting a ContentArea can improve OCR speed. Returns Type Description OcrResult A OcrResult object containing text, and detailed, structured information about the extracted text content. Read(String) Reads text from an Image file and returns an OcrResult object. Declaration public OcrResult Read(string ImagePath) Parameters Type Name Description System.String ImagePath Path to an image file. Returns Type Description OcrResult A OcrResult object containing text, and detailed, structured information about the extracted text content. Read(String, CropRectangle) Reads text from a region of an Image file and returns an OcrResult object. Declaration public OcrResult Read(string ImagePath, CropRectangle ContentArea) Parameters Type Name Description System.String ImagePath Path to an image file. CropRectangle ContentArea Specifies a region within the image to extract text from as a CropRectangle with X, Y Width and Height in pixels. Setting a ContentArea can improve OCR speed. Returns Type Description OcrResult A OcrResult object containing text, and detailed, structured information about the extracted text content. ReadAsync(OcrInput) Reads text from an OcrInput object and returns an OcrResult object. OcrInput is the preferred input type because it allows for OCR of multi-paged documents, and allows images to be enhanced before OCR to obtain faster, more accurate results. There are also other overloads of this method that allow for Images and PDFs to be read directly as File paths and Bitmaps. Declaration public Task<OcrResult> ReadAsync(OcrInput Input) Parameters Type Name Description OcrInput Input An OcrInput document which can contain one or more images and PDFs Returns Type Description System.Threading.Tasks.Task < OcrResult > A task that represents the asynchronous read operation. The value of the System.Threading.Tasks.Task`1.Result property contains an OcrResult object containing text, and detailed, structured information about the extracted text content. ReadAsync(Image, CropRectangle) Reads text from an System.Drawing.Image object and returns an OcrResult object. Declaration public Task<OcrResult> ReadAsync(Image Image, CropRectangle ContentArea = null) Parameters Type Name Description System.Drawing.Image Image An System.Drawing.Image object CropRectangle ContentArea Specifies a region within the image to extract text from as a System.Drawing.Rectangle with X, Y Width and Height in pixels. Setting a ContentArea can improve OCR speed. Returns Type Description System.Threading.Tasks.Task < OcrResult > A task that represents the asynchronous read operation. The value of the System.Threading.Tasks.Task`1.Result property contains an OcrResult object containing text, and detailed, structured information about the extracted text content. ReadAsync(String, CropRectangle) Reads text from an Image file and returns an OcrResult object. Declaration public Task<OcrResult> ReadAsync(string ImagePath, CropRectangle ContentArea = null) Parameters Type Name Description System.String ImagePath Path to an image file. CropRectangle ContentArea Specifies a region within the image to extract text from as a System.Drawing.Rectangle with X, Y Width and Height in pixels. Setting a ContentArea can improve OCR speed. Returns Type Description System.Threading.Tasks.Task < OcrResult > A task that represents the asynchronous read operation. The value of the System.Threading.Tasks.Task`1.Result property contains an OcrResult object containing text, and detailed, structured information about the extracted text content. UseCustomTesseractLanguageFile(String) IronTesseract will use a tesseract .traineddata language file as its only OCR language. https://github.com/tesseract-ocr/tessdata Declaration public void UseCustomTesseractLanguageFile(string TrainedDataPath) Parameters Type Name Description System.String TrainedDataPath File path to a .traineddata file. These can be downloaded from https://github.com/tesseract-ocr/tessdata or generated using Tesseract command line. Events OcrProgress An Event which can be used to track OCR progress and inform users of OCR performance and progress. Progress is reported via the OcrProgresEventsArgs class Declaration public event EventHandler<OcrProgresEventsArgs> OcrProgress Event Type Type Description System.EventHandler < OcrProgresEventsArgs > Examples myIronTesseract.OcrProgress += (object o, IronOcr.Events.OcrProgresEventsArgs e) => { Console.WriteLine(e.ProgressPercent + \"% \" + e.Duration.TotalSeconds+\"s\" ); } See Also OcrProgresEventsArgs"
  },
  "api/IronOcr.OcrFilters.html": {
    "href": "api/IronOcr.OcrFilters.html",
    "title": "Class OcrFilters | C# OCR & Tesseract API | IronOCR",
    "keywords": "Class OcrFilters Inheritance System.Object OcrFilters Namespace : IronOcr Assembly : IronOcr.dll Syntax public sealed class OcrFilters : Enum Fields Binarize Declaration public const OcrFilters Binarize Field Value Type Description OcrFilters Contrast Declaration public const OcrFilters Contrast Field Value Type Description OcrFilters DeNoise Declaration public const OcrFilters DeNoise Field Value Type Description OcrFilters Deskew Declaration public const OcrFilters Deskew Field Value Type Description OcrFilters Dilate Declaration public const OcrFilters Dilate Field Value Type Description OcrFilters Erode Declaration public const OcrFilters Erode Field Value Type Description OcrFilters Invert Declaration public const OcrFilters Invert Field Value Type Description OcrFilters None Declaration public const OcrFilters None Field Value Type Description OcrFilters Rotate Declaration public const OcrFilters Rotate Field Value Type Description OcrFilters Scale Declaration public const OcrFilters Scale Field Value Type Description OcrFilters Sharpen Declaration public const OcrFilters Sharpen Field Value Type Description OcrFilters value__ Declaration public int value__ Field Value Type Description System.Int32"
  },
  "api/IronOcr.OcrInput.html": {
    "href": "api/IronOcr.OcrInput.html",
    "title": "Class OcrInput | C# OCR & Tesseract API | IronOCR",
    "keywords": "Class OcrInput OcrInput provides a robust class for preparing one or more Image Files, PDFs, System.Drawing Objects, Streams and Binary Image data for OCR. Instances of OcrInput can be read by the IronTesseract class. We recognise that much of the quality of OCR results depends on preparing images to be read. This class allows developers to enhance their scanned documents provide faster, more accurate OCR results using filters such as: EnhanceResolution(Int32) , DeNoise() , ToGrayScale() , Deskew(OcrLanguage, Int32, OrientationConfidence) , Rotate(Double) and Sharpen() . Supports for multi-paged OCR input. Inheritance System.Object OcrInput Implements System.IDisposable Namespace : IronOcr Assembly : IronOcr.dll Syntax public class OcrInput : Object Constructors OcrInput(CropRectangle, Object[]) Create a new OcrInput object populated with one or more images sharing a common crop area. This class is IDisposable and is best initiated with a 'using' statement. This constructor accepts any number of images as File Paths, Streams, Byte Arrays, System.Drawing.Image and System.Drawing.Bitmap. Each will become a OcrInput.Page . Declaration public OcrInput(CropRectangle ContentArea, params object[] Inputs) Parameters Type Name Description CropRectangle ContentArea Specifies a region of the image to extract text from as a CropRectangle with X, Y Width and Height in pixels. Setting a ContentArea can improve OCR speed. System.Object [] Inputs Any number of images as File Paths, Streams, Byte Arrays, System.Drawing.Image and System.Drawing.Bitmap. OcrInput(Byte[]) Create a new OcrInput object populated with an Image file as binary data. This class is IDisposable and is best initiated with a 'using' statement. Declaration public OcrInput(byte[] Bytes) Parameters Type Name Description System.Byte [] Bytes Bytes of an Image or PDF file. OcrInput(Byte[], CropRectangle) Create a new OcrInput object populated with an Image file as binary data. This class is IDisposable and is best initiated with a 'using' statement. Declaration public OcrInput(byte[] Bytes, CropRectangle ContentArea) Parameters Type Name Description System.Byte [] Bytes Bytes of an Image or PDF file. CropRectangle ContentArea Specifies a region of each image to extract text from as a CropRectangle with X, Y Width and Height in pixels. Setting a ContentArea can improve OCR speed. OcrInput(IEnumerable<Byte[]>) Create a new OcrInput object populated with the binary data of multiple Images with a common ContentArea. This class is IDisposable and is best initiated with a 'using' statement. Declaration public OcrInput(IEnumerable<byte[]> Bytes) Parameters Type Name Description System.Collections.Generic.IEnumerable < System.Byte []> Bytes An IEnumerable of byte arrays containing Image or PDF files. OcrInput(IEnumerable<Byte[]>, CropRectangle) Create a new OcrInput object populated with the binary data of multiple Images with a common ContentArea. This class is IDisposable and is best initiated with a 'using' statement. Declaration public OcrInput(IEnumerable<byte[]> Bytes, CropRectangle ContentArea) Parameters Type Name Description System.Collections.Generic.IEnumerable < System.Byte []> Bytes An IEnumerable of byte arrays containing Image or PDF files. CropRectangle ContentArea Specifies a region of each image to extract text from as a CropRectangle with X, Y Width and Height in pixels. Setting a ContentArea can improve OCR speed. OcrInput(IEnumerable<Bitmap>) Create a new OcrInput object populated with multiple System.Drawing.Bitmap. This class is IDisposable and is best initiated with a 'using' statement. Declaration public OcrInput(IEnumerable<Bitmap> Bitmaps) Parameters Type Name Description System.Collections.Generic.IEnumerable < System.Drawing.Bitmap > Bitmaps An IEnumerable of System.Drawing.Bitmap. OcrInput(IEnumerable<Bitmap>, CropRectangle) Create a new OcrInput object populated with multiple System.Drawing.Bitmaps sharing a common ContentArea. This class is IDisposable and is best initiated with a 'using' statement. Declaration public OcrInput(IEnumerable<Bitmap> Bitmaps, CropRectangle ContentArea) Parameters Type Name Description System.Collections.Generic.IEnumerable < System.Drawing.Bitmap > Bitmaps An IEnumerable of System.Drawing.Bitmap. CropRectangle ContentArea Specifies a region of the image to extract text from as a CropRectangle with X, Y Width and Height in pixels. Setting a ContentArea can improve OCR speed. OcrInput(IEnumerable<Image>) Create a new OcrInput object populated with any number of System.Drawing.Image. This class is IDisposable and is best initiated with a 'using' statement. Declaration public OcrInput(IEnumerable<Image> Images) Parameters Type Name Description System.Collections.Generic.IEnumerable < System.Drawing.Image > Images Any Number of System.Drawing.Image OcrInput(IEnumerable<Image>, CropRectangle) Create a new OcrInput object populated with any number of System.Drawing.Image sharing a common ContentArea. This class is IDisposable and is best initiated with a 'using' statement. Declaration public OcrInput(IEnumerable<Image> Images, CropRectangle ContentArea) Parameters Type Name Description System.Collections.Generic.IEnumerable < System.Drawing.Image > Images Any Number of System.Drawing.Image CropRectangle ContentArea Specifies a region of the image to extract text from as a CropRectangle with X, Y Width and Height in pixels. Setting a ContentArea can improve OCR speed. OcrInput(IEnumerable<Stream>) Create a new OcrInput object populated with multiple images as Streams. This class is IDisposable and is best initiated with a 'using' statement. Declaration public OcrInput(IEnumerable<Stream> Streams) Parameters Type Name Description System.Collections.Generic.IEnumerable < System.IO.Stream > Streams Steam containing an Image or PDF file. OcrInput(IEnumerable<Stream>, CropRectangle) Create a new OcrInput object populated with multiple images as Streams sharing a common ContentArea. This class is IDisposable and is best initiated with a 'using' statement. Declaration public OcrInput(IEnumerable<Stream> Streams, CropRectangle ContentArea) Parameters Type Name Description System.Collections.Generic.IEnumerable < System.IO.Stream > Streams Steam containing an Image or PDF file. CropRectangle ContentArea Specifies a region of the image to extract text from as a CropRectangle with X, Y Width and Height in pixels. Setting a ContentArea can improve OCR speed. OcrInput(IEnumerable<String>) Create a new OcrInput object populated with multiple Image files. This class is IDisposable and is best initiated with a 'using' statement. Declaration public OcrInput(IEnumerable<string> FilePaths) Parameters Type Name Description System.Collections.Generic.IEnumerable < System.String > FilePaths An IEnumerable of paths to Image or PDF files. OcrInput(IEnumerable<String>, CropRectangle) Create a new OcrInput object populated with multiple Image files with a common ContentArea. This class is IDisposable and is best initiated with a 'using' statement. Declaration public OcrInput(IEnumerable<string> FilePaths, CropRectangle ContentArea) Parameters Type Name Description System.Collections.Generic.IEnumerable < System.String > FilePaths An IEnumerable of paths to Image or PDF files. CropRectangle ContentArea Specifies a region of each image to extract text from as a CropRectangle with X, Y Width and Height in pixels. Setting a ContentArea can improve OCR speed. OcrInput(Bitmap) Create a new OcrInput object populated with a System.Drawing.Bitmap. This class is IDisposable and is best initiated with a 'using' statement. Declaration public OcrInput(Bitmap Bitmap) Parameters Type Name Description System.Drawing.Bitmap Bitmap A System.Drawing.Bitmap. OcrInput(Bitmap, CropRectangle) Create a new OcrInput object populated with a System.Drawing.Bitmap. This class is IDisposable and is best initiated with a 'using' statement. Declaration public OcrInput(Bitmap Bitmap, CropRectangle ContentArea) Parameters Type Name Description System.Drawing.Bitmap Bitmap A System.Drawing.Bitmap. CropRectangle ContentArea Specifies a region of the image to extract text from as a CropRectangle with X, Y Width and Height in pixels. Setting a ContentArea can improve OCR speed. OcrInput(Image) Create a new OcrInput object populated with a System.Drawing.Image. This class is IDisposable and is best initiated with a 'using' statement. Declaration public OcrInput(Image Image) Parameters Type Name Description System.Drawing.Image Image System.Drawing.Image OcrInput(Image, CropRectangle) Create a new OcrInput object populated with a specified region of a System.Drawing.Image. This class is IDisposable and is best initiated with a 'using' statement. Declaration public OcrInput(Image Image, CropRectangle ContentArea) Parameters Type Name Description System.Drawing.Image Image System.Drawing.Image CropRectangle ContentArea Specifies a region of the image to extract text from as a CropRectangle with X, Y Width and Height in pixels. Setting a ContentArea can improve OCR speed. OcrInput(Stream) Create a new OcrInput object populated with image data as a Stream. This class is IDisposable and is best initiated with a 'using' statement. Declaration public OcrInput(Stream Stream) Parameters Type Name Description System.IO.Stream Stream Steam containing an Image or PDF file. OcrInput(Stream, CropRectangle) Create a new OcrInput object populated with image data as a Stream. This class is IDisposable and is best initiated with a 'using' statement. Declaration public OcrInput(Stream Stream, CropRectangle ContentArea) Parameters Type Name Description System.IO.Stream Stream Steam containing an Image or PDF file. CropRectangle ContentArea Specifies a region of the image to extract text from as a CropRectangle with X, Y Width and Height in pixels. Setting a ContentArea can improve OCR speed. OcrInput(Object[]) Create a new OcrInput object to which images and PDF pages may be added. This class is IDisposable and is best initiated with a 'using' statement. Declaration public OcrInput(params object[] Inputs) Parameters Type Name Description System.Object [] Inputs Any number of images as File Paths, Streams, Byte Arrays, System.Drawing.Image and System.Drawing.Bitmap. OcrInput(String) Create a new OcrInput object populated with an Image file or PDF document. This class is IDisposable and is best initiated with a 'using' statement. Declaration public OcrInput(string FilePath) Parameters Type Name Description System.String FilePath Path to an Image or PDF file. OcrInput(String, CropRectangle, Nullable<Int32>) Create a new OcrInput object populated with an Image file. This class is IDisposable and is best initiated with a 'using' statement. Declaration public OcrInput(string FilePath, CropRectangle ContentArea, Nullable<int> DPI = null) Parameters Type Name Description System.String FilePath Path to an Image or PDF file. CropRectangle ContentArea Specifies a region of the image to extract text from as a CropRectangle with X, Y Width and Height in pixels. Setting a ContentArea can improve OCR speed. System.Nullable < System.Int32 > DPI Optional target DPI for the input content Fields TargetDPI The resolution that low resolution images will be enhanced to. To disable upscaling, set this to 0 (will affect read quality). See . TargetDPI also determines the resolution at which PDF documents will be sampled. Declaration public int TargetDPI Field Value Type Description System.Int32 Properties Pages Access to every OcrInput.Page within this OcrInput Declaration public List<OcrInput.Page> Pages { get; } Property Value Type Description System.Collections.Generic.List < OcrInput.Page > Title A title for the OcrInput document. This is relevant as it becomes metadata when exporting searchable PDFs and HOCR files from IronTesseract results. See SaveAsSearchablePdf(String) and SaveAsHocrFile(String) Declaration public string Title { get; set; } Property Value Type Description System.String Methods Add(OcrInput, CropRectangle) Adds all pages of an OcrInput to this OcrInput . Declaration public void Add(OcrInput imageAsOcrInput, CropRectangle ContentArea = null) Parameters Type Name Description OcrInput imageAsOcrInput OcrInput object to be added to this OcrInput. CropRectangle ContentArea Area to use of each page of the OcrInput object. Add(OcrInput.Page, CropRectangle) Adds a OcrInput OcrInput.Page to this OcrInput . Declaration public void Add(OcrInput.Page imageAsOcrInputPage, CropRectangle ContentArea) Parameters Type Name Description OcrInput.Page imageAsOcrInputPage Page to be added. CropRectangle ContentArea Area of the page to be added. Add(Byte[], CropRectangle) Adds a byte array containing the binary data of an image to this OcrInput . Declaration public void Add(byte[] imageAsByteArray, CropRectangle ContentArea = null) Parameters Type Name Description System.Byte [] imageAsByteArray A byte[] containing an image. Supported formats include JPEG, TIFF, GIF, PNG, PDF, BMP. CropRectangle ContentArea Area of the image to use with IronOCR. Add(IEnumerable<OcrInput.Page>, CropRectangle) Adds a IEnumerable of OcrInput OcrInput.Page to this OcrInput . Declaration public void Add(IEnumerable<OcrInput.Page> imagesAsOcrInputPages, CropRectangle ContentArea) Parameters Type Name Description System.Collections.Generic.IEnumerable < OcrInput.Page > imagesAsOcrInputPages Pages to be added. CropRectangle ContentArea Area of every page to be added. Add(IEnumerable<Byte[]>, CropRectangle) Adds a IEnumerable of byte array containing the binary data of images to this OcrInput . Declaration public void Add(IEnumerable<byte[]> imagesAsByteArrays, CropRectangle ContentArea = null) Parameters Type Name Description System.Collections.Generic.IEnumerable < System.Byte []> imagesAsByteArrays CropRectangle ContentArea Area of the every image to use with IronOCR. Add(IEnumerable<Bitmap>, CropRectangle) Adds a IEnumerable of System.Drawing.Bitmaps to this OcrInput . Declaration public void Add(IEnumerable<Bitmap> imageAsBitmaps, CropRectangle ContentArea = null) Parameters Type Name Description System.Collections.Generic.IEnumerable < System.Drawing.Bitmap > imageAsBitmaps An IEnumerable of managed Bitmap objects. CropRectangle ContentArea Area of the every image to use with IronOCR. Add(IEnumerable<Image>, CropRectangle) Adds an IEnumerable of System.Drawing.Images to this OcrInput . Declaration public void Add(IEnumerable<Image> images, CropRectangle ContentArea = null) Parameters Type Name Description System.Collections.Generic.IEnumerable < System.Drawing.Image > images IEnumerable of managed Image objects. CropRectangle ContentArea Area of the every image to use with IronOCR. Add(IEnumerable<Stream>, CropRectangle) Adds an IEnumerable of System.IO.Stream of image raw data to this OcrInput . Declaration public void Add(IEnumerable<Stream> sourceStreams, CropRectangle ContentArea = null) Parameters Type Name Description System.Collections.Generic.IEnumerable < System.IO.Stream > sourceStreams A IEnumerable of Streams containing raw data of images. Supported formats include JPEG, TIFF, GIF, PNG, PDF, BMP. CropRectangle ContentArea Area of the every image to use with IronOCR. Add(IEnumerable<String>, CropRectangle) Adds images to this this OcrInput . Declaration public void Add(IEnumerable<string> imageFilePaths, CropRectangle ContentArea = null) Parameters Type Name Description System.Collections.Generic.IEnumerable < System.String > imageFilePaths IEnumerable of image file paths. Supported formats include JPEG, TIFF, GIF, PNG, PDF, BMP. CropRectangle ContentArea Area of the every image to use with IronOCR. Add(Bitmap, CropRectangle) Adds a System.Drawing.Bitmap to this OcrInput . Declaration public void Add(Bitmap imageAsBitmap, CropRectangle ContentArea = null) Parameters Type Name Description System.Drawing.Bitmap imageAsBitmap A managed Bitmap object. CropRectangle ContentArea Area of the image to use with IronOCR. Add(Image, CropRectangle) Adds a System.Drawing.Image to this OcrInput . Declaration public void Add(Image image, CropRectangle ContentArea = null) Parameters Type Name Description System.Drawing.Image image A managed Image object. CropRectangle ContentArea Area of the image to use with IronOCR. Add(Stream, CropRectangle) Adds a System.IO.Stream containing the raw data of an image to this OcrInput . Declaration public void Add(Stream sourceStream, CropRectangle ContentArea = null) Parameters Type Name Description System.IO.Stream sourceStream A Stream containing an image. Supported formats include JPEG, TIFF, GIF, PNG, PDF, BMP. CropRectangle ContentArea Area of the image to use with IronOCR. Add(String, CropRectangle) Adds an image to this this OcrInput . Declaration public void Add(string imageFilePath, CropRectangle ContentArea = null) Parameters Type Name Description System.String imageFilePath File path to an image file. Supported formats include JPEG, TIFF, GIF, PNG, PDF, BMP. CropRectangle ContentArea Area of the image to use with IronOCR. AddFrameFromTiff(Byte[], Int32, CropRectangle) Adds a single frame (a page) from a Multi-frame TIFF file to the OcrInput document. The Tiff may be input as a file, byte array or stream. Each Frame will become a page of this OcrInput Declaration public void AddFrameFromTiff(byte[] TiffBytes, int FrameIndex, CropRectangle ContentArea = null) Parameters Type Name Description System.Byte [] TiffBytes A byte[] containing a TIFF file. System.Int32 FrameIndex Zero based frame number. CropRectangle ContentArea Optionally specifies a region of the image to extract text from as a CropRectangle with X, Y Width and Height in pixels. Setting a ContentArea can improve OCR speed. AddFrameFromTiff(Stream, Int32, CropRectangle) Adds a single frame (a page) from a Multi-frame TIFF file to the OcrInput document. The Tiff may be input as a file, byte array or stream. Each Frame will become a page of this OcrInput Declaration public void AddFrameFromTiff(Stream TiffStream, int FrameIndex, CropRectangle ContentArea = null) Parameters Type Name Description System.IO.Stream TiffStream A Stream containing a TIFF file. System.Int32 FrameIndex Zero based frame number. CropRectangle ContentArea Optionally specifies a region of the image to extract text from as a CropRectangle with X, Y Width and Height in pixels. Setting a ContentArea can improve OCR speed. AddFrameFromTiff(String, Int32, CropRectangle) Adds a single frame (a page) from a Multi-frame TIFF file to the OcrInput document. The Tiff may be input as a file, byte array or stream. Each Frame will become a page of this OcrInput Declaration public void AddFrameFromTiff(string TiffPath, int FrameIndex, CropRectangle ContentArea = null) Parameters Type Name Description System.String TiffPath A file path to a TIFF image. System.Int32 FrameIndex Zero based frame number. CropRectangle ContentArea Optionally specifies a region of the image to extract text from as a CropRectangle with X, Y Width and Height in pixels. Setting a ContentArea can improve OCR speed. AddImage(Byte[]) Adds a byte array containing the binary data of an image to this OcrInput . Declaration public void AddImage(byte[] ImageBytes) Parameters Type Name Description System.Byte [] ImageBytes A byte[] containing an image. Supported formats include JPEG, TIFF, GIF, PNG, PDF, BMP. AddImage(Byte[], CropRectangle) Adds a byte array containing the binary data of an image to this OcrInput . Declaration public void AddImage(byte[] ImageBytes, CropRectangle ContentArea) Parameters Type Name Description System.Byte [] ImageBytes A byte[] containing an image. Supported formats include JPEG, TIFF, GIF, PNG, PDF, BMP. CropRectangle ContentArea Optionally specifies a region of the image to extract text from as a CropRectangle with X, Y Width and Height in pixels. Setting a ContentArea can improve OCR speed. AddImage(Bitmap) Adds a System.Drawing.Bitmap to this OcrInput . Declaration public void AddImage(Bitmap Bitmap) Parameters Type Name Description System.Drawing.Bitmap Bitmap A managed Bitmap object. AddImage(Bitmap, CropRectangle) Adds a System.Drawing.Bitmap to this OcrInput . Declaration public void AddImage(Bitmap Bitmap, CropRectangle ContentArea) Parameters Type Name Description System.Drawing.Bitmap Bitmap A managed Bitmap object. CropRectangle ContentArea Optionally specifies a region of the bitmap to extract text from as a CropRectangle with X, Y Width and Height in pixels. Setting a ContentArea can improve OCR speed. AddImage(Bitmap, CropRectangle[]) Adds a System.Drawing.Bitmap to this OcrInput with many content area regions. If an empty array is supplied, will use whole image instead. Note: Output PDF of SaveAsSearchablePdf when using multiple Crop Rectangles will generate one page per Rectangle/> Declaration public void AddImage(Bitmap Bitmap, CropRectangle[] Rectangles) Parameters Type Name Description System.Drawing.Bitmap Bitmap A managed Bitmap object. CropRectangle [] Rectangles Array of crop rectangles of various content regions. AddImage(Image) Adds a System.Drawing.Image to this OcrInput . Declaration public void AddImage(Image Image) Parameters Type Name Description System.Drawing.Image Image A managed Image object. AddImage(Image, CropRectangle) Adds a System.Drawing.Image to this OcrInput . Declaration public void AddImage(Image Image, CropRectangle ContentArea) Parameters Type Name Description System.Drawing.Image Image A managed Image object. CropRectangle ContentArea Optionally specifies a region of the image to extract text from as a CropRectangle with X, Y Width and Height in pixels. Setting a ContentArea can improve OCR speed. AddImage(Image, CropRectangle[]) Adds a System.Drawing.Image to this OcrInput with many content area regions. If an empty array is supplied, will use whole image instead. Note: Output PDF of SaveAsSearchablePdf when using multiple Crop Rectangles will generate one page per Rectangle/> Declaration public void AddImage(Image Image, CropRectangle[] Rectangles) Parameters Type Name Description System.Drawing.Image Image A managed Image object. CropRectangle [] Rectangles Array of crop rectangles of various content regions. AddImage(Stream) Adds a System.IO.Stream containing the raw data of an image to this OcrInput . Declaration public void AddImage(Stream ImageStream) Parameters Type Name Description System.IO.Stream ImageStream A Stream containing an image. Supported formats include JPEG, TIFF, GIF, PNG, PDF, BMP. AddImage(Stream, CropRectangle) Adds a System.IO.Stream containing the raw data of an image to this OcrInput . Declaration public void AddImage(Stream ImageStream, CropRectangle ContentArea) Parameters Type Name Description System.IO.Stream ImageStream A Stream containing an image. Supported formats include JPEG, TIFF, GIF, PNG, PDF, BMP. CropRectangle ContentArea Optionally specifies a region of the image to extract text from as a CropRectangle with X, Y Width and Height in pixels. Setting a ContentArea can improve OCR speed. AddImage(String) Adds an image file to this OcrInput . Declaration public void AddImage(string ImagePath) Parameters Type Name Description System.String ImagePath File path to an image file. Supported formats include JPEG, TIFF, GIF, PNG, PDF, BMP. AddImage(String, CropRectangle) Adds an image file to this OcrInput . Declaration public void AddImage(string ImagePath, CropRectangle ContentArea) Parameters Type Name Description System.String ImagePath File path to an image file. Supported formats include JPEG, TIFF, GIF, PNG, PDF, BMP. CropRectangle ContentArea Optionally specifies a region of the image to extract text from as a CropRectangle with X, Y Width and Height in pixels. Setting a ContentArea can improve OCR speed. AddMultiFrameTiff(Byte[]) Adds a byte[] containing the binary data of a TIFF image with multiple pages to this OcrInput . Declaration public void AddMultiFrameTiff(byte[] TiffBytes) Parameters Type Name Description System.Byte [] TiffBytes A byte[] containing a TIFF file. AddMultiFrameTiff(Byte[], CropRectangle) Adds a byte[] containing the binary data of a TIFF image with multiple pages to this OcrInput . Declaration public void AddMultiFrameTiff(byte[] TiffBytes, CropRectangle ContentArea) Parameters Type Name Description System.Byte [] TiffBytes A byte[] containing a TIFF file. CropRectangle ContentArea Optionally specifies a region of the image to extract text from as a CropRectangle with X, Y Width and Height in pixels. Setting a ContentArea can improve OCR speed. AddMultiFrameTiff(Stream) Adds a Stream containing the binary data of a TIFF image with multiple pages to this OcrInput . Declaration public void AddMultiFrameTiff(Stream TiffStream) Parameters Type Name Description System.IO.Stream TiffStream A System.IO.Stream containing a TIFF file . AddMultiFrameTiff(Stream, CropRectangle) Adds a Stream containing the binary data of a TIFF image with multiple pages to this OcrInput . Declaration public void AddMultiFrameTiff(Stream TiffStream, CropRectangle ContentArea) Parameters Type Name Description System.IO.Stream TiffStream A System.IO.Stream containing a TIFF file . CropRectangle ContentArea Optionally specifies a region of the image to extract text from as a CropRectangle with X, Y Width and Height in pixels. Setting a ContentArea can improve OCR speed. AddMultiFrameTiff(String) Adds a Multi-frame TIFF file to the OcrInput document. Each Frame will become a page of this OcrInput Declaration public void AddMultiFrameTiff(string ImagePath) Parameters Type Name Description System.String ImagePath A file path to a TIFF image. AddMultiFrameTiff(String, CropRectangle) Adds a Multi-frame TIFF file to the OcrInput document. Each Frame will become a page of this OcrInput Declaration public void AddMultiFrameTiff(string ImagePath, CropRectangle ContentArea) Parameters Type Name Description System.String ImagePath A file path to a TIFF image. CropRectangle ContentArea Optionally specifies a region of the image to extract text from as a CropRectangle with X, Y Width and Height in pixels. Setting a ContentArea can improve OCR speed. AddPdf(Byte[], String, CropRectangle, Nullable<Int32>) Adds all pages of a PDF document to this OcrInput . Declaration public void AddPdf(byte[] PdfBytes, string Password = null, CropRectangle ContentArea = null, Nullable<int> DPI) Parameters Type Name Description System.Byte [] PdfBytes Binary data of a PDF file System.String Password Optional Password to unlock an encrypted or protected PDF CropRectangle ContentArea Specifies a region of the image to extract text from as a CropRectangle with X, Y Width and Height in pixels. Setting a ContentArea can improve OCR speed. System.Nullable < System.Int32 > DPI Resolution at which to sample the PDF. If null or zero will use TargetDPI AddPdf(Stream, String, CropRectangle, Nullable<Int32>) Adds all pages of a PDF document to this OcrInput . Declaration public void AddPdf(Stream PdfStream, string Password = null, CropRectangle ContentArea = null, Nullable<int> DPI) Parameters Type Name Description System.IO.Stream PdfStream System.IO.Stream containing a PDF System.String Password Optional Password to unlock an encrypted or protected PDF CropRectangle ContentArea Specifies a region of the image to extract text from as a CropRectangle with X, Y Width and Height in pixels. Setting a ContentArea can improve OCR speed. System.Nullable < System.Int32 > DPI Resolution at which to sample the PDF. If null or zero will use TargetDPI AddPdf(String, Int32, String) Adds all pages of a PDF document to this OcrInput . Declaration public void AddPdf(string PdfPath, int DPI, string Password = null) Parameters Type Name Description System.String PdfPath String file path to the PDF System.Int32 DPI Resolution at which to sample the PDF. If null or zero will use TargetDPI System.String Password Optional Password to unlock an encrypted or protected PDF AddPdf(String, String, CropRectangle, Nullable<Int32>) Adds all pages of a PDF document to this OcrInput . Declaration public void AddPdf(string PdfPath, string Password = null, CropRectangle ContentArea = null, Nullable<int> DPI) Parameters Type Name Description System.String PdfPath String file path to the PDF System.String Password Optional Password to unlock an encrypted or protected PDF CropRectangle ContentArea Specifies a region of the image to extract text from as a CropRectangle with X, Y Width and Height in pixels. Setting a ContentArea can improve OCR speed. System.Nullable < System.Int32 > DPI Resolution at which to sample the PDF. If null or zero will use TargetDPI AddPdfPage(Byte[], Int32, String, CropRectangle, Nullable<Int32>) Adds one page of a PDF document to this OcrInput . Declaration public void AddPdfPage(byte[] PdfBytes, int Page, string Password = null, CropRectangle ContentArea = null, Nullable<int> DPI) Parameters Type Name Description System.Byte [] PdfBytes Binary data of a PDF file System.Int32 Page The page number within the PDF to read. Zero based (first page is number 0) System.String Password Optional Password to unlock an encrypted or protected PDF CropRectangle ContentArea Specifies a region of the image to extract text from as a CropRectangle with X, Y Width and Height in pixels. Setting a ContentArea can improve OCR speed. System.Nullable < System.Int32 > DPI Resolution at which to sample the PDF. If null or zero will use TargetDPI AddPdfPage(Stream, Int32, String, CropRectangle, Nullable<Int32>) Adds one page of a PDF document to this OcrInput . Declaration public void AddPdfPage(Stream PdfStream, int Page, string Password = null, CropRectangle ContentArea = null, Nullable<int> DPI) Parameters Type Name Description System.IO.Stream PdfStream System.IO.Stream containing a PDF System.Int32 Page The page number within the PDF to read. Zero based (first page is number 0) System.String Password Optional Password to unlock an encrypted or protected PDF CropRectangle ContentArea Specifies a region of the image to extract text from as a CropRectangle with X, Y Width and Height in pixels. Setting a ContentArea can improve OCR speed. System.Nullable < System.Int32 > DPI Resolution at which to sample the PDF. If null or zero will use TargetDPI AddPdfPage(String, Int32, String, CropRectangle, Nullable<Int32>) Adds one page of a PDF document to this OcrInput . Declaration public void AddPdfPage(string PdfPath, int Page, string Password = null, CropRectangle ContentArea = null, Nullable<int> DPI) Parameters Type Name Description System.String PdfPath String file path to the PDF System.Int32 Page The page number within the PDF to read. Zero based (first page is number 0) System.String Password Optional Password to unlock an encrypted or protected PDF CropRectangle ContentArea Specifies a region of the image to extract text from as a CropRectangle with X, Y Width and Height in pixels. Setting a ContentArea can improve OCR speed. System.Nullable < System.Int32 > DPI Resolution at which to sample the PDF. If null or zero will use TargetDPI AddPdfPages(Byte[], IEnumerable<Int32>, String, CropRectangle, Nullable<Int32>) Adds selected pages of a PDF document to this OcrInput . Declaration public void AddPdfPages(byte[] PdfBytes, IEnumerable<int> Pages, string Password = null, CropRectangle ContentArea = null, Nullable<int> DPI) Parameters Type Name Description System.Byte [] PdfBytes Binary data of a PDF file System.Collections.Generic.IEnumerable < System.Int32 > Pages The page numbers within the PDF to read. Zero based (first page is number 0) System.String Password Optional Password to unlock an encrypted or protected PDF CropRectangle ContentArea Specifies a region of the image to extract text from as a CropRectangle with X, Y Width and Height in pixels. Setting a ContentArea can improve OCR speed. System.Nullable < System.Int32 > DPI Resolution at which to sample the PDF. If null or zero will use TargetDPI AddPdfPages(Stream, IEnumerable<Int32>, String, CropRectangle, Nullable<Int32>) Adds selected pages of a PDF document to this OcrInput . Declaration public void AddPdfPages(Stream PdfStream, IEnumerable<int> Pages, string Password = null, CropRectangle ContentArea = null, Nullable<int> DPI) Parameters Type Name Description System.IO.Stream PdfStream System.IO.Stream containing a PDF System.Collections.Generic.IEnumerable < System.Int32 > Pages The page numbers within the PDF to read. Zero based (first page is number 0) System.String Password Optional Password to unlock an encrypted or protected PDF CropRectangle ContentArea Specifies a region of the image to extract text from as a CropRectangle with X, Y Width and Height in pixels. Setting a ContentArea can improve OCR speed. System.Nullable < System.Int32 > DPI Resolution at which to sample the PDF. If null or zero will use TargetDPI AddPdfPages(String, IEnumerable<Int32>, String, CropRectangle, Nullable<Int32>) Adds selected pages from a PDF document into this OcrInput . Declaration public void AddPdfPages(string PdfPath, IEnumerable<int> Pages, string Password = null, CropRectangle ContentArea = null, Nullable<int> DPI) Parameters Type Name Description System.String PdfPath String file path to the PDF System.Collections.Generic.IEnumerable < System.Int32 > Pages System.String Password Optional Password to unlock an encrypted or protected PDF CropRectangle ContentArea Specifies a region of the image to extract text from as a CropRectangle with X, Y Width and Height in pixels. Setting a ContentArea can improve OCR speed. System.Nullable < System.Int32 > DPI Resolution at which to sample the PDF. If null or zero will use TargetDPI AddRange(OcrInput) Combines 2 instances of OcrInput , appending pages to the end of this OcrInput document. Declaration public void AddRange(OcrInput Range) Parameters Type Name Description OcrInput Range An Ocr Input to be appended to this instance. ApplyMultipleFilters(OcrFilters, Double, Int32, Int32, Int32, Boolean) Apply multiple imaging filters using the specified paramaeters Declaration public void ApplyMultipleFilters(OcrFilters filters, double Rotation = 0, int Snap = 45, int MaxWidth = 0, int MaxHeight = 0, bool Use3x3 = false) Parameters Type Name Description OcrFilters filters Filters to apply System.Double Rotation Rotation amount. Required when using the Rotation filter. Rotate System.Int32 Snap Optional snap amount when using the Deskew filter. Defaults to 45 degrees. Deskew System.Int32 MaxWidth Maximum width. Required when using the Scale filter. Scale System.Int32 MaxHeight Maximum height. Required when using the Scale filter. Scale System.Boolean Use3x3 Optional morphology when using the Dilate or Erode filter. Dilate Remarks This method serves as an alternative way to apply multiple filters. Filters are applied in what is typically the optimal order. Exceptions Type Condition System.ArgumentOutOfRangeException Binarize() This image filter turns every pixel black or white with no middle ground. May Improve OCR performance cases of very low contrast of text to background. Declaration public OcrInput Binarize() Returns Type Description OcrInput This OcrInput object allowing for LINQ style fluent notation. Contrast() Increases contrast automatically. This filter often improves OCR speed and accuracy in low contrast scans. Flattens Alpha channels to white. Declaration public OcrInput Contrast() Returns Type Description OcrInput This OcrInput object allowing for LINQ style fluent notation. DeepCleanBackgroundNoise() Heavy background noise removal. Only use this filter in case extreme document background noise is known, because this filter will also risk reducing OCR accuracy of clean documents, and is very CPU expensive. Declaration public OcrInput DeepCleanBackgroundNoise() Returns Type Description OcrInput This OcrInput object allowing for LINQ style fluent notation. DeNoise() Removes digital noise. This filter should only be used where noise is expected. Flattens Alpha channels to white. Declaration public OcrInput DeNoise() Returns Type Description OcrInput This OcrInput object allowing for LINQ style fluent notation. Deskew(IronTesseract, Int32, OrientationConfidence) Rotates an image so it is the right way up and orthogonal . This is very useful for OCR because Tesseract tolerance for skewed scans can be as low as 5 degrees. This also helps when producing searchable PDF documents from IronTesseract because the pages will likely all be the right way up. This version of Deskew combines two strategies: OSD character orientation recognition and Hough transform in combination with smart default settings. Declaration public bool Deskew(IronTesseract TesseractInstance, int Snap = 45, OrientationConfidence Confidence = null) Parameters Type Name Description IronTesseract TesseractInstance Reads OcrLanguage settings from your IronTesseract instance to help detect letters and numbers to straighten pages. If you wish to use multiple languages please use the Deskew(IronTesseract, Int32, OrientationConfidence) overload. System.Int32 Snap As the OSD strategy can only orient a page by multiples of 90 degrees, this parameter will use a Hugh Transform to straighten pages to true orthogonality. OrientationConfidence Confidence Optional OrientationConfidence class used to control and measure OSD by way of confidence thresholds. Returns Type Description System.Boolean Returns a boolean result of whether or not IronOCR was able to detect image orientation. True = Deskew was applied. False = Failed to detect image orientation and image remains unchanged. See Also Rotation Deskew(OcrLanguage, Int32, OrientationConfidence) Rotates an image so it is the right way up and orthogonal . This is very useful for OCR because Tesseract tolerance for skewed scans can be as low as 5 degrees. This also helps when producing searchable PDF documents from IronTesseract because the pages will likely all be the right way up. This version of Deskew combines two strategies: OSD character orientation recognition and Hough transform in combination with smart default settings. Declaration public bool Deskew(OcrLanguage CharacterDetectionLanguage, int Snap = 45, OrientationConfidence Confidence = null) Parameters Type Name Description OcrLanguage CharacterDetectionLanguage An OcrLanguage used to help detect letters and numbers to straighten pages. If you wish to use multiple languages please use the Deskew(IronTesseract, Int32, OrientationConfidence) overload. System.Int32 Snap As the OSD strategy can only orient a page by multiples of 90 degrees, this parameter will use a Hugh Transform to straighten pages to true orthogonality. OrientationConfidence Confidence Optional OrientationConfidence class used to control and measure OSD by way of confidence thresholds. Returns Type Description System.Boolean Returns a boolean result of whether or not IronOCR was able to detect image orientation. True = Deskew was applied. False = Failed to detect image orientation and image remains unchanged. See Also Rotation Deskew(Int32) Rotates an image so it is the right way up and orthogonal . This is very useful for OCR because Tesseract tolerance for skewed scans can be as low as 5 degrees. This also helps when producing searchable PDF documents from IronTesseract because the pages will likely all be the right way up. This version uses only Hough transform to make minor correction. Example: pages that where put in a scanner at a slight angle. Declaration public bool Deskew(int Snap) Parameters Type Name Description System.Int32 Snap As the OSD strategy can only orient a page by multiples of 90 degrees, this parameter will use a Hugh Transform to straighten pages Returns Type Description System.Boolean Returns a boolean result of whether or not IronOCR was able to detect image orientation. True = Deskew was applied. False = Failed to detect image orientation and image remains unchanged. See Also Rotation Dilate(Boolean) Advanced Morphology. Opposite of Erode(Boolean) . Declaration public OcrInput Dilate(bool use3x3 = false) Parameters Type Name Description System.Boolean use3x3 2x2 is default morphology Returns Type Description OcrInput This OcrInput object allowing for LINQ style fluent notation. Dispose() OcrInput is IDisposable. For best practice and to avoid memory leaks, remember to dispose, or initialize instances with a \"using\" statement. Declaration public void Dispose() EnhanceResolution(Int32) Enhances the resolution of low quality images. This filter is not often needed because and TargetDPI will automatically catch and resolve low resolution inputs. May not work for all images if their metadata is corrupted. Declaration public OcrInput EnhanceResolution(int TargetDPI = 225) Parameters Type Name Description System.Int32 TargetDPI The target DPI to resample to. Returns Type Description OcrInput This OcrInput object allowing for LINQ style fluent notation. Erode(Boolean) Advanced Morphology. Opposite of Dilate(Boolean) . Declaration public OcrInput Erode(bool use3x3 = false) Parameters Type Name Description System.Boolean use3x3 2x2 is default morphology Returns Type Description OcrInput This OcrInput object allowing for LINQ style fluent notation. Finalize() OcrInput has a safe finaliser that cleans up undisposed native images in memory. Declaration protected override void Finalize() FindMultipleTextRegions(Double, Int32, Boolean, Boolean) Use computer vision to detect areas which contain text elements and divide the input into separate images based on text regions. Declaration public void FindMultipleTextRegions(double Scale = 0, int DilationAmount = -1, bool Binarize = true, bool Invert = false) Parameters Type Name Description System.Double Scale (Only used during text region detection) Resolution scale factor. Image width and height will be multiplied by this value. System.Int32 DilationAmount (Only used during text region detection) Dilation amount, in pixels. Text areas width and height will be increased by this value. System.Boolean Binarize (Only used during text region detection) True to convert the image to black and white, False otherwise System.Boolean Invert (Only used during text region detection) True to invert image colors during binarization, False otherwise Remarks Useful for generating several OCR results from a single image/page FindTextRegion(Double, Int32, Boolean, Boolean) Use computer vision to detect regions which contain text elements on each page Declaration public void FindTextRegion(double Scale = 0, int DilationAmount = -1, bool Binarize = true, bool Invert = false) Parameters Type Name Description System.Double Scale (Only used during text region detection) Resolution scale factor. Image width and height will be multiplied by this value. System.Int32 DilationAmount (Only used during text region detection) Dilation amount, in pixels. Text areas width and height will be increased by this value. System.Boolean Binarize (Only used during text region detection) True to convert the image to black and white, False otherwise System.Boolean Invert (Only used during text region detection) True to invert image colors when binarizing, False otherwise FromPdf(Byte[], String, CropRectangle, Nullable<Int32>) Create a new OcrInput object populated with a PDF as binary data. This class is IDisposable and is best initiated with a 'using' statement. This constructor accepts any number of images as File Paths, Streams, Byte Arrays, System.Drawing.Image and System.Drawing.Bitmap. Each will become a OcrInput.Page . Declaration public static OcrInput FromPdf(byte[] PdfBytes, string Password = null, CropRectangle ContentArea = null, Nullable<int> DPI = null) Parameters Type Name Description System.Byte [] PdfBytes The PDF document as binary data in memory. System.String Password Optional Password to unlock an encrypted or protected PDF CropRectangle ContentArea Specifies a region of the image to extract text from as a CropRectangle with X, Y Width and Height in pixels. Setting a ContentArea can improve OCR speed. System.Nullable < System.Int32 > DPI Resolution at which to sample the PDF. If null or zero will use TargetDPI Returns Type Description OcrInput FromPdf(Stream, String, CropRectangle, Nullable<Int32>) Create a new OcrInput object populated with a PDF as a Stream. This class is IDisposable and is best initiated with a 'using' statement. This constructor accepts any number of images as File Paths, Streams, Byte Arrays, System.Drawing.Image and System.Drawing.Bitmap. Each will become a OcrInput.Page . Declaration public static OcrInput FromPdf(Stream PdfStream, string Password = null, CropRectangle ContentArea = null, Nullable<int> DPI = null) Parameters Type Name Description System.IO.Stream PdfStream The PDF document as a System.IO.Stream . System.String Password Optional Password to unlock an encrypted or protected PDF CropRectangle ContentArea Specifies a region of the image to extract text from as a CropRectangle with X, Y Width and Height in pixels. Setting a ContentArea can improve OCR speed. System.Nullable < System.Int32 > DPI Resolution at which to sample the PDF. If null or zero will use TargetDPI Returns Type Description OcrInput FromPdf(String, Int32, String) Create a new OcrInput object populated with a PDF. This class is IDisposable and is best initiated with a 'using' statement. This constructor accepts any number of images as File Paths, Streams, Byte Arrays, System.Drawing.Image and System.Drawing.Bitmap. Each will become a OcrInput.Page . Declaration public static OcrInput FromPdf(string PdfPath, int DPI, string Password = null) Parameters Type Name Description System.String PdfPath File path to the PDF System.Int32 DPI Resolution at which to sample the PDF. If null or zero will use TargetDPI System.String Password Optional Password to unlock an encrypted or protected PDF Returns Type Description OcrInput FromPdf(String, String, CropRectangle, Nullable<Int32>) Create a new OcrInput object populated with a PDF. This class is IDisposable and is best initiated with a 'using' statement. This constructor accepts any number of images as File Paths, Streams, Byte Arrays, System.Drawing.Image and System.Drawing.Bitmap. Each will become a OcrInput.Page . Declaration public static OcrInput FromPdf(string PdfPath, string Password = null, CropRectangle ContentArea = null, Nullable<int> DPI = null) Parameters Type Name Description System.String PdfPath File path to the PDF System.String Password Optional Password to unlock an encrypted or protected PDF CropRectangle ContentArea Specifies a region of the image to extract text from as a CropRectangle with X, Y Width and Height in pixels. Setting a ContentArea can improve OCR speed. System.Nullable < System.Int32 > DPI Resolution at which to sample the PDF. If null or zero will use TargetDPI Returns Type Description OcrInput FromPdfPage(Byte[], Int32, String, CropRectangle, Nullable<Int32>) Create a new OcrInput object populated with a single page from a PDF as binary data. This class is IDisposable and is best initiated with a 'using' statement. This constructor accepts any number of images as File Paths, Streams, Byte Arrays, System.Drawing.Image and System.Drawing.Bitmap. Each will become a OcrInput.Page . Declaration public static OcrInput FromPdfPage(byte[] PdfBytes, int Page, string Password = null, CropRectangle ContentArea = null, Nullable<int> DPI = null) Parameters Type Name Description System.Byte [] PdfBytes The PDF document as binary data in memory. System.Int32 Page The page number within the PDF to read. Zero based (first page is number 0) System.String Password Optional Password to unlock an encrypted or protected PDF CropRectangle ContentArea Specifies a region of the image to extract text from as a CropRectangle with X, Y Width and Height in pixels. Setting a ContentArea can improve OCR speed. System.Nullable < System.Int32 > DPI Resolution at which to sample the PDF. If null or zero will use TargetDPI Returns Type Description OcrInput FromPdfPage(Stream, Int32, String, CropRectangle, Nullable<Int32>) Create a new OcrInput object populated with a single page from a PDF as a Stream. This class is IDisposable and is best initiated with a 'using' statement. This constructor accepts any number of images as File Paths, Streams, Byte Arrays, System.Drawing.Image and System.Drawing.Bitmap. Each will become a OcrInput.Page . Declaration public static OcrInput FromPdfPage(Stream PdfStream, int Page, string Password = null, CropRectangle ContentArea = null, Nullable<int> DPI = null) Parameters Type Name Description System.IO.Stream PdfStream The PDF document as a System.IO.Stream . System.Int32 Page The page number within the PDF to read. Zero based (first page is number 0) System.String Password Optional Password to unlock an encrypted or protected PDF CropRectangle ContentArea Specifies a region of the image to extract text from as a CropRectangle with X, Y Width and Height in pixels. Setting a ContentArea can improve OCR speed. System.Nullable < System.Int32 > DPI Resolution at which to sample the PDF. If null or zero will use TargetDPI Returns Type Description OcrInput FromPdfPage(String, Int32, String, CropRectangle, Nullable<Int32>) Create a new OcrInput object populated with a single page of a PDF. This class is IDisposable and is best initiated with a 'using' statement. This constructor accepts any number of images as File Paths, Streams, Byte Arrays, System.Drawing.Image and System.Drawing.Bitmap. Each will become a OcrInput.Page . Declaration public static OcrInput FromPdfPage(string PdfPath, int Page, string Password = null, CropRectangle ContentArea = null, Nullable<int> DPI = null) Parameters Type Name Description System.String PdfPath File path to the PDF System.Int32 Page Which page of the PDF to read. Zero based (first page is number 0) System.String Password Optional Password to unlock an encrypted or protected PDF CropRectangle ContentArea Specifies a region of the image to extract text from as a CropRectangle with X, Y Width and Height in pixels. Setting a ContentArea can improve OCR speed. System.Nullable < System.Int32 > DPI Resolution at which to sample the PDF. If null or zero will use TargetDPI Returns Type Description OcrInput FromPdfPages(Byte[], IEnumerable<Int32>, String, CropRectangle, Nullable<Int32>) Create a new OcrInput object populated with multiple pages from a PDF as binary data. This class is IDisposable and is best initiated with a 'using' statement. This constructor accepts any number of images as File Paths, Streams, Byte Arrays, System.Drawing.Image and System.Drawing.Bitmap. Each will become a OcrInput.Page . Declaration public static OcrInput FromPdfPages(byte[] PdfBytes, IEnumerable<int> Pages, string Password = null, CropRectangle ContentArea = null, Nullable<int> DPI = null) Parameters Type Name Description System.Byte [] PdfBytes The PDF document as binary data in memory. System.Collections.Generic.IEnumerable < System.Int32 > Pages List which pages of the PDF which will be read. Zero based (first page is number 0) System.String Password Optional Password to unlock an encrypted or protected PDF CropRectangle ContentArea Specifies a region of the image to extract text from as a CropRectangle with X, Y Width and Height in pixels. Setting a ContentArea can improve OCR speed. System.Nullable < System.Int32 > DPI Resolution at which to sample the PDF. If null or zero will use TargetDPI Returns Type Description OcrInput FromPdfPages(Stream, IEnumerable<Int32>, String, CropRectangle, Nullable<Int32>) Create a new OcrInput object populated with multiple selected pages from a PDF as a Stream. This class is IDisposable and is best initiated with a 'using' statement. This constructor accepts any number of images as File Paths, Streams, Byte Arrays, System.Drawing.Image and System.Drawing.Bitmap. Each will become a OcrInput.Page . Declaration public static OcrInput FromPdfPages(Stream PdfStream, IEnumerable<int> Pages, string Password = null, CropRectangle ContentArea = null, Nullable<int> DPI = null) Parameters Type Name Description System.IO.Stream PdfStream The PDF document as a System.IO.Stream . System.Collections.Generic.IEnumerable < System.Int32 > Pages The pages of the PDF to read. Zero based (first page is number 0) System.String Password Optional Password to unlock an encrypted or protected PDF CropRectangle ContentArea Specifies a region of the image to extract text from as a CropRectangle with X, Y Width and Height in pixels. Setting a ContentArea can improve OCR speed. System.Nullable < System.Int32 > DPI Resolution at which to sample the PDF. If null or zero will use TargetDPI Returns Type Description OcrInput FromPdfPages(String, IEnumerable<Int32>, String, CropRectangle, Nullable<Int32>) Create a new OcrInput object populated with multiple pages from a PDF. This class is IDisposable and is best initiated with a 'using' statement. This constructor accepts any number of images as File Paths, Streams, Byte Arrays, System.Drawing.Image and System.Drawing.Bitmap. Each will become a OcrInput.Page . Declaration public static OcrInput FromPdfPages(string PdfPath, IEnumerable<int> Pages, string Password = null, CropRectangle ContentArea = null, Nullable<int> DPI = null) Parameters Type Name Description System.String PdfPath File path to the PDF System.Collections.Generic.IEnumerable < System.Int32 > Pages List which pages of the PDF will be read. Zero based (first page is number 0) System.String Password Optional Password to unlock an encrypted or protected PDF CropRectangle ContentArea Specifies a region of the image to extract text from as a CropRectangle with X, Y Width and Height in pixels. Setting a ContentArea can improve OCR speed. System.Nullable < System.Int32 > DPI Resolution at which to sample the PDF. If null or zero will use TargetDPI Returns Type Description OcrInput HoughTransformStraighten(Int32) Uses a Hough Transform to rotate and image to the nearest 90 degrees of straightness. This is very useful for OCR because Tesseract tolerance for skewed scans can be as low as 5 degrees. You may also find the Deskew(IronTesseract, Int32, OrientationConfidence) method of useful as it can use cOCR character detection to get a more accurate page straightening. Declaration public OcrInput HoughTransformStraighten(int MaxAngle = 45) Parameters Type Name Description System.Int32 MaxAngle Maximum angle of skew to correct for. Higher values can lead to more opportunity for correction, but may be slower and more prone to error including upside down pages. Returns Type Description OcrInput This OcrInput object allowing for LINQ style fluent notation. See Also Rotation Invert(Boolean) Inverts every color. E.g. White becomes black : black becomes white. Declaration public OcrInput Invert(bool GrayScale = true) Parameters Type Name Description System.Boolean GrayScale Optionally remove all color channels and return a GrayScale image. Returns Type Description OcrInput This OcrInput object allowing for LINQ style fluent notation. OrientPagesWithOSD(IronTesseract, OrientationConfidence) Declaration public OcrInput OrientPagesWithOSD(IronTesseract TesseractInstance, OrientationConfidence Confidence = null) Parameters Type Name Description IronTesseract TesseractInstance Reads OcrLanguage settings from your IronTesseract instance to help detect letters and numbers to straighten pages. If you wish to use multiple languages please use the Deskew(IronTesseract, Int32, OrientationConfidence) overload. OrientationConfidence Confidence Optional OrientationConfidence class used to control and measure OSD by way of confidence thresholds. Returns Type Description OcrInput This OcrInput object allowing for LINQ style fluent notation. See Also Rotation OrientPagesWithOSD(OcrLanguage, OrientationConfidence) Uses Tesseract \"Orientation & Script Detection: to turn OcrInput pages the right way up in multiples of 90 degress. Declaration public OcrInput OrientPagesWithOSD(OcrLanguage CharacterDetectionLanguage, OrientationConfidence Confidence = null) Parameters Type Name Description OcrLanguage CharacterDetectionLanguage An OcrLanguage used to help detect letters and numbers to straighten pages. If you wish to use multiple languages please use the Deskew(IronTesseract, Int32, OrientationConfidence) overload. OrientationConfidence Confidence Optional OrientationConfidence class used to control and measure OSD by way of confidence thresholds. Returns Type Description OcrInput This OcrInput object allowing for LINQ style fluent notation. See Also Rotation PageCount() The number of OcrInput.Page s currently present in this OcrInput Declaration public int PageCount() Returns Type Description System.Int32 ReplaceColor(Color, Color, Int32) Declaration public OcrInput ReplaceColor(Color currentColor, Color newColor, int tolerance = 10) Parameters Type Name Description System.Drawing.Color currentColor Current Color System.Drawing.Color newColor New Color System.Int32 tolerance Tolerance Value Returns Type Description OcrInput Rotate(Double) Rotates images by a number of degrees clockwise. For anti-clockwise, use negative numbers. Also see IronOcr.OcrInput.Deskew(System.Int32,System.Boolean) Declaration public OcrInput Rotate(double Degrees) Parameters Type Name Description System.Double Degrees A number of clockwise degrees. Returns Type Description OcrInput This OcrInput object allowing for LINQ style fluent notation. SaveAsImages(String, OcrInput.ImageType) Exports an OcrInput object as Images Declaration public string[] SaveAsImages(string Prefix = \"export_of_page\", OcrInput.ImageType Extension) Parameters Type Name Description System.String Prefix Will save images at {Prefix}_(page_number).{Extension}. May include a fully qualified file path. OcrInput.ImageType Extension Output file extension in lower-case. Returns Type Description System.String [] Array of saved image file names. Can be multiple if OcrInput used has multiple pages. Exceptions Type Condition System.Exception Throws an exception if there are no pages. See OcrInput.Page Scale(Int32, Boolean) Scales OCRInput pages proportionally. Declaration public OcrInput Scale(int Percentage, bool ScaleCropArea = true) Parameters Type Name Description System.Int32 Percentage The percentage scale. 100 = no effect. System.Boolean ScaleCropArea Should associated crop areas also be scaled proportionally (recommended true) Returns Type Description OcrInput This OcrInput object allowing for LINQ style fluent notation. Scale(Int32, Int32, Boolean) Scales the OCRInput pages up in size. Declaration public OcrInput Scale(int MaxWidth, int MaxHeight, bool ScaleCropArea = true) Parameters Type Name Description System.Int32 MaxWidth Maximum width in pixels. System.Int32 MaxHeight Maximum height in pixels. System.Boolean ScaleCropArea Should associated crop areas also be scaled proportionally (recommended true) Returns Type Description OcrInput This OcrInput object allowing for LINQ style fluent notation. Sharpen() Sharpens blurred OCR Documents. Flattens Alpha channels to white. Declaration public OcrInput Sharpen() Returns Type Description OcrInput This OcrInput object allowing for LINQ style fluent notation. StampCropRectangleAndSaveAs(CropRectangle, Color, String, OcrInput.ImageType) Saves a copy of the image with a rectangle applied and to visualize and debug where CropRectangle will be applied when using CropRectangle on your image. Declaration public string[] StampCropRectangleAndSaveAs(CropRectangle cropRectangle, Color rectangleColor, string Prefix = \"rectangle_on_page\", OcrInput.ImageType extension) Parameters Type Name Description CropRectangle cropRectangle Use a CropRectangle to debug the area that will be scanned on an image. System.Drawing.Color rectangleColor Color of rectangle drawn. Red is recommended for easy contrast. System.String Prefix Will save images at {Prefix}_(page_number).{Extension}. May include a fully qualified file path. OcrInput.ImageType extension Output file extension in lower-case. Returns Type Description System.String [] Array of saved image file names. Can be multiple if OcrInput used has multiple pages. Exceptions Type Condition System.Exception Throws an exception if there are no pages. See OcrInput.Page ToGrayScale() This image filter turns every pixel into a shade of grayscale. Unlikely to improve OCR accuracy but may improve speed. Declaration public OcrInput ToGrayScale() Returns Type Description OcrInput This OcrInput object allowing for LINQ style fluent notation. WithTitle(String) Adds a Title to the OcrInput Document. This title will be used when calling SaveAsHocrFile(String) and SaveAsSearchablePdf(String) Declaration public OcrInput WithTitle(string Title) Parameters Type Name Description System.String Title The document title as a string. Returns Type Description OcrInput This OcrInput object allowing for LINQ style fluent notation. Implements System.IDisposable"
  },
  "api/IronOcr.OcrInput.ImageType.html": {
    "href": "api/IronOcr.OcrInput.ImageType.html",
    "title": "Class OcrInput.ImageType | C# OCR & Tesseract API | IronOCR",
    "keywords": "Class OcrInput.ImageType Type of Image to save as. Common examples are PNG , JPG , and GIF . Inheritance System.Object OcrInput.ImageType Namespace : IronOcr Assembly : IronOcr.dll Syntax public sealed class ImageType : Enum Fields BMP A BMP file contains uncompressed data, making it ideal for storing and displaying high-quality digital images. Declaration public const OcrInput.ImageType BMP Field Value Type Description OcrInput.ImageType GIF GIF stands for Graphics Interchange Format. GIF is a raster file format designed for relatively basic images that appear mainly on the internet. Each file can support up to 8 bits per pixel and can contain 256 indexed colors. Declaration public const OcrInput.ImageType GIF Field Value Type Description OcrInput.ImageType JPG JPG is a digital image format which contains compressed image data. Declaration public const OcrInput.ImageType JPG Field Value Type Description OcrInput.ImageType PNG PNG is short for Portable Network Graphic, a type of raster image file. Declaration public const OcrInput.ImageType PNG Field Value Type Description OcrInput.ImageType TIFF TIFF stands for Tag Image File Format, TIFF is a file used to store raster graphics and image information. Declaration public const OcrInput.ImageType TIFF Field Value Type Description OcrInput.ImageType value__ Declaration public int value__ Field Value Type Description System.Int32"
  },
  "api/IronOcr.OcrInput.Page.html": {
    "href": "api/IronOcr.OcrInput.Page.html",
    "title": "Class OcrInput.Page | C# OCR & Tesseract API | IronOCR",
    "keywords": "Class OcrInput.Page A full page (one image) within an OcrInput object. Inheritance System.Object OcrInput.Page Namespace : IronOcr Assembly : IronOcr.dll Syntax public class Page : Object Properties ContentArea Crop area of this page. If not null, text will only be read from within the ContentArea rectangle. Declaration public Nullable<Rectangle> ContentArea { get; set; } Property Value Type Description System.Nullable < System.Drawing.Rectangle > Height Height in Pixels Declaration public int Height { get; } Property Value Type Description System.Int32 HorizontalDPI Resolution in DPI on X axis Declaration public int HorizontalDPI { get; } Property Value Type Description System.Int32 Index Zero based page number Declaration public int Index { get; } Property Value Type Description System.Int32 VerticalDPI Resolution in DPI on Y axis Declaration public int VerticalDPI { get; } Property Value Type Description System.Int32 Width Width in Pixels Declaration public int Width { get; } Property Value Type Description System.Int32 Methods DrawRectangleOnPage(CropRectangle, Color) Draw a Rectangle on a OcrInput.Page . Declaration public Bitmap DrawRectangleOnPage(CropRectangle CropRect, Color rectangleColor) Parameters Type Name Description CropRectangle CropRect Crop Rectangle System.Drawing.Color rectangleColor Color for pen of rectangle border Returns Type Description System.Drawing.Bitmap Bitmap FindMultipleTextRegions(Double, Int32, Boolean, Boolean) Use computer vision to detect areas which contain text elements and divide the page into separate images based on text regions. Declaration public List<OcrInput.Page> FindMultipleTextRegions(double Scale = 0, int DilationAmount = -1, bool Binarize = true, bool Invert = false) Parameters Type Name Description System.Double Scale (Only used during text region detection) Resolution scale factor. Image width and height will be multiplied by this value. System.Int32 DilationAmount (Only used during text region detection) Dilation amount, in pixels. Text areas width and height will be increased by this value. System.Boolean Binarize (Only used during text region detection) True to convert the image to black and white, False otherwise System.Boolean Invert (Only used during text region detection) True to invert image colors when binarizing, False otherwise Returns Type Description System.Collections.Generic.List < OcrInput.Page > List of rectangles which contain text elements Remarks Useful for generating several OCR results from a single image/page FindTextRegion(Double, Int32, Boolean, Boolean) Use computer vision to detect regions which contain text elements and instruct Tesseract to only search for text within the area in which text was detected. Declaration public CropRectangle FindTextRegion(double Scale = 0, int DilationAmount = -1, bool Binarize = true, bool Invert = false) Parameters Type Name Description System.Double Scale (Only used during text region detection) Resolution scale factor. Image width and height will be multiplied by this value. System.Int32 DilationAmount (Only used during text region detection) Dilation amount, in pixels. Text areas width and height will be increased by this value. System.Boolean Binarize (Only used during text region detection) True to convert the image to black and white, False otherwise System.Boolean Invert (Only used during text region detection) True to invert image colors when binarizing, False otherwise Returns Type Description CropRectangle Rectangle which contains text elements GetCropRectangleImage() Draw a Rectangle on a OcrInput.Page . Declaration public Bitmap GetCropRectangleImage() Returns Type Description System.Drawing.Bitmap Bitmap GetTextRegions(Double, Int32, Boolean, Boolean) Use computer vision to detect areas which contain text elements and return a list of rectangles. Declaration public List<CropRectangle> GetTextRegions(double Scale = 0, int DilationAmount = -1, bool Binarize = true, bool Invert = false) Parameters Type Name Description System.Double Scale (Only used during text region detection) Resolution scale factor. Image width and height will be multiplied by this value. System.Int32 DilationAmount (Only used during text region detection) Dilation amount, in pixels. Text areas width and height will be increased by this value. System.Boolean Binarize (Only used during text region detection) True to convert the image to black and white, False otherwise System.Boolean Invert (Only used during text region detection) True to invert image colors when binarizing, False otherwise Returns Type Description System.Collections.Generic.List < CropRectangle > List of rectangles which contain text elements Remarks Useful for generating several OCR results from a single image/page Remove() Removes a page from this OcrInput Declaration public bool Remove() Returns Type Description System.Boolean SaveAsImage(String) Saves this page as a Bitmap file to a specified path. A file path. Declaration public void SaveAsImage(string Path) Parameters Type Name Description System.String Path SaveAsImage(String, ImageFormat) Saves this page as an image file of specified format. A file path. The desired image file format. Declaration public void SaveAsImage(string Path, ImageFormat Format) Parameters Type Name Description System.String Path System.Drawing.Imaging.ImageFormat Format ToBitmap() Outputs this page as a System.Drawing.Bitmap Declaration public Bitmap ToBitmap() Returns Type Description System.Drawing.Bitmap A native bitmap image."
  },
  "api/IronOcr.OcrLanguage.html": {
    "href": "api/IronOcr.OcrLanguage.html",
    "title": "Class OcrLanguage | C# OCR & Tesseract API | IronOCR",
    "keywords": "Class OcrLanguage The natural language in which OCR documents will be read. Any number of languages may be used simultaneously using the IronTessseract.AddSecondaryLanguage() Method. To use a custom Tesseract language file (.traineddata) please see the IronTessseract.UseCustomLanguageFile() Method Inheritance System.Object OcrLanguage Namespace : IronOcr Assembly : IronOcr.dll Syntax public sealed class OcrLanguage : Enum Fields Afrikaans Afrikaans OCR language. Performs OCR, reading documents of the Afrikaans language with an understanding of spelling and linguistic context. This Default variant of Afrikaans uses both an LTSM (Long Term Short Term neural network) and an OEM (shape recognition evolved from Tesseract 3) OCR strategies which can mesh them together to produce results which are both fast and accurate. To use this language please install the Nuget Package 'IronOcr.Languages.Afrikaans' from https://www.nuget.org/packages/IronOcr.Languages.Afrikaans/ to your Visual Studio project. Alternatively download the \"Afrikaans.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage Afrikaans Field Value Type Description OcrLanguage AfrikaansBest Afrikaans OCR language. Performs OCR, reading documents of the Afrikaans language with an understanding of spelling and linguistic context. This 'Best' (detailed) variant of Afrikaans uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed. To use this language please install the Nuget Package 'IronOcr.Languages.Afrikaans' from https://www.nuget.org/packages/IronOcr.Languages.Afrikaans/ to your Visual Studio project. Alternatively download the \"Afrikaans.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage AfrikaansBest Field Value Type Description OcrLanguage AfrikaansFast Afrikaans OCR language. Performs OCR, reading documents of the Afrikaans language with an understanding of spelling and linguistic context. This 'Fast' variant of Afrikaans uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy. To use this language please install the Nuget Package 'IronOcr.Languages.Afrikaans' from https://www.nuget.org/packages/IronOcr.Languages.Afrikaans/ to your Visual Studio project. Alternatively download the \"Afrikaans.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage AfrikaansFast Field Value Type Description OcrLanguage Albanian Albanian OCR language. Performs OCR, reading documents of the Albanian (gjuha shqipe) language with an understanding of spelling and linguistic context. This Default variant of Albanian uses both an LTSM (Long Term Short Term neural network) and an OEM (shape recognition evolved from Tesseract 3) OCR strategies which can mesh them together to produce results which are both fast and accurate. To use this language please install the Nuget Package 'IronOcr.Languages.Albanian' from https://www.nuget.org/packages/IronOcr.Languages.Albanian/ to your Visual Studio project. Alternatively download the \"Albanian.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage Albanian Field Value Type Description OcrLanguage AlbanianBest Albanian OCR language. Performs OCR, reading documents of the Albanian (gjuha shqipe) language with an understanding of spelling and linguistic context. This 'Best' (detailed) variant of Albanian uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed. To use this language please install the Nuget Package 'IronOcr.Languages.Albanian' from https://www.nuget.org/packages/IronOcr.Languages.Albanian/ to your Visual Studio project. Alternatively download the \"Albanian.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage AlbanianBest Field Value Type Description OcrLanguage AlbanianFast Albanian OCR language. Performs OCR, reading documents of the Albanian (gjuha shqipe) language with an understanding of spelling and linguistic context. This 'Fast' variant of Albanian uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy. To use this language please install the Nuget Package 'IronOcr.Languages.Albanian' from https://www.nuget.org/packages/IronOcr.Languages.Albanian/ to your Visual Studio project. Alternatively download the \"Albanian.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage AlbanianFast Field Value Type Description OcrLanguage Amharic Amharic OCR language. Performs OCR, reading documents of the Amharic (አማርኛ) language with an understanding of spelling and linguistic context. This Default variant of Amharic uses both an LTSM (Long Term Short Term neural network) and an OEM (shape recognition evolved from Tesseract 3) OCR strategies which can mesh them together to produce results which are both fast and accurate. To use this language please install the Nuget Package 'IronOcr.Languages.Amharic' from https://www.nuget.org/packages/IronOcr.Languages.Amharic/ to your Visual Studio project. Alternatively download the \"Amharic.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage Amharic Field Value Type Description OcrLanguage AmharicBest Amharic OCR language. Performs OCR, reading documents of the Amharic (አማርኛ) language with an understanding of spelling and linguistic context. This 'Best' (detailed) variant of Amharic uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed. To use this language please install the Nuget Package 'IronOcr.Languages.Amharic' from https://www.nuget.org/packages/IronOcr.Languages.Amharic/ to your Visual Studio project. Alternatively download the \"Amharic.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage AmharicBest Field Value Type Description OcrLanguage AmharicFast Amharic OCR language. Performs OCR, reading documents of the Amharic (አማርኛ) language with an understanding of spelling and linguistic context. This 'Fast' variant of Amharic uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy. To use this language please install the Nuget Package 'IronOcr.Languages.Amharic' from https://www.nuget.org/packages/IronOcr.Languages.Amharic/ to your Visual Studio project. Alternatively download the \"Amharic.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage AmharicFast Field Value Type Description OcrLanguage AncientGreek Ancient Greek OCR language. Performs OCR, reading documents of the Ancient Greek (Ἑλληνική) language with an understanding of spelling and linguistic context. This Default variant of Ancient Greek uses both an LTSM (Long Term Short Term neural network) and an OEM (shape recognition evolved from Tesseract 3) OCR strategies which can mesh them together to produce results which are both fast and accurate. To use this language please install the Nuget Package 'IronOcr.Languages.AncientGreek' from https://www.nuget.org/packages/IronOcr.Languages.AncientGreek/ to your Visual Studio project. Alternatively download the \"AncientGreek.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage AncientGreek Field Value Type Description OcrLanguage AncientGreekBest Ancient Greek OCR language. Performs OCR, reading documents of the Ancient Greek (Ἑλληνική) language with an understanding of spelling and linguistic context. This 'Best' (detailed) variant of Ancient Greek uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed. To use this language please install the Nuget Package 'IronOcr.Languages.AncientGreek' from https://www.nuget.org/packages/IronOcr.Languages.AncientGreek/ to your Visual Studio project. Alternatively download the \"AncientGreek.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage AncientGreekBest Field Value Type Description OcrLanguage AncientGreekFast Ancient Greek OCR language. Performs OCR, reading documents of the Ancient Greek (Ἑλληνική) language with an understanding of spelling and linguistic context. This 'Fast' variant of Ancient Greek uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy. To use this language please install the Nuget Package 'IronOcr.Languages.AncientGreek' from https://www.nuget.org/packages/IronOcr.Languages.AncientGreek/ to your Visual Studio project. Alternatively download the \"AncientGreek.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage AncientGreekFast Field Value Type Description OcrLanguage Arabic Arabic OCR language. Performs OCR, reading documents of the Arabic (العربية) language with an understanding of spelling and linguistic context. This Default variant of Arabic uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine. To use this language please install the Nuget Package 'IronOcr.Languages.Arabic' from https://www.nuget.org/packages/IronOcr.Languages.Arabic/ to your Visual Studio project. Alternatively download the \"Arabic.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage Arabic Field Value Type Description OcrLanguage ArabicAlphabet Arabic Alphabetic Script OCR dictionary. Performs OCR, identifying characters of Arabic Alphabet (العربية) languages. Alphabetic script OCR dictionaries such as this contain detailed information about the shapes letters of an alphabet, but do not utilize any other information about a language such as word-frequency and do not understand linguistic context. This has both advantages and disadvantages. This Default variant of Arabic Alphabet uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine. To use this language please install the Nuget Package 'IronOcr.Languages.Arabic' from https://www.nuget.org/packages/IronOcr.Languages.Arabic/ to your Visual Studio project. Alternatively download the \"Arabic.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage ArabicAlphabet Field Value Type Description OcrLanguage ArabicAlphabetBest Arabic Alphabetic Script OCR dictionary. Performs OCR, identifying characters of Arabic Alphabet (العربية) languages. Alphabetic script OCR dictionaries such as this contain detailed information about the shapes letters of an alphabet, but do not utilize any other information about a language such as word-frequency and do not understand linguistic context. This has both advantages and disadvantages. This 'Best' (detailed) variant of Arabic Alphabet uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed. To use this language please install the Nuget Package 'IronOcr.Languages.Arabic' from https://www.nuget.org/packages/IronOcr.Languages.Arabic/ to your Visual Studio project. Alternatively download the \"Arabic.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage ArabicAlphabetBest Field Value Type Description OcrLanguage ArabicAlphabetFast Arabic Alphabetic Script OCR dictionary. Performs OCR, identifying characters of Arabic Alphabet (العربية) languages. Alphabetic script OCR dictionaries such as this contain detailed information about the shapes letters of an alphabet, but do not utilize any other information about a language such as word-frequency and do not understand linguistic context. This has both advantages and disadvantages. This 'Fast' variant of Arabic Alphabet uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy. To use this language please install the Nuget Package 'IronOcr.Languages.Arabic' from https://www.nuget.org/packages/IronOcr.Languages.Arabic/ to your Visual Studio project. Alternatively download the \"Arabic.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage ArabicAlphabetFast Field Value Type Description OcrLanguage ArabicBest Arabic OCR language. Performs OCR, reading documents of the Arabic (العربية) language with an understanding of spelling and linguistic context. This 'Best' (detailed) variant of Arabic uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed. To use this language please install the Nuget Package 'IronOcr.Languages.Arabic' from https://www.nuget.org/packages/IronOcr.Languages.Arabic/ to your Visual Studio project. Alternatively download the \"Arabic.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage ArabicBest Field Value Type Description OcrLanguage ArabicFast Arabic OCR language. Performs OCR, reading documents of the Arabic (العربية) language with an understanding of spelling and linguistic context. This 'Fast' variant of Arabic uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy. To use this language please install the Nuget Package 'IronOcr.Languages.Arabic' from https://www.nuget.org/packages/IronOcr.Languages.Arabic/ to your Visual Studio project. Alternatively download the \"Arabic.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage ArabicFast Field Value Type Description OcrLanguage Armenian Armenian OCR language. Performs OCR, reading documents of the Armenian (Հայերեն) language with an understanding of spelling and linguistic context. This Default variant of Armenian uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine. To use this language please install the Nuget Package 'IronOcr.Languages.Armenian' from https://www.nuget.org/packages/IronOcr.Languages.Armenian/ to your Visual Studio project. Alternatively download the \"Armenian.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage Armenian Field Value Type Description OcrLanguage ArmenianAlphabet Armenian Alphabetic Script OCR dictionary. Performs OCR, identifying characters of Armenian Alphabet (Հայերեն) languages. Alphabetic script OCR dictionaries such as this contain detailed information about the shapes letters of an alphabet, but do not utilize any other information about a language such as word-frequency and do not understand linguistic context. This has both advantages and disadvantages. This Default variant of Armenian Alphabet uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine. To use this language please install the Nuget Package 'IronOcr.Languages.Armenian' from https://www.nuget.org/packages/IronOcr.Languages.Armenian/ to your Visual Studio project. Alternatively download the \"Armenian.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage ArmenianAlphabet Field Value Type Description OcrLanguage ArmenianAlphabetBest Armenian Alphabetic Script OCR dictionary. Performs OCR, identifying characters of Armenian Alphabet (Հայերեն) languages. Alphabetic script OCR dictionaries such as this contain detailed information about the shapes letters of an alphabet, but do not utilize any other information about a language such as word-frequency and do not understand linguistic context. This has both advantages and disadvantages. This 'Best' (detailed) variant of Armenian Alphabet uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed. To use this language please install the Nuget Package 'IronOcr.Languages.Armenian' from https://www.nuget.org/packages/IronOcr.Languages.Armenian/ to your Visual Studio project. Alternatively download the \"Armenian.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage ArmenianAlphabetBest Field Value Type Description OcrLanguage ArmenianAlphabetFast Armenian Alphabetic Script OCR dictionary. Performs OCR, identifying characters of Armenian Alphabet (Հայերեն) languages. Alphabetic script OCR dictionaries such as this contain detailed information about the shapes letters of an alphabet, but do not utilize any other information about a language such as word-frequency and do not understand linguistic context. This has both advantages and disadvantages. This 'Fast' variant of Armenian Alphabet uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy. To use this language please install the Nuget Package 'IronOcr.Languages.Armenian' from https://www.nuget.org/packages/IronOcr.Languages.Armenian/ to your Visual Studio project. Alternatively download the \"Armenian.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage ArmenianAlphabetFast Field Value Type Description OcrLanguage ArmenianBest Armenian OCR language. Performs OCR, reading documents of the Armenian (Հայերեն) language with an understanding of spelling and linguistic context. This 'Best' (detailed) variant of Armenian uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed. To use this language please install the Nuget Package 'IronOcr.Languages.Armenian' from https://www.nuget.org/packages/IronOcr.Languages.Armenian/ to your Visual Studio project. Alternatively download the \"Armenian.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage ArmenianBest Field Value Type Description OcrLanguage ArmenianFast Armenian OCR language. Performs OCR, reading documents of the Armenian (Հայերեն) language with an understanding of spelling and linguistic context. This 'Fast' variant of Armenian uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy. To use this language please install the Nuget Package 'IronOcr.Languages.Armenian' from https://www.nuget.org/packages/IronOcr.Languages.Armenian/ to your Visual Studio project. Alternatively download the \"Armenian.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage ArmenianFast Field Value Type Description OcrLanguage Assamese Assamese OCR language. Performs OCR, reading documents of the Assamese (অসমীয়া) language with an understanding of spelling and linguistic context. This Default variant of Assamese uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine. To use this language please install the Nuget Package 'IronOcr.Languages.Assamese' from https://www.nuget.org/packages/IronOcr.Languages.Assamese/ to your Visual Studio project. Alternatively download the \"Assamese.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage Assamese Field Value Type Description OcrLanguage AssameseBest Assamese OCR language. Performs OCR, reading documents of the Assamese (অসমীয়া) language with an understanding of spelling and linguistic context. This 'Best' (detailed) variant of Assamese uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed. To use this language please install the Nuget Package 'IronOcr.Languages.Assamese' from https://www.nuget.org/packages/IronOcr.Languages.Assamese/ to your Visual Studio project. Alternatively download the \"Assamese.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage AssameseBest Field Value Type Description OcrLanguage AssameseFast Assamese OCR language. Performs OCR, reading documents of the Assamese (অসমীয়া) language with an understanding of spelling and linguistic context. This 'Fast' variant of Assamese uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy. To use this language please install the Nuget Package 'IronOcr.Languages.Assamese' from https://www.nuget.org/packages/IronOcr.Languages.Assamese/ to your Visual Studio project. Alternatively download the \"Assamese.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage AssameseFast Field Value Type Description OcrLanguage Azerbaijani Azerbaijani OCR language. Performs OCR, reading documents of the Azerbaijani (azərbaycan dili) language with an understanding of spelling and linguistic context. This Default variant of Azerbaijani uses both an LTSM (Long Term Short Term neural network) and an OEM (shape recognition evolved from Tesseract 3) OCR strategies which can mesh them together to produce results which are both fast and accurate. To use this language please install the Nuget Package 'IronOcr.Languages.Azerbaijani' from https://www.nuget.org/packages/IronOcr.Languages.Azerbaijani/ to your Visual Studio project. Alternatively download the \"Azerbaijani.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage Azerbaijani Field Value Type Description OcrLanguage AzerbaijaniBest Azerbaijani OCR language. Performs OCR, reading documents of the Azerbaijani (azərbaycan dili) language with an understanding of spelling and linguistic context. This 'Best' (detailed) variant of Azerbaijani uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed. To use this language please install the Nuget Package 'IronOcr.Languages.Azerbaijani' from https://www.nuget.org/packages/IronOcr.Languages.Azerbaijani/ to your Visual Studio project. Alternatively download the \"Azerbaijani.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage AzerbaijaniBest Field Value Type Description OcrLanguage AzerbaijaniCyrillic Azerbaijani Cyrillic OCR language. Performs OCR, reading documents of the Azerbaijani (azərbaycan dili) language ,using the Cyrillic alphabet, with an understanding of spelling and linguistic context. This Default variant of Azerbaijani Cyrillic uses both an LTSM (Long Term Short Term neural network) and an OEM (shape recognition evolved from Tesseract 3) OCR strategies which can mesh them together to produce results which are both fast and accurate. To use this language please install the Nuget Package 'IronOcr.Languages.Azerbaijani' from https://www.nuget.org/packages/IronOcr.Languages.Azerbaijani/ to your Visual Studio project. Alternatively download the \"Azerbaijani.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage AzerbaijaniCyrillic Field Value Type Description OcrLanguage AzerbaijaniCyrillicBest Azerbaijani Cyrillic OCR language. Performs OCR, reading documents of the Azerbaijani (azərbaycan dili) language ,using the Cyrillic alphabet, with an understanding of spelling and linguistic context. This 'Best' (detailed) variant of Azerbaijani Cyrillic uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed. To use this language please install the Nuget Package 'IronOcr.Languages.Azerbaijani' from https://www.nuget.org/packages/IronOcr.Languages.Azerbaijani/ to your Visual Studio project. Alternatively download the \"Azerbaijani.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage AzerbaijaniCyrillicBest Field Value Type Description OcrLanguage AzerbaijaniCyrillicFast Azerbaijani Cyrillic OCR language. Performs OCR, reading documents of the Azerbaijani (azərbaycan dili) language ,using the Cyrillic alphabet, with an understanding of spelling and linguistic context. This 'Fast' variant of Azerbaijani Cyrillic uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy. To use this language please install the Nuget Package 'IronOcr.Languages.Azerbaijani' from https://www.nuget.org/packages/IronOcr.Languages.Azerbaijani/ to your Visual Studio project. Alternatively download the \"Azerbaijani.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage AzerbaijaniCyrillicFast Field Value Type Description OcrLanguage AzerbaijaniFast Azerbaijani OCR language. Performs OCR, reading documents of the Azerbaijani (azərbaycan dili) language with an understanding of spelling and linguistic context. This 'Fast' variant of Azerbaijani uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy. To use this language please install the Nuget Package 'IronOcr.Languages.Azerbaijani' from https://www.nuget.org/packages/IronOcr.Languages.Azerbaijani/ to your Visual Studio project. Alternatively download the \"Azerbaijani.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage AzerbaijaniFast Field Value Type Description OcrLanguage Basque Basque OCR language. Performs OCR, reading documents of the Basque (euskara, euskera) language with an understanding of spelling and linguistic context. This Default variant of Basque uses both an LTSM (Long Term Short Term neural network) and an OEM (shape recognition evolved from Tesseract 3) OCR strategies which can mesh them together to produce results which are both fast and accurate. To use this language please install the Nuget Package 'IronOcr.Languages.Basque' from https://www.nuget.org/packages/IronOcr.Languages.Basque/ to your Visual Studio project. Alternatively download the \"Basque.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage Basque Field Value Type Description OcrLanguage BasqueBest Basque OCR language. Performs OCR, reading documents of the Basque (euskara, euskera) language with an understanding of spelling and linguistic context. This 'Best' (detailed) variant of Basque uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed. To use this language please install the Nuget Package 'IronOcr.Languages.Basque' from https://www.nuget.org/packages/IronOcr.Languages.Basque/ to your Visual Studio project. Alternatively download the \"Basque.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage BasqueBest Field Value Type Description OcrLanguage BasqueFast Basque OCR language. Performs OCR, reading documents of the Basque (euskara, euskera) language with an understanding of spelling and linguistic context. This 'Fast' variant of Basque uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy. To use this language please install the Nuget Package 'IronOcr.Languages.Basque' from https://www.nuget.org/packages/IronOcr.Languages.Basque/ to your Visual Studio project. Alternatively download the \"Basque.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage BasqueFast Field Value Type Description OcrLanguage Belarusian Belarusian OCR language. Performs OCR, reading documents of the Belarusian (беларуская мова) language with an understanding of spelling and linguistic context. This Default variant of Belarusian uses both an LTSM (Long Term Short Term neural network) and an OEM (shape recognition evolved from Tesseract 3) OCR strategies which can mesh them together to produce results which are both fast and accurate. To use this language please install the Nuget Package 'IronOcr.Languages.Belarusian' from https://www.nuget.org/packages/IronOcr.Languages.Belarusian/ to your Visual Studio project. Alternatively download the \"Belarusian.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage Belarusian Field Value Type Description OcrLanguage BelarusianBest Belarusian OCR language. Performs OCR, reading documents of the Belarusian (беларуская мова) language with an understanding of spelling and linguistic context. This 'Best' (detailed) variant of Belarusian uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed. To use this language please install the Nuget Package 'IronOcr.Languages.Belarusian' from https://www.nuget.org/packages/IronOcr.Languages.Belarusian/ to your Visual Studio project. Alternatively download the \"Belarusian.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage BelarusianBest Field Value Type Description OcrLanguage BelarusianFast Belarusian OCR language. Performs OCR, reading documents of the Belarusian (беларуская мова) language with an understanding of spelling and linguistic context. This 'Fast' variant of Belarusian uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy. To use this language please install the Nuget Package 'IronOcr.Languages.Belarusian' from https://www.nuget.org/packages/IronOcr.Languages.Belarusian/ to your Visual Studio project. Alternatively download the \"Belarusian.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage BelarusianFast Field Value Type Description OcrLanguage Bengali Bengali OCR language. Performs OCR, reading documents of the Bengali (Bangla,বাংলা) language with an understanding of spelling and linguistic context. This Default variant of Bengali uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine. To use this language please install the Nuget Package 'IronOcr.Languages.Bengali' from https://www.nuget.org/packages/IronOcr.Languages.Bengali/ to your Visual Studio project. Alternatively download the \"Bengali.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage Bengali Field Value Type Description OcrLanguage BengaliAlphabet Bengali Alphabetic Script OCR dictionary. Performs OCR, identifying characters of Bengali Alphabet (Bangla,বাংলা) languages. Alphabetic script OCR dictionaries such as this contain detailed information about the shapes letters of an alphabet, but do not utilize any other information about a language such as word-frequency and do not understand linguistic context. This has both advantages and disadvantages. This Default variant of Bengali Alphabet uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine. To use this language please install the Nuget Package 'IronOcr.Languages.Bengali' from https://www.nuget.org/packages/IronOcr.Languages.Bengali/ to your Visual Studio project. Alternatively download the \"Bengali.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage BengaliAlphabet Field Value Type Description OcrLanguage BengaliAlphabetBest Bengali Alphabetic Script OCR dictionary. Performs OCR, identifying characters of Bengali Alphabet (Bangla,বাংলা) languages. Alphabetic script OCR dictionaries such as this contain detailed information about the shapes letters of an alphabet, but do not utilize any other information about a language such as word-frequency and do not understand linguistic context. This has both advantages and disadvantages. This 'Best' (detailed) variant of Bengali Alphabet uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed. To use this language please install the Nuget Package 'IronOcr.Languages.Bengali' from https://www.nuget.org/packages/IronOcr.Languages.Bengali/ to your Visual Studio project. Alternatively download the \"Bengali.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage BengaliAlphabetBest Field Value Type Description OcrLanguage BengaliAlphabetFast Bengali Alphabetic Script OCR dictionary. Performs OCR, identifying characters of Bengali Alphabet (Bangla,বাংলা) languages. Alphabetic script OCR dictionaries such as this contain detailed information about the shapes letters of an alphabet, but do not utilize any other information about a language such as word-frequency and do not understand linguistic context. This has both advantages and disadvantages. This 'Fast' variant of Bengali Alphabet uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy. To use this language please install the Nuget Package 'IronOcr.Languages.Bengali' from https://www.nuget.org/packages/IronOcr.Languages.Bengali/ to your Visual Studio project. Alternatively download the \"Bengali.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage BengaliAlphabetFast Field Value Type Description OcrLanguage BengaliBest Bengali OCR language. Performs OCR, reading documents of the Bengali (Bangla,বাংলা) language with an understanding of spelling and linguistic context. This 'Best' (detailed) variant of Bengali uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed. To use this language please install the Nuget Package 'IronOcr.Languages.Bengali' from https://www.nuget.org/packages/IronOcr.Languages.Bengali/ to your Visual Studio project. Alternatively download the \"Bengali.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage BengaliBest Field Value Type Description OcrLanguage BengaliFast Bengali OCR language. Performs OCR, reading documents of the Bengali (Bangla,বাংলা) language with an understanding of spelling and linguistic context. This 'Fast' variant of Bengali uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy. To use this language please install the Nuget Package 'IronOcr.Languages.Bengali' from https://www.nuget.org/packages/IronOcr.Languages.Bengali/ to your Visual Studio project. Alternatively download the \"Bengali.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage BengaliFast Field Value Type Description OcrLanguage Bosnian Bosnian OCR language. Performs OCR, reading documents of the Bosnian (bosanski jezik) language with an understanding of spelling and linguistic context. This Default variant of Bosnian uses both an LTSM (Long Term Short Term neural network) and an OEM (shape recognition evolved from Tesseract 3) OCR strategies which can mesh them together to produce results which are both fast and accurate. To use this language please install the Nuget Package 'IronOcr.Languages.Bosnian' from https://www.nuget.org/packages/IronOcr.Languages.Bosnian/ to your Visual Studio project. Alternatively download the \"Bosnian.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage Bosnian Field Value Type Description OcrLanguage BosnianBest Bosnian OCR language. Performs OCR, reading documents of the Bosnian (bosanski jezik) language with an understanding of spelling and linguistic context. This 'Best' (detailed) variant of Bosnian uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed. To use this language please install the Nuget Package 'IronOcr.Languages.Bosnian' from https://www.nuget.org/packages/IronOcr.Languages.Bosnian/ to your Visual Studio project. Alternatively download the \"Bosnian.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage BosnianBest Field Value Type Description OcrLanguage BosnianFast Bosnian OCR language. Performs OCR, reading documents of the Bosnian (bosanski jezik) language with an understanding of spelling and linguistic context. This 'Fast' variant of Bosnian uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy. To use this language please install the Nuget Package 'IronOcr.Languages.Bosnian' from https://www.nuget.org/packages/IronOcr.Languages.Bosnian/ to your Visual Studio project. Alternatively download the \"Bosnian.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage BosnianFast Field Value Type Description OcrLanguage Breton Breton OCR language. Performs OCR, reading documents of the Breton (brezhoneg) language with an understanding of spelling and linguistic context. This Default variant of Breton uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine. To use this language please install the Nuget Package 'IronOcr.Languages.Breton' from https://www.nuget.org/packages/IronOcr.Languages.Breton/ to your Visual Studio project. Alternatively download the \"Breton.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage Breton Field Value Type Description OcrLanguage BretonBest Breton OCR language. Performs OCR, reading documents of the Breton (brezhoneg) language with an understanding of spelling and linguistic context. This 'Best' (detailed) variant of Breton uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed. To use this language please install the Nuget Package 'IronOcr.Languages.Breton' from https://www.nuget.org/packages/IronOcr.Languages.Breton/ to your Visual Studio project. Alternatively download the \"Breton.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage BretonBest Field Value Type Description OcrLanguage BretonFast Breton OCR language. Performs OCR, reading documents of the Breton (brezhoneg) language with an understanding of spelling and linguistic context. This 'Fast' variant of Breton uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy. To use this language please install the Nuget Package 'IronOcr.Languages.Breton' from https://www.nuget.org/packages/IronOcr.Languages.Breton/ to your Visual Studio project. Alternatively download the \"Breton.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage BretonFast Field Value Type Description OcrLanguage Bulgarian Bulgarian OCR language. Performs OCR, reading documents of the Bulgarian (български език) language with an understanding of spelling and linguistic context. This Default variant of Bulgarian uses both an LTSM (Long Term Short Term neural network) and an OEM (shape recognition evolved from Tesseract 3) OCR strategies which can mesh them together to produce results which are both fast and accurate. To use this language please install the Nuget Package 'IronOcr.Languages.Bulgarian' from https://www.nuget.org/packages/IronOcr.Languages.Bulgarian/ to your Visual Studio project. Alternatively download the \"Bulgarian.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage Bulgarian Field Value Type Description OcrLanguage BulgarianBest Bulgarian OCR language. Performs OCR, reading documents of the Bulgarian (български език) language with an understanding of spelling and linguistic context. This 'Best' (detailed) variant of Bulgarian uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed. To use this language please install the Nuget Package 'IronOcr.Languages.Bulgarian' from https://www.nuget.org/packages/IronOcr.Languages.Bulgarian/ to your Visual Studio project. Alternatively download the \"Bulgarian.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage BulgarianBest Field Value Type Description OcrLanguage BulgarianFast Bulgarian OCR language. Performs OCR, reading documents of the Bulgarian (български език) language with an understanding of spelling and linguistic context. This 'Fast' variant of Bulgarian uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy. To use this language please install the Nuget Package 'IronOcr.Languages.Bulgarian' from https://www.nuget.org/packages/IronOcr.Languages.Bulgarian/ to your Visual Studio project. Alternatively download the \"Bulgarian.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage BulgarianFast Field Value Type Description OcrLanguage CanadianAboriginalAlphabet Canadian Aboriginal Alphabetic Script OCR dictionary. Performs OCR, identifying characters of Canadian Aboriginal Alphabet (Canadian First Nations, Indigenous Canadians, Native Canadian, Inuit) languages. Alphabetic script OCR dictionaries such as this contain detailed information about the shapes letters of an alphabet, but do not utilize any other information about a language such as word-frequency and do not understand linguistic context. This has both advantages and disadvantages. This Default variant of Canadian Aboriginal Alphabet uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine. To use this language please install the Nuget Package 'IronOcr.Languages.CanadianAboriginal' from https://www.nuget.org/packages/IronOcr.Languages.CanadianAboriginal/ to your Visual Studio project. Alternatively download the \"CanadianAboriginal.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage CanadianAboriginalAlphabet Field Value Type Description OcrLanguage CanadianAboriginalAlphabetBest Canadian Aboriginal Alphabetic Script OCR dictionary. Performs OCR, identifying characters of Canadian Aboriginal Alphabet (Canadian First Nations, Indigenous Canadians, Native Canadian, Inuit) languages. Alphabetic script OCR dictionaries such as this contain detailed information about the shapes letters of an alphabet, but do not utilize any other information about a language such as word-frequency and do not understand linguistic context. This has both advantages and disadvantages. This 'Best' (detailed) variant of Canadian Aboriginal Alphabet uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed. To use this language please install the Nuget Package 'IronOcr.Languages.CanadianAboriginal' from https://www.nuget.org/packages/IronOcr.Languages.CanadianAboriginal/ to your Visual Studio project. Alternatively download the \"CanadianAboriginal.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage CanadianAboriginalAlphabetBest Field Value Type Description OcrLanguage CanadianAboriginalAlphabetFast Canadian Aboriginal Alphabetic Script OCR dictionary. Performs OCR, identifying characters of Canadian Aboriginal Alphabet (Canadian First Nations, Indigenous Canadians, Native Canadian, Inuit) languages. Alphabetic script OCR dictionaries such as this contain detailed information about the shapes letters of an alphabet, but do not utilize any other information about a language such as word-frequency and do not understand linguistic context. This has both advantages and disadvantages. This 'Fast' variant of Canadian Aboriginal Alphabet uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy. To use this language please install the Nuget Package 'IronOcr.Languages.CanadianAboriginal' from https://www.nuget.org/packages/IronOcr.Languages.CanadianAboriginal/ to your Visual Studio project. Alternatively download the \"CanadianAboriginal.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage CanadianAboriginalAlphabetFast Field Value Type Description OcrLanguage Catalan Catalan OCR language. Performs OCR, reading documents of the Catalan (català, valencià) language with an understanding of spelling and linguistic context. This Default variant of Catalan uses both an LTSM (Long Term Short Term neural network) and an OEM (shape recognition evolved from Tesseract 3) OCR strategies which can mesh them together to produce results which are both fast and accurate. To use this language please install the Nuget Package 'IronOcr.Languages.Catalan' from https://www.nuget.org/packages/IronOcr.Languages.Catalan/ to your Visual Studio project. Alternatively download the \"Catalan.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage Catalan Field Value Type Description OcrLanguage CatalanBest Catalan OCR language. Performs OCR, reading documents of the Catalan (català, valencià) language with an understanding of spelling and linguistic context. This 'Best' (detailed) variant of Catalan uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed. To use this language please install the Nuget Package 'IronOcr.Languages.Catalan' from https://www.nuget.org/packages/IronOcr.Languages.Catalan/ to your Visual Studio project. Alternatively download the \"Catalan.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage CatalanBest Field Value Type Description OcrLanguage CatalanFast Catalan OCR language. Performs OCR, reading documents of the Catalan (català, valencià) language with an understanding of spelling and linguistic context. This 'Fast' variant of Catalan uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy. To use this language please install the Nuget Package 'IronOcr.Languages.Catalan' from https://www.nuget.org/packages/IronOcr.Languages.Catalan/ to your Visual Studio project. Alternatively download the \"Catalan.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage CatalanFast Field Value Type Description OcrLanguage Cebuano Cebuano OCR language. Performs OCR, reading documents of the Cebuano (Bisaya, Binisaya) language with an understanding of spelling and linguistic context. This Default variant of Cebuano uses both an LTSM (Long Term Short Term neural network) and an OEM (shape recognition evolved from Tesseract 3) OCR strategies which can mesh them together to produce results which are both fast and accurate. To use this language please install the Nuget Package 'IronOcr.Languages.Cebuano' from https://www.nuget.org/packages/IronOcr.Languages.Cebuano/ to your Visual Studio project. Alternatively download the \"Cebuano.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage Cebuano Field Value Type Description OcrLanguage CebuanoBest Cebuano OCR language. Performs OCR, reading documents of the Cebuano (Bisaya, Binisaya) language with an understanding of spelling and linguistic context. This 'Best' (detailed) variant of Cebuano uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed. To use this language please install the Nuget Package 'IronOcr.Languages.Cebuano' from https://www.nuget.org/packages/IronOcr.Languages.Cebuano/ to your Visual Studio project. Alternatively download the \"Cebuano.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage CebuanoBest Field Value Type Description OcrLanguage CebuanoFast Cebuano OCR language. Performs OCR, reading documents of the Cebuano (Bisaya, Binisaya) language with an understanding of spelling and linguistic context. This 'Fast' variant of Cebuano uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy. To use this language please install the Nuget Package 'IronOcr.Languages.Cebuano' from https://www.nuget.org/packages/IronOcr.Languages.Cebuano/ to your Visual Studio project. Alternatively download the \"Cebuano.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage CebuanoFast Field Value Type Description OcrLanguage Cherokee Cherokee OCR language. Performs OCR, reading documents of the Cherokee (ᏣᎳᎩ ᎦᏬᏂᎯᏍᏗ, Tsalagi Gawonihisdi) language with an understanding of spelling and linguistic context. This Default variant of Cherokee uses both an LTSM (Long Term Short Term neural network) and an OEM (shape recognition evolved from Tesseract 3) OCR strategies which can mesh them together to produce results which are both fast and accurate. To use this language please install the Nuget Package 'IronOcr.Languages.Cherokee' from https://www.nuget.org/packages/IronOcr.Languages.Cherokee/ to your Visual Studio project. Alternatively download the \"Cherokee.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage Cherokee Field Value Type Description OcrLanguage CherokeeAlphabet Cherokee Alphabetic Script OCR dictionary. Performs OCR, identifying characters of Cherokee Alphabet (ᏣᎳᎩ ᎦᏬᏂᎯᏍᏗ, Tsalagi Gawonihisdi) languages. Alphabetic script OCR dictionaries such as this contain detailed information about the shapes letters of an alphabet, but do not utilize any other information about a language such as word-frequency and do not understand linguistic context. This has both advantages and disadvantages. This Default variant of Cherokee Alphabet uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine. To use this language please install the Nuget Package 'IronOcr.Languages.Cherokee' from https://www.nuget.org/packages/IronOcr.Languages.Cherokee/ to your Visual Studio project. Alternatively download the \"Cherokee.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage CherokeeAlphabet Field Value Type Description OcrLanguage CherokeeAlphabetBest Cherokee Alphabetic Script OCR dictionary. Performs OCR, identifying characters of Cherokee Alphabet (ᏣᎳᎩ ᎦᏬᏂᎯᏍᏗ, Tsalagi Gawonihisdi) languages. Alphabetic script OCR dictionaries such as this contain detailed information about the shapes letters of an alphabet, but do not utilize any other information about a language such as word-frequency and do not understand linguistic context. This has both advantages and disadvantages. This 'Best' (detailed) variant of Cherokee Alphabet uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed. To use this language please install the Nuget Package 'IronOcr.Languages.Cherokee' from https://www.nuget.org/packages/IronOcr.Languages.Cherokee/ to your Visual Studio project. Alternatively download the \"Cherokee.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage CherokeeAlphabetBest Field Value Type Description OcrLanguage CherokeeAlphabetFast Cherokee Alphabetic Script OCR dictionary. Performs OCR, identifying characters of Cherokee Alphabet (ᏣᎳᎩ ᎦᏬᏂᎯᏍᏗ, Tsalagi Gawonihisdi) languages. Alphabetic script OCR dictionaries such as this contain detailed information about the shapes letters of an alphabet, but do not utilize any other information about a language such as word-frequency and do not understand linguistic context. This has both advantages and disadvantages. This 'Fast' variant of Cherokee Alphabet uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy. To use this language please install the Nuget Package 'IronOcr.Languages.Cherokee' from https://www.nuget.org/packages/IronOcr.Languages.Cherokee/ to your Visual Studio project. Alternatively download the \"Cherokee.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage CherokeeAlphabetFast Field Value Type Description OcrLanguage CherokeeBest Cherokee OCR language. Performs OCR, reading documents of the Cherokee (ᏣᎳᎩ ᎦᏬᏂᎯᏍᏗ, Tsalagi Gawonihisdi) language with an understanding of spelling and linguistic context. This 'Best' (detailed) variant of Cherokee uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed. To use this language please install the Nuget Package 'IronOcr.Languages.Cherokee' from https://www.nuget.org/packages/IronOcr.Languages.Cherokee/ to your Visual Studio project. Alternatively download the \"Cherokee.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage CherokeeBest Field Value Type Description OcrLanguage CherokeeFast Cherokee OCR language. Performs OCR, reading documents of the Cherokee (ᏣᎳᎩ ᎦᏬᏂᎯᏍᏗ, Tsalagi Gawonihisdi) language with an understanding of spelling and linguistic context. This 'Fast' variant of Cherokee uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy. To use this language please install the Nuget Package 'IronOcr.Languages.Cherokee' from https://www.nuget.org/packages/IronOcr.Languages.Cherokee/ to your Visual Studio project. Alternatively download the \"Cherokee.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage CherokeeFast Field Value Type Description OcrLanguage ChineseSimplified Chinese Simplified OCR language. Performs OCR, reading documents of the Chinese Simplified [中文 (Zhōngwén), 汉语, 漢語] language with an understanding of spelling and linguistic context. This Default variant of Chinese Simplified uses both an LTSM (Long Term Short Term neural network) and an OEM (shape recognition evolved from Tesseract 3) OCR strategies which can mesh them together to produce results which are both fast and accurate. To use this language please install the Nuget Package 'IronOcr.Languages.Chinese' from https://www.nuget.org/packages/IronOcr.Languages.Chinese/ to your Visual Studio project. Alternatively download the \"Chinese.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage ChineseSimplified Field Value Type Description OcrLanguage ChineseSimplifiedBest Chinese Simplified OCR language. Performs OCR, reading documents of the Chinese Simplified [中文 (Zhōngwén), 汉语, 漢語] language with an understanding of spelling and linguistic context. This 'Best' (detailed) variant of Chinese Simplified uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed. To use this language please install the Nuget Package 'IronOcr.Languages.Chinese' from https://www.nuget.org/packages/IronOcr.Languages.Chinese/ to your Visual Studio project. Alternatively download the \"Chinese.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage ChineseSimplifiedBest Field Value Type Description OcrLanguage ChineseSimplifiedFast Chinese Simplified OCR language. Performs OCR, reading documents of the Chinese Simplified [中文 (Zhōngwén), 汉语, 漢語] language with an understanding of spelling and linguistic context. This 'Fast' variant of Chinese Simplified uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy. To use this language please install the Nuget Package 'IronOcr.Languages.Chinese' from https://www.nuget.org/packages/IronOcr.Languages.Chinese/ to your Visual Studio project. Alternatively download the \"Chinese.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage ChineseSimplifiedFast Field Value Type Description OcrLanguage ChineseSimplifiedVertical Chinese Simplified Vertical OCR language. Performs OCR, reading documents of the Chinese Simplified Vertical [中文 (Zhōngwén), 汉语, 漢語] language with an understanding of spelling and linguistic context. This Default variant of Chinese Simplified Vertical uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine. To use this language please install the Nuget Package 'IronOcr.Languages.Chinese' from https://www.nuget.org/packages/IronOcr.Languages.Chinese/ to your Visual Studio project. Alternatively download the \"Chinese.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage ChineseSimplifiedVertical Field Value Type Description OcrLanguage ChineseSimplifiedVerticalBest Chinese Simplified Vertical OCR language. Performs OCR, reading documents of the Chinese Simplified Vertical [中文 (Zhōngwén), 汉语, 漢語] language with an understanding of spelling and linguistic context. This 'Best' (detailed) variant of Chinese Simplified Vertical uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed. To use this language please install the Nuget Package 'IronOcr.Languages.Chinese' from https://www.nuget.org/packages/IronOcr.Languages.Chinese/ to your Visual Studio project. Alternatively download the \"Chinese.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage ChineseSimplifiedVerticalBest Field Value Type Description OcrLanguage ChineseSimplifiedVerticalFast Chinese Simplified Vertical OCR language. Performs OCR, reading documents of the Chinese Simplified Vertical [中文 (Zhōngwén), 汉语, 漢語] language with an understanding of spelling and linguistic context. This 'Fast' variant of Chinese Simplified Vertical uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy. To use this language please install the Nuget Package 'IronOcr.Languages.Chinese' from https://www.nuget.org/packages/IronOcr.Languages.Chinese/ to your Visual Studio project. Alternatively download the \"Chinese.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage ChineseSimplifiedVerticalFast Field Value Type Description OcrLanguage ChineseTraditional Chinese Traditional OCR language. Performs OCR, reading documents of the Chinese Traditional [中文 (Zhōngwén), 汉语, 漢語] language with an understanding of spelling and linguistic context. This Default variant of Chinese Traditional uses both an LTSM (Long Term Short Term neural network) and an OEM (shape recognition evolved from Tesseract 3) OCR strategies which can mesh them together to produce results which are both fast and accurate. To use this language please install the Nuget Package 'IronOcr.Languages.Chinese' from https://www.nuget.org/packages/IronOcr.Languages.Chinese/ to your Visual Studio project. Alternatively download the \"Chinese.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage ChineseTraditional Field Value Type Description OcrLanguage ChineseTraditionalBest Chinese Traditional OCR language. Performs OCR, reading documents of the Chinese Traditional [中文 (Zhōngwén), 汉语, 漢語] language with an understanding of spelling and linguistic context. This 'Best' (detailed) variant of Chinese Traditional uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed. To use this language please install the Nuget Package 'IronOcr.Languages.Chinese' from https://www.nuget.org/packages/IronOcr.Languages.Chinese/ to your Visual Studio project. Alternatively download the \"Chinese.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage ChineseTraditionalBest Field Value Type Description OcrLanguage ChineseTraditionalFast Chinese Traditional OCR language. Performs OCR, reading documents of the Chinese Traditional [中文 (Zhōngwén), 汉语, 漢語] language with an understanding of spelling and linguistic context. This 'Fast' variant of Chinese Traditional uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy. To use this language please install the Nuget Package 'IronOcr.Languages.Chinese' from https://www.nuget.org/packages/IronOcr.Languages.Chinese/ to your Visual Studio project. Alternatively download the \"Chinese.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage ChineseTraditionalFast Field Value Type Description OcrLanguage ChineseTraditionalVertical Chinese Traditional Vertical OCR language. Performs OCR, reading documents of the Chinese Traditional Vertical [中文 (Zhōngwén), 汉语, 漢語] language with an understanding of spelling and linguistic context. This Default variant of Chinese Traditional Vertical uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine. To use this language please install the Nuget Package 'IronOcr.Languages.Chinese' from https://www.nuget.org/packages/IronOcr.Languages.Chinese/ to your Visual Studio project. Alternatively download the \"Chinese.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage ChineseTraditionalVertical Field Value Type Description OcrLanguage ChineseTraditionalVerticalBest Chinese Traditional Vertical OCR language. Performs OCR, reading documents of the Chinese Traditional Vertical [中文 (Zhōngwén), 汉语, 漢語] language with an understanding of spelling and linguistic context. This 'Best' (detailed) variant of Chinese Traditional Vertical uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed. To use this language please install the Nuget Package 'IronOcr.Languages.Chinese' from https://www.nuget.org/packages/IronOcr.Languages.Chinese/ to your Visual Studio project. Alternatively download the \"Chinese.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage ChineseTraditionalVerticalBest Field Value Type Description OcrLanguage ChineseTraditionalVerticalFast Chinese Traditional Vertical OCR language. Performs OCR, reading documents of the Chinese Traditional Vertical [中文 (Zhōngwén), 汉语, 漢語] language with an understanding of spelling and linguistic context. This 'Fast' variant of Chinese Traditional Vertical uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy. To use this language please install the Nuget Package 'IronOcr.Languages.Chinese' from https://www.nuget.org/packages/IronOcr.Languages.Chinese/ to your Visual Studio project. Alternatively download the \"Chinese.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage ChineseTraditionalVerticalFast Field Value Type Description OcrLanguage Corsican Corsican OCR language. Performs OCR, reading documents of the Corsican (corsu, lingua corsa) language with an understanding of spelling and linguistic context. This Default variant of Corsican uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine. To use this language please install the Nuget Package 'IronOcr.Languages.Corsican' from https://www.nuget.org/packages/IronOcr.Languages.Corsican/ to your Visual Studio project. Alternatively download the \"Corsican.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage Corsican Field Value Type Description OcrLanguage CorsicanBest Corsican OCR language. Performs OCR, reading documents of the Corsican (corsu, lingua corsa) language with an understanding of spelling and linguistic context. This 'Best' (detailed) variant of Corsican uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed. To use this language please install the Nuget Package 'IronOcr.Languages.Corsican' from https://www.nuget.org/packages/IronOcr.Languages.Corsican/ to your Visual Studio project. Alternatively download the \"Corsican.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage CorsicanBest Field Value Type Description OcrLanguage CorsicanFast Corsican OCR language. Performs OCR, reading documents of the Corsican (corsu, lingua corsa) language with an understanding of spelling and linguistic context. This 'Fast' variant of Corsican uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy. To use this language please install the Nuget Package 'IronOcr.Languages.Corsican' from https://www.nuget.org/packages/IronOcr.Languages.Corsican/ to your Visual Studio project. Alternatively download the \"Corsican.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage CorsicanFast Field Value Type Description OcrLanguage Croatian Croatian OCR language. Performs OCR, reading documents of the Croatian (hrvatski jezik) language with an understanding of spelling and linguistic context. This Default variant of Croatian uses both an LTSM (Long Term Short Term neural network) and an OEM (shape recognition evolved from Tesseract 3) OCR strategies which can mesh them together to produce results which are both fast and accurate. To use this language please install the Nuget Package 'IronOcr.Languages.Croatian' from https://www.nuget.org/packages/IronOcr.Languages.Croatian/ to your Visual Studio project. Alternatively download the \"Croatian.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage Croatian Field Value Type Description OcrLanguage CroatianBest Croatian OCR language. Performs OCR, reading documents of the Croatian (hrvatski jezik) language with an understanding of spelling and linguistic context. This 'Best' (detailed) variant of Croatian uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed. To use this language please install the Nuget Package 'IronOcr.Languages.Croatian' from https://www.nuget.org/packages/IronOcr.Languages.Croatian/ to your Visual Studio project. Alternatively download the \"Croatian.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage CroatianBest Field Value Type Description OcrLanguage CroatianFast Croatian OCR language. Performs OCR, reading documents of the Croatian (hrvatski jezik) language with an understanding of spelling and linguistic context. This 'Fast' variant of Croatian uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy. To use this language please install the Nuget Package 'IronOcr.Languages.Croatian' from https://www.nuget.org/packages/IronOcr.Languages.Croatian/ to your Visual Studio project. Alternatively download the \"Croatian.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage CroatianFast Field Value Type Description OcrLanguage Custom A custom .traineddata language file is in use. Use the UseCustomTesseractLanguageFile(String) method to achieve this state. Declaration public const OcrLanguage Custom Field Value Type Description OcrLanguage CyrillicAlphabet Cyrillic Alphabetic Script OCR dictionary. Performs OCR, identifying characters of Cyrillic Alphabet (Cyrillic scripts) languages. Alphabetic script OCR dictionaries such as this contain detailed information about the shapes letters of an alphabet, but do not utilize any other information about a language such as word-frequency and do not understand linguistic context. This has both advantages and disadvantages. This Default variant of Cyrillic Alphabet uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine. To use this language please install the Nuget Package 'IronOcr.Languages.Cyrillic' from https://www.nuget.org/packages/IronOcr.Languages.Cyrillic/ to your Visual Studio project. Alternatively download the \"Cyrillic.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage CyrillicAlphabet Field Value Type Description OcrLanguage CyrillicAlphabetBest Cyrillic Alphabetic Script OCR dictionary. Performs OCR, identifying characters of Cyrillic Alphabet (Cyrillic scripts) languages. Alphabetic script OCR dictionaries such as this contain detailed information about the shapes letters of an alphabet, but do not utilize any other information about a language such as word-frequency and do not understand linguistic context. This has both advantages and disadvantages. This 'Best' (detailed) variant of Cyrillic Alphabet uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed. To use this language please install the Nuget Package 'IronOcr.Languages.Cyrillic' from https://www.nuget.org/packages/IronOcr.Languages.Cyrillic/ to your Visual Studio project. Alternatively download the \"Cyrillic.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage CyrillicAlphabetBest Field Value Type Description OcrLanguage CyrillicAlphabetFast Cyrillic Alphabetic Script OCR dictionary. Performs OCR, identifying characters of Cyrillic Alphabet (Cyrillic scripts) languages. Alphabetic script OCR dictionaries such as this contain detailed information about the shapes letters of an alphabet, but do not utilize any other information about a language such as word-frequency and do not understand linguistic context. This has both advantages and disadvantages. This 'Fast' variant of Cyrillic Alphabet uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy. To use this language please install the Nuget Package 'IronOcr.Languages.Cyrillic' from https://www.nuget.org/packages/IronOcr.Languages.Cyrillic/ to your Visual Studio project. Alternatively download the \"Cyrillic.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage CyrillicAlphabetFast Field Value Type Description OcrLanguage Czech Czech OCR language. Performs OCR, reading documents of the Czech (čeština, český jazyk) language with an understanding of spelling and linguistic context. This Default variant of Czech uses both an LTSM (Long Term Short Term neural network) and an OEM (shape recognition evolved from Tesseract 3) OCR strategies which can mesh them together to produce results which are both fast and accurate. To use this language please install the Nuget Package 'IronOcr.Languages.Czech' from https://www.nuget.org/packages/IronOcr.Languages.Czech/ to your Visual Studio project. Alternatively download the \"Czech.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage Czech Field Value Type Description OcrLanguage CzechBest Czech OCR language. Performs OCR, reading documents of the Czech (čeština, český jazyk) language with an understanding of spelling and linguistic context. This 'Best' (detailed) variant of Czech uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed. To use this language please install the Nuget Package 'IronOcr.Languages.Czech' from https://www.nuget.org/packages/IronOcr.Languages.Czech/ to your Visual Studio project. Alternatively download the \"Czech.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage CzechBest Field Value Type Description OcrLanguage CzechFast Czech OCR language. Performs OCR, reading documents of the Czech (čeština, český jazyk) language with an understanding of spelling and linguistic context. This 'Fast' variant of Czech uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy. To use this language please install the Nuget Package 'IronOcr.Languages.Czech' from https://www.nuget.org/packages/IronOcr.Languages.Czech/ to your Visual Studio project. Alternatively download the \"Czech.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage CzechFast Field Value Type Description OcrLanguage Danish Danish OCR language. Performs OCR, reading documents of the Danish (dansk) language with an understanding of spelling and linguistic context. This Default variant of Danish uses both an LTSM (Long Term Short Term neural network) and an OEM (shape recognition evolved from Tesseract 3) OCR strategies which can mesh them together to produce results which are both fast and accurate. To use this language please install the Nuget Package 'IronOcr.Languages.Danish' from https://www.nuget.org/packages/IronOcr.Languages.Danish/ to your Visual Studio project. Alternatively download the \"Danish.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage Danish Field Value Type Description OcrLanguage DanishBest Danish OCR language. Performs OCR, reading documents of the Danish (dansk) language with an understanding of spelling and linguistic context. This 'Best' (detailed) variant of Danish uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed. To use this language please install the Nuget Package 'IronOcr.Languages.Danish' from https://www.nuget.org/packages/IronOcr.Languages.Danish/ to your Visual Studio project. Alternatively download the \"Danish.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage DanishBest Field Value Type Description OcrLanguage DanishFast Danish OCR language. Performs OCR, reading documents of the Danish (dansk) language with an understanding of spelling and linguistic context. This 'Fast' variant of Danish uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy. To use this language please install the Nuget Package 'IronOcr.Languages.Danish' from https://www.nuget.org/packages/IronOcr.Languages.Danish/ to your Visual Studio project. Alternatively download the \"Danish.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage DanishFast Field Value Type Description OcrLanguage DanishFraktur Danish Fraktur OCR language. Performs OCR, reading documents of the Danish Fraktur (dansk) language with an understanding of spelling and linguistic context. This Danish Fraktur OCR language pack uses only an OEM (shape recognition evolved from Tesseract 3) Tesseract OCR engine. To use this language please install the Nuget Package 'IronOcr.Languages.Danish' from https://www.nuget.org/packages/IronOcr.Languages.Danish/ to your Visual Studio project. Alternatively download the \"Danish.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage DanishFraktur Field Value Type Description OcrLanguage DevanagariAlphabet Devanagari Alphabetic Script OCR dictionary. Performs OCR, identifying characters of Devanagari Alphabet (Nagair,देवनागरी) languages. Alphabetic script OCR dictionaries such as this contain detailed information about the shapes letters of an alphabet, but do not utilize any other information about a language such as word-frequency and do not understand linguistic context. This has both advantages and disadvantages. This Default variant of Devanagari Alphabet uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine. To use this language please install the Nuget Package 'IronOcr.Languages.Devanagari' from https://www.nuget.org/packages/IronOcr.Languages.Devanagari/ to your Visual Studio project. Alternatively download the \"Devanagari.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage DevanagariAlphabet Field Value Type Description OcrLanguage DevanagariAlphabetBest Devanagari Alphabetic Script OCR dictionary. Performs OCR, identifying characters of Devanagari Alphabet (Nagair,देवनागरी) languages. Alphabetic script OCR dictionaries such as this contain detailed information about the shapes letters of an alphabet, but do not utilize any other information about a language such as word-frequency and do not understand linguistic context. This has both advantages and disadvantages. This 'Best' (detailed) variant of Devanagari Alphabet uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed. To use this language please install the Nuget Package 'IronOcr.Languages.Devanagari' from https://www.nuget.org/packages/IronOcr.Languages.Devanagari/ to your Visual Studio project. Alternatively download the \"Devanagari.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage DevanagariAlphabetBest Field Value Type Description OcrLanguage DevanagariAlphabetFast Devanagari Alphabetic Script OCR dictionary. Performs OCR, identifying characters of Devanagari Alphabet (Nagair,देवनागरी) languages. Alphabetic script OCR dictionaries such as this contain detailed information about the shapes letters of an alphabet, but do not utilize any other information about a language such as word-frequency and do not understand linguistic context. This has both advantages and disadvantages. This 'Fast' variant of Devanagari Alphabet uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy. To use this language please install the Nuget Package 'IronOcr.Languages.Devanagari' from https://www.nuget.org/packages/IronOcr.Languages.Devanagari/ to your Visual Studio project. Alternatively download the \"Devanagari.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage DevanagariAlphabetFast Field Value Type Description OcrLanguage Divehi Divehi OCR language. Performs OCR, reading documents of the Divehi (ދިވެހި) language with an understanding of spelling and linguistic context. This Default variant of Divehi uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine. To use this language please install the Nuget Package 'IronOcr.Languages.Divehi' from https://www.nuget.org/packages/IronOcr.Languages.Divehi/ to your Visual Studio project. Alternatively download the \"Divehi.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage Divehi Field Value Type Description OcrLanguage DivehiBest Divehi OCR language. Performs OCR, reading documents of the Divehi (ދިވެހި) language with an understanding of spelling and linguistic context. This 'Best' (detailed) variant of Divehi uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed. To use this language please install the Nuget Package 'IronOcr.Languages.Divehi' from https://www.nuget.org/packages/IronOcr.Languages.Divehi/ to your Visual Studio project. Alternatively download the \"Divehi.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage DivehiBest Field Value Type Description OcrLanguage DivehiFast Divehi OCR language. Performs OCR, reading documents of the Divehi (ދިވެހި) language with an understanding of spelling and linguistic context. This 'Fast' variant of Divehi uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy. To use this language please install the Nuget Package 'IronOcr.Languages.Divehi' from https://www.nuget.org/packages/IronOcr.Languages.Divehi/ to your Visual Studio project. Alternatively download the \"Divehi.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage DivehiFast Field Value Type Description OcrLanguage Dutch Dutch OCR language. Performs OCR, reading documents of the Dutch (Nederlands, Vlaams) language with an understanding of spelling and linguistic context. This Default variant of Dutch uses both an LTSM (Long Term Short Term neural network) and an OEM (shape recognition evolved from Tesseract 3) OCR strategies which can mesh them together to produce results which are both fast and accurate. To use this language please install the Nuget Package 'IronOcr.Languages.Dutch' from https://www.nuget.org/packages/IronOcr.Languages.Dutch/ to your Visual Studio project. Alternatively download the \"Dutch.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage Dutch Field Value Type Description OcrLanguage DutchBest Dutch OCR language. Performs OCR, reading documents of the Dutch (Nederlands, Vlaams) language with an understanding of spelling and linguistic context. This 'Best' (detailed) variant of Dutch uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed. To use this language please install the Nuget Package 'IronOcr.Languages.Dutch' from https://www.nuget.org/packages/IronOcr.Languages.Dutch/ to your Visual Studio project. Alternatively download the \"Dutch.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage DutchBest Field Value Type Description OcrLanguage DutchFast Dutch OCR language. Performs OCR, reading documents of the Dutch (Nederlands, Vlaams) language with an understanding of spelling and linguistic context. This 'Fast' variant of Dutch uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy. To use this language please install the Nuget Package 'IronOcr.Languages.Dutch' from https://www.nuget.org/packages/IronOcr.Languages.Dutch/ to your Visual Studio project. Alternatively download the \"Dutch.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage DutchFast Field Value Type Description OcrLanguage Dzongkha Dzongkha OCR language. Performs OCR, reading documents of the Dzongkha (རྫོང་ཁ) language with an understanding of spelling and linguistic context. This Default variant of Dzongkha uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine. To use this language please install the Nuget Package 'IronOcr.Languages.Dzongkha' from https://www.nuget.org/packages/IronOcr.Languages.Dzongkha/ to your Visual Studio project. Alternatively download the \"Dzongkha.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage Dzongkha Field Value Type Description OcrLanguage DzongkhaBest Dzongkha OCR language. Performs OCR, reading documents of the Dzongkha (རྫོང་ཁ) language with an understanding of spelling and linguistic context. This 'Best' (detailed) variant of Dzongkha uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed. To use this language please install the Nuget Package 'IronOcr.Languages.Dzongkha' from https://www.nuget.org/packages/IronOcr.Languages.Dzongkha/ to your Visual Studio project. Alternatively download the \"Dzongkha.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage DzongkhaBest Field Value Type Description OcrLanguage DzongkhaFast Dzongkha OCR language. Performs OCR, reading documents of the Dzongkha (རྫོང་ཁ) language with an understanding of spelling and linguistic context. This 'Fast' variant of Dzongkha uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy. To use this language please install the Nuget Package 'IronOcr.Languages.Dzongkha' from https://www.nuget.org/packages/IronOcr.Languages.Dzongkha/ to your Visual Studio project. Alternatively download the \"Dzongkha.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage DzongkhaFast Field Value Type Description OcrLanguage English English OCR language. Performs OCR, reading documents of the English language with an understanding of spelling and linguistic context. Installed Automatically with IronOCR as the default Language This Default variant of English uses both an LTSM (Long Term Short Term neural network) and an OEM (shape recognition evolved from Tesseract 3) OCR strategies which can mesh them together to produce results which are both fast and accurate. To use this language please install the Nuget Package 'IronOcr.Languages.English' from https://www.nuget.org/packages/IronOcr.Languages.English/ to your Visual Studio project. Alternatively download the \"English.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage English Field Value Type Description OcrLanguage EnglishBest English OCR language. Performs OCR, reading documents of the English language with an understanding of spelling and linguistic context. Installed Automatically with IronOCR as the default Language This 'Best' (detailed) variant of English uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed. To use this language please install the Nuget Package 'IronOcr.Languages.English' from https://www.nuget.org/packages/IronOcr.Languages.English/ to your Visual Studio project. Alternatively download the \"English.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage EnglishBest Field Value Type Description OcrLanguage EnglishFast English OCR language. Performs OCR, reading documents of the English language with an understanding of spelling and linguistic context. Installed Automatically with IronOCR as the default Language This 'Fast' variant of English uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy. To use this language please install the Nuget Package 'IronOcr.Languages.English' from https://www.nuget.org/packages/IronOcr.Languages.English/ to your Visual Studio project. Alternatively download the \"English.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage EnglishFast Field Value Type Description OcrLanguage Esperanto Esperanto OCR language. Performs OCR, reading documents of the Esperanto language with an understanding of spelling and linguistic context. This Default variant of Esperanto uses both an LTSM (Long Term Short Term neural network) and an OEM (shape recognition evolved from Tesseract 3) OCR strategies which can mesh them together to produce results which are both fast and accurate. To use this language please install the Nuget Package 'IronOcr.Languages.Esperanto' from https://www.nuget.org/packages/IronOcr.Languages.Esperanto/ to your Visual Studio project. Alternatively download the \"Esperanto.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage Esperanto Field Value Type Description OcrLanguage EsperantoBest Esperanto OCR language. Performs OCR, reading documents of the Esperanto language with an understanding of spelling and linguistic context. This 'Best' (detailed) variant of Esperanto uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed. To use this language please install the Nuget Package 'IronOcr.Languages.Esperanto' from https://www.nuget.org/packages/IronOcr.Languages.Esperanto/ to your Visual Studio project. Alternatively download the \"Esperanto.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage EsperantoBest Field Value Type Description OcrLanguage EsperantoFast Esperanto OCR language. Performs OCR, reading documents of the Esperanto language with an understanding of spelling and linguistic context. This 'Fast' variant of Esperanto uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy. To use this language please install the Nuget Package 'IronOcr.Languages.Esperanto' from https://www.nuget.org/packages/IronOcr.Languages.Esperanto/ to your Visual Studio project. Alternatively download the \"Esperanto.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage EsperantoFast Field Value Type Description OcrLanguage Estonian Estonian OCR language. Performs OCR, reading documents of the Estonian (eesti, eesti keel) language with an understanding of spelling and linguistic context. This Default variant of Estonian uses both an LTSM (Long Term Short Term neural network) and an OEM (shape recognition evolved from Tesseract 3) OCR strategies which can mesh them together to produce results which are both fast and accurate. To use this language please install the Nuget Package 'IronOcr.Languages.Estonian' from https://www.nuget.org/packages/IronOcr.Languages.Estonian/ to your Visual Studio project. Alternatively download the \"Estonian.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage Estonian Field Value Type Description OcrLanguage EstonianBest Estonian OCR language. Performs OCR, reading documents of the Estonian (eesti, eesti keel) language with an understanding of spelling and linguistic context. This 'Best' (detailed) variant of Estonian uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed. To use this language please install the Nuget Package 'IronOcr.Languages.Estonian' from https://www.nuget.org/packages/IronOcr.Languages.Estonian/ to your Visual Studio project. Alternatively download the \"Estonian.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage EstonianBest Field Value Type Description OcrLanguage EstonianFast Estonian OCR language. Performs OCR, reading documents of the Estonian (eesti, eesti keel) language with an understanding of spelling and linguistic context. This 'Fast' variant of Estonian uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy. To use this language please install the Nuget Package 'IronOcr.Languages.Estonian' from https://www.nuget.org/packages/IronOcr.Languages.Estonian/ to your Visual Studio project. Alternatively download the \"Estonian.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage EstonianFast Field Value Type Description OcrLanguage EthiopicAlphabet Ethiopic Alphabetic Script OCR dictionary. Performs OCR, identifying characters of Ethiopic Alphabet (Ge'ez,ግዕዝ, Gəʿəz) languages. Alphabetic script OCR dictionaries such as this contain detailed information about the shapes letters of an alphabet, but do not utilize any other information about a language such as word-frequency and do not understand linguistic context. This has both advantages and disadvantages. This Default variant of Ethiopic Alphabet uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine. To use this language please install the Nuget Package 'IronOcr.Languages.Ethiopic' from https://www.nuget.org/packages/IronOcr.Languages.Ethiopic/ to your Visual Studio project. Alternatively download the \"Ethiopic.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage EthiopicAlphabet Field Value Type Description OcrLanguage EthiopicAlphabetBest Ethiopic Alphabetic Script OCR dictionary. Performs OCR, identifying characters of Ethiopic Alphabet (Ge'ez,ግዕዝ, Gəʿəz) languages. Alphabetic script OCR dictionaries such as this contain detailed information about the shapes letters of an alphabet, but do not utilize any other information about a language such as word-frequency and do not understand linguistic context. This has both advantages and disadvantages. This 'Best' (detailed) variant of Ethiopic Alphabet uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed. To use this language please install the Nuget Package 'IronOcr.Languages.Ethiopic' from https://www.nuget.org/packages/IronOcr.Languages.Ethiopic/ to your Visual Studio project. Alternatively download the \"Ethiopic.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage EthiopicAlphabetBest Field Value Type Description OcrLanguage EthiopicAlphabetFast Ethiopic Alphabetic Script OCR dictionary. Performs OCR, identifying characters of Ethiopic Alphabet (Ge'ez,ግዕዝ, Gəʿəz) languages. Alphabetic script OCR dictionaries such as this contain detailed information about the shapes letters of an alphabet, but do not utilize any other information about a language such as word-frequency and do not understand linguistic context. This has both advantages and disadvantages. This 'Fast' variant of Ethiopic Alphabet uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy. To use this language please install the Nuget Package 'IronOcr.Languages.Ethiopic' from https://www.nuget.org/packages/IronOcr.Languages.Ethiopic/ to your Visual Studio project. Alternatively download the \"Ethiopic.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage EthiopicAlphabetFast Field Value Type Description OcrLanguage Faroese Faroese OCR language. Performs OCR, reading documents of the Faroese (føroyskt) language with an understanding of spelling and linguistic context. This Default variant of Faroese uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine. To use this language please install the Nuget Package 'IronOcr.Languages.Faroese' from https://www.nuget.org/packages/IronOcr.Languages.Faroese/ to your Visual Studio project. Alternatively download the \"Faroese.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage Faroese Field Value Type Description OcrLanguage FaroeseBest Faroese OCR language. Performs OCR, reading documents of the Faroese (føroyskt) language with an understanding of spelling and linguistic context. This 'Best' (detailed) variant of Faroese uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed. To use this language please install the Nuget Package 'IronOcr.Languages.Faroese' from https://www.nuget.org/packages/IronOcr.Languages.Faroese/ to your Visual Studio project. Alternatively download the \"Faroese.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage FaroeseBest Field Value Type Description OcrLanguage FaroeseFast Faroese OCR language. Performs OCR, reading documents of the Faroese (føroyskt) language with an understanding of spelling and linguistic context. This 'Fast' variant of Faroese uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy. To use this language please install the Nuget Package 'IronOcr.Languages.Faroese' from https://www.nuget.org/packages/IronOcr.Languages.Faroese/ to your Visual Studio project. Alternatively download the \"Faroese.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage FaroeseFast Field Value Type Description OcrLanguage Filipino Filipino OCR language. Performs OCR, reading documents of the Filipino (National Language of the Philippines, Standardized Tagalog) language with an understanding of spelling and linguistic context. This Default variant of Filipino uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine. To use this language please install the Nuget Package 'IronOcr.Languages.Filipino' from https://www.nuget.org/packages/IronOcr.Languages.Filipino/ to your Visual Studio project. Alternatively download the \"Filipino.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage Filipino Field Value Type Description OcrLanguage FilipinoBest Filipino OCR language. Performs OCR, reading documents of the Filipino (National Language of the Philippines, Standardized Tagalog) language with an understanding of spelling and linguistic context. This 'Best' (detailed) variant of Filipino uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed. To use this language please install the Nuget Package 'IronOcr.Languages.Filipino' from https://www.nuget.org/packages/IronOcr.Languages.Filipino/ to your Visual Studio project. Alternatively download the \"Filipino.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage FilipinoBest Field Value Type Description OcrLanguage FilipinoFast Filipino OCR language. Performs OCR, reading documents of the Filipino (National Language of the Philippines, Standardized Tagalog) language with an understanding of spelling and linguistic context. This 'Fast' variant of Filipino uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy. To use this language please install the Nuget Package 'IronOcr.Languages.Filipino' from https://www.nuget.org/packages/IronOcr.Languages.Filipino/ to your Visual Studio project. Alternatively download the \"Filipino.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage FilipinoFast Field Value Type Description OcrLanguage Financial Financial OCR language. Performs OCR, reading documents of the Financial (Financial, Numerical and Technical Documents) language with an understanding of spelling and linguistic context. This Financial OCR language pack uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine. To use this language please install the Nuget Package 'IronOcr.Languages.Financial' from https://www.nuget.org/packages/IronOcr.Languages.Financial/ to your Visual Studio project. Alternatively download the \"Financial.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage Financial Field Value Type Description OcrLanguage Finnish Finnish OCR language. Performs OCR, reading documents of the Finnish (suomi, suomen kieli) language with an understanding of spelling and linguistic context. This Default variant of Finnish uses both an LTSM (Long Term Short Term neural network) and an OEM (shape recognition evolved from Tesseract 3) OCR strategies which can mesh them together to produce results which are both fast and accurate. To use this language please install the Nuget Package 'IronOcr.Languages.Finnish' from https://www.nuget.org/packages/IronOcr.Languages.Finnish/ to your Visual Studio project. Alternatively download the \"Finnish.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage Finnish Field Value Type Description OcrLanguage FinnishBest Finnish OCR language. Performs OCR, reading documents of the Finnish (suomi, suomen kieli) language with an understanding of spelling and linguistic context. This 'Best' (detailed) variant of Finnish uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed. To use this language please install the Nuget Package 'IronOcr.Languages.Finnish' from https://www.nuget.org/packages/IronOcr.Languages.Finnish/ to your Visual Studio project. Alternatively download the \"Finnish.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage FinnishBest Field Value Type Description OcrLanguage FinnishFast Finnish OCR language. Performs OCR, reading documents of the Finnish (suomi, suomen kieli) language with an understanding of spelling and linguistic context. This 'Fast' variant of Finnish uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy. To use this language please install the Nuget Package 'IronOcr.Languages.Finnish' from https://www.nuget.org/packages/IronOcr.Languages.Finnish/ to your Visual Studio project. Alternatively download the \"Finnish.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage FinnishFast Field Value Type Description OcrLanguage FrakturAlphabet Fraktur Alphabetic Script OCR dictionary. Performs OCR, identifying characters of Fraktur Alphabet (Generic Fraktur, Calligraphic hand of the Latin alphabet) languages. Alphabetic script OCR dictionaries such as this contain detailed information about the shapes letters of an alphabet, but do not utilize any other information about a language such as word-frequency and do not understand linguistic context. This has both advantages and disadvantages. This Default variant of Fraktur Alphabet uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine. To use this language please install the Nuget Package 'IronOcr.Languages.Fraktur' from https://www.nuget.org/packages/IronOcr.Languages.Fraktur/ to your Visual Studio project. Alternatively download the \"Fraktur.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage FrakturAlphabet Field Value Type Description OcrLanguage FrakturAlphabetBest Fraktur Alphabetic Script OCR dictionary. Performs OCR, identifying characters of Fraktur Alphabet (Generic Fraktur, Calligraphic hand of the Latin alphabet) languages. Alphabetic script OCR dictionaries such as this contain detailed information about the shapes letters of an alphabet, but do not utilize any other information about a language such as word-frequency and do not understand linguistic context. This has both advantages and disadvantages. This 'Best' (detailed) variant of Fraktur Alphabet uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed. To use this language please install the Nuget Package 'IronOcr.Languages.Fraktur' from https://www.nuget.org/packages/IronOcr.Languages.Fraktur/ to your Visual Studio project. Alternatively download the \"Fraktur.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage FrakturAlphabetBest Field Value Type Description OcrLanguage FrakturAlphabetFast Fraktur Alphabetic Script OCR dictionary. Performs OCR, identifying characters of Fraktur Alphabet (Generic Fraktur, Calligraphic hand of the Latin alphabet) languages. Alphabetic script OCR dictionaries such as this contain detailed information about the shapes letters of an alphabet, but do not utilize any other information about a language such as word-frequency and do not understand linguistic context. This has both advantages and disadvantages. This 'Fast' variant of Fraktur Alphabet uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy. To use this language please install the Nuget Package 'IronOcr.Languages.Fraktur' from https://www.nuget.org/packages/IronOcr.Languages.Fraktur/ to your Visual Studio project. Alternatively download the \"Fraktur.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage FrakturAlphabetFast Field Value Type Description OcrLanguage Frankish Frankish OCR language. Performs OCR, reading documents of the Frankish (Frenkisk, Old Franconian) language with an understanding of spelling and linguistic context. This Default variant of Frankish uses both an LTSM (Long Term Short Term neural network) and an OEM (shape recognition evolved from Tesseract 3) OCR strategies which can mesh them together to produce results which are both fast and accurate. To use this language please install the Nuget Package 'IronOcr.Languages.Frankish' from https://www.nuget.org/packages/IronOcr.Languages.Frankish/ to your Visual Studio project. Alternatively download the \"Frankish.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage Frankish Field Value Type Description OcrLanguage FrankishBest Frankish OCR language. Performs OCR, reading documents of the Frankish (Frenkisk, Old Franconian) language with an understanding of spelling and linguistic context. This 'Best' (detailed) variant of Frankish uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed. To use this language please install the Nuget Package 'IronOcr.Languages.Frankish' from https://www.nuget.org/packages/IronOcr.Languages.Frankish/ to your Visual Studio project. Alternatively download the \"Frankish.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage FrankishBest Field Value Type Description OcrLanguage FrankishFast Frankish OCR language. Performs OCR, reading documents of the Frankish (Frenkisk, Old Franconian) language with an understanding of spelling and linguistic context. This 'Fast' variant of Frankish uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy. To use this language please install the Nuget Package 'IronOcr.Languages.Frankish' from https://www.nuget.org/packages/IronOcr.Languages.Frankish/ to your Visual Studio project. Alternatively download the \"Frankish.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage FrankishFast Field Value Type Description OcrLanguage French French OCR language. Performs OCR, reading documents of the French (français, langue française) language with an understanding of spelling and linguistic context. This Default variant of French uses both an LTSM (Long Term Short Term neural network) and an OEM (shape recognition evolved from Tesseract 3) OCR strategies which can mesh them together to produce results which are both fast and accurate. To use this language please install the Nuget Package 'IronOcr.Languages.French' from https://www.nuget.org/packages/IronOcr.Languages.French/ to your Visual Studio project. Alternatively download the \"French.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage French Field Value Type Description OcrLanguage FrenchBest French OCR language. Performs OCR, reading documents of the French (français, langue française) language with an understanding of spelling and linguistic context. This 'Best' (detailed) variant of French uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed. To use this language please install the Nuget Package 'IronOcr.Languages.French' from https://www.nuget.org/packages/IronOcr.Languages.French/ to your Visual Studio project. Alternatively download the \"French.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage FrenchBest Field Value Type Description OcrLanguage FrenchFast French OCR language. Performs OCR, reading documents of the French (français, langue française) language with an understanding of spelling and linguistic context. This 'Fast' variant of French uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy. To use this language please install the Nuget Package 'IronOcr.Languages.French' from https://www.nuget.org/packages/IronOcr.Languages.French/ to your Visual Studio project. Alternatively download the \"French.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage FrenchFast Field Value Type Description OcrLanguage Galician Galician OCR language. Performs OCR, reading documents of the Galician (galego) language with an understanding of spelling and linguistic context. This Default variant of Galician uses both an LTSM (Long Term Short Term neural network) and an OEM (shape recognition evolved from Tesseract 3) OCR strategies which can mesh them together to produce results which are both fast and accurate. To use this language please install the Nuget Package 'IronOcr.Languages.Galician' from https://www.nuget.org/packages/IronOcr.Languages.Galician/ to your Visual Studio project. Alternatively download the \"Galician.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage Galician Field Value Type Description OcrLanguage GalicianBest Galician OCR language. Performs OCR, reading documents of the Galician (galego) language with an understanding of spelling and linguistic context. This 'Best' (detailed) variant of Galician uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed. To use this language please install the Nuget Package 'IronOcr.Languages.Galician' from https://www.nuget.org/packages/IronOcr.Languages.Galician/ to your Visual Studio project. Alternatively download the \"Galician.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage GalicianBest Field Value Type Description OcrLanguage GalicianFast Galician OCR language. Performs OCR, reading documents of the Galician (galego) language with an understanding of spelling and linguistic context. This 'Fast' variant of Galician uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy. To use this language please install the Nuget Package 'IronOcr.Languages.Galician' from https://www.nuget.org/packages/IronOcr.Languages.Galician/ to your Visual Studio project. Alternatively download the \"Galician.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage GalicianFast Field Value Type Description OcrLanguage Georgian Georgian OCR language. Performs OCR, reading documents of the Georgian (ქართული) language with an understanding of spelling and linguistic context. This Default variant of Georgian uses both an LTSM (Long Term Short Term neural network) and an OEM (shape recognition evolved from Tesseract 3) OCR strategies which can mesh them together to produce results which are both fast and accurate. To use this language please install the Nuget Package 'IronOcr.Languages.Georgian' from https://www.nuget.org/packages/IronOcr.Languages.Georgian/ to your Visual Studio project. Alternatively download the \"Georgian.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage Georgian Field Value Type Description OcrLanguage GeorgianAlphabet Georgian Alphabetic Script OCR dictionary. Performs OCR, identifying characters of Georgian Alphabet (ქართული) languages. Alphabetic script OCR dictionaries such as this contain detailed information about the shapes letters of an alphabet, but do not utilize any other information about a language such as word-frequency and do not understand linguistic context. This has both advantages and disadvantages. This Default variant of Georgian Alphabet uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine. To use this language please install the Nuget Package 'IronOcr.Languages.Georgian' from https://www.nuget.org/packages/IronOcr.Languages.Georgian/ to your Visual Studio project. Alternatively download the \"Georgian.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage GeorgianAlphabet Field Value Type Description OcrLanguage GeorgianAlphabetBest Georgian Alphabetic Script OCR dictionary. Performs OCR, identifying characters of Georgian Alphabet (ქართული) languages. Alphabetic script OCR dictionaries such as this contain detailed information about the shapes letters of an alphabet, but do not utilize any other information about a language such as word-frequency and do not understand linguistic context. This has both advantages and disadvantages. This 'Best' (detailed) variant of Georgian Alphabet uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed. To use this language please install the Nuget Package 'IronOcr.Languages.Georgian' from https://www.nuget.org/packages/IronOcr.Languages.Georgian/ to your Visual Studio project. Alternatively download the \"Georgian.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage GeorgianAlphabetBest Field Value Type Description OcrLanguage GeorgianAlphabetFast Georgian Alphabetic Script OCR dictionary. Performs OCR, identifying characters of Georgian Alphabet (ქართული) languages. Alphabetic script OCR dictionaries such as this contain detailed information about the shapes letters of an alphabet, but do not utilize any other information about a language such as word-frequency and do not understand linguistic context. This has both advantages and disadvantages. This 'Fast' variant of Georgian Alphabet uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy. To use this language please install the Nuget Package 'IronOcr.Languages.Georgian' from https://www.nuget.org/packages/IronOcr.Languages.Georgian/ to your Visual Studio project. Alternatively download the \"Georgian.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage GeorgianAlphabetFast Field Value Type Description OcrLanguage GeorgianBest Georgian OCR language. Performs OCR, reading documents of the Georgian (ქართული) language with an understanding of spelling and linguistic context. This 'Best' (detailed) variant of Georgian uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed. To use this language please install the Nuget Package 'IronOcr.Languages.Georgian' from https://www.nuget.org/packages/IronOcr.Languages.Georgian/ to your Visual Studio project. Alternatively download the \"Georgian.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage GeorgianBest Field Value Type Description OcrLanguage GeorgianFast Georgian OCR language. Performs OCR, reading documents of the Georgian (ქართული) language with an understanding of spelling and linguistic context. This 'Fast' variant of Georgian uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy. To use this language please install the Nuget Package 'IronOcr.Languages.Georgian' from https://www.nuget.org/packages/IronOcr.Languages.Georgian/ to your Visual Studio project. Alternatively download the \"Georgian.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage GeorgianFast Field Value Type Description OcrLanguage GeorgianOld Georgian Old OCR language. Performs OCR, reading documents of the Georgian Old (ქართული) language with an understanding of spelling and linguistic context. This Default variant of Georgian Old uses both an LTSM (Long Term Short Term neural network) and an OEM (shape recognition evolved from Tesseract 3) OCR strategies which can mesh them together to produce results which are both fast and accurate. To use this language please install the Nuget Package 'IronOcr.Languages.Georgian' from https://www.nuget.org/packages/IronOcr.Languages.Georgian/ to your Visual Studio project. Alternatively download the \"Georgian.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage GeorgianOld Field Value Type Description OcrLanguage GeorgianOldBest Georgian Old OCR language. Performs OCR, reading documents of the Georgian Old (ქართული) language with an understanding of spelling and linguistic context. This 'Best' (detailed) variant of Georgian Old uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed. To use this language please install the Nuget Package 'IronOcr.Languages.Georgian' from https://www.nuget.org/packages/IronOcr.Languages.Georgian/ to your Visual Studio project. Alternatively download the \"Georgian.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage GeorgianOldBest Field Value Type Description OcrLanguage GeorgianOldFast Georgian Old OCR language. Performs OCR, reading documents of the Georgian Old (ქართული) language with an understanding of spelling and linguistic context. This 'Fast' variant of Georgian Old uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy. To use this language please install the Nuget Package 'IronOcr.Languages.Georgian' from https://www.nuget.org/packages/IronOcr.Languages.Georgian/ to your Visual Studio project. Alternatively download the \"Georgian.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage GeorgianOldFast Field Value Type Description OcrLanguage German German OCR language. Performs OCR, reading documents of the German (Deutsch) language with an understanding of spelling and linguistic context. This Default variant of German uses both an LTSM (Long Term Short Term neural network) and an OEM (shape recognition evolved from Tesseract 3) OCR strategies which can mesh them together to produce results which are both fast and accurate. To use this language please install the Nuget Package 'IronOcr.Languages.German' from https://www.nuget.org/packages/IronOcr.Languages.German/ to your Visual Studio project. Alternatively download the \"German.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage German Field Value Type Description OcrLanguage GermanBest German OCR language. Performs OCR, reading documents of the German (Deutsch) language with an understanding of spelling and linguistic context. This 'Best' (detailed) variant of German uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed. To use this language please install the Nuget Package 'IronOcr.Languages.German' from https://www.nuget.org/packages/IronOcr.Languages.German/ to your Visual Studio project. Alternatively download the \"German.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage GermanBest Field Value Type Description OcrLanguage GermanFast German OCR language. Performs OCR, reading documents of the German (Deutsch) language with an understanding of spelling and linguistic context. This 'Fast' variant of German uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy. To use this language please install the Nuget Package 'IronOcr.Languages.German' from https://www.nuget.org/packages/IronOcr.Languages.German/ to your Visual Studio project. Alternatively download the \"German.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage GermanFast Field Value Type Description OcrLanguage GermanFraktur German Fraktur OCR language. Performs OCR, reading documents of the German Fraktur (Deutsch) language with an understanding of spelling and linguistic context. This German Fraktur OCR language pack uses only an OEM (shape recognition evolved from Tesseract 3) Tesseract OCR engine. To use this language please install the Nuget Package 'IronOcr.Languages.German' from https://www.nuget.org/packages/IronOcr.Languages.German/ to your Visual Studio project. Alternatively download the \"German.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage GermanFraktur Field Value Type Description OcrLanguage Greek Greek OCR language. Performs OCR, reading documents of the Greek (ελληνικά) language with an understanding of spelling and linguistic context. This Default variant of Greek uses both an LTSM (Long Term Short Term neural network) and an OEM (shape recognition evolved from Tesseract 3) OCR strategies which can mesh them together to produce results which are both fast and accurate. To use this language please install the Nuget Package 'IronOcr.Languages.Greek' from https://www.nuget.org/packages/IronOcr.Languages.Greek/ to your Visual Studio project. Alternatively download the \"Greek.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage Greek Field Value Type Description OcrLanguage GreekAlphabet Greek Alphabetic Script OCR dictionary. Performs OCR, identifying characters of Greek Alphabet (ελληνικά) languages. Alphabetic script OCR dictionaries such as this contain detailed information about the shapes letters of an alphabet, but do not utilize any other information about a language such as word-frequency and do not understand linguistic context. This has both advantages and disadvantages. This Default variant of Greek Alphabet uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine. To use this language please install the Nuget Package 'IronOcr.Languages.Greek' from https://www.nuget.org/packages/IronOcr.Languages.Greek/ to your Visual Studio project. Alternatively download the \"Greek.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage GreekAlphabet Field Value Type Description OcrLanguage GreekAlphabetBest Greek Alphabetic Script OCR dictionary. Performs OCR, identifying characters of Greek Alphabet (ελληνικά) languages. Alphabetic script OCR dictionaries such as this contain detailed information about the shapes letters of an alphabet, but do not utilize any other information about a language such as word-frequency and do not understand linguistic context. This has both advantages and disadvantages. This 'Best' (detailed) variant of Greek Alphabet uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed. To use this language please install the Nuget Package 'IronOcr.Languages.Greek' from https://www.nuget.org/packages/IronOcr.Languages.Greek/ to your Visual Studio project. Alternatively download the \"Greek.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage GreekAlphabetBest Field Value Type Description OcrLanguage GreekAlphabetFast Greek Alphabetic Script OCR dictionary. Performs OCR, identifying characters of Greek Alphabet (ελληνικά) languages. Alphabetic script OCR dictionaries such as this contain detailed information about the shapes letters of an alphabet, but do not utilize any other information about a language such as word-frequency and do not understand linguistic context. This has both advantages and disadvantages. This 'Fast' variant of Greek Alphabet uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy. To use this language please install the Nuget Package 'IronOcr.Languages.Greek' from https://www.nuget.org/packages/IronOcr.Languages.Greek/ to your Visual Studio project. Alternatively download the \"Greek.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage GreekAlphabetFast Field Value Type Description OcrLanguage GreekBest Greek OCR language. Performs OCR, reading documents of the Greek (ελληνικά) language with an understanding of spelling and linguistic context. This 'Best' (detailed) variant of Greek uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed. To use this language please install the Nuget Package 'IronOcr.Languages.Greek' from https://www.nuget.org/packages/IronOcr.Languages.Greek/ to your Visual Studio project. Alternatively download the \"Greek.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage GreekBest Field Value Type Description OcrLanguage GreekFast Greek OCR language. Performs OCR, reading documents of the Greek (ελληνικά) language with an understanding of spelling and linguistic context. This 'Fast' variant of Greek uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy. To use this language please install the Nuget Package 'IronOcr.Languages.Greek' from https://www.nuget.org/packages/IronOcr.Languages.Greek/ to your Visual Studio project. Alternatively download the \"Greek.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage GreekFast Field Value Type Description OcrLanguage Gujarati Gujarati OCR language. Performs OCR, reading documents of the Gujarati (ગુજરાતી) language with an understanding of spelling and linguistic context. This Default variant of Gujarati uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine. To use this language please install the Nuget Package 'IronOcr.Languages.Gujarati' from https://www.nuget.org/packages/IronOcr.Languages.Gujarati/ to your Visual Studio project. Alternatively download the \"Gujarati.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage Gujarati Field Value Type Description OcrLanguage GujaratiAlphabet Gujarati Alphabetic Script OCR dictionary. Performs OCR, identifying characters of Gujarati Alphabet (ગુજરાતી) languages. Alphabetic script OCR dictionaries such as this contain detailed information about the shapes letters of an alphabet, but do not utilize any other information about a language such as word-frequency and do not understand linguistic context. This has both advantages and disadvantages. This Default variant of Gujarati Alphabet uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine. To use this language please install the Nuget Package 'IronOcr.Languages.Gujarati' from https://www.nuget.org/packages/IronOcr.Languages.Gujarati/ to your Visual Studio project. Alternatively download the \"Gujarati.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage GujaratiAlphabet Field Value Type Description OcrLanguage GujaratiAlphabetBest Gujarati Alphabetic Script OCR dictionary. Performs OCR, identifying characters of Gujarati Alphabet (ગુજરાતી) languages. Alphabetic script OCR dictionaries such as this contain detailed information about the shapes letters of an alphabet, but do not utilize any other information about a language such as word-frequency and do not understand linguistic context. This has both advantages and disadvantages. This 'Best' (detailed) variant of Gujarati Alphabet uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed. To use this language please install the Nuget Package 'IronOcr.Languages.Gujarati' from https://www.nuget.org/packages/IronOcr.Languages.Gujarati/ to your Visual Studio project. Alternatively download the \"Gujarati.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage GujaratiAlphabetBest Field Value Type Description OcrLanguage GujaratiAlphabetFast Gujarati Alphabetic Script OCR dictionary. Performs OCR, identifying characters of Gujarati Alphabet (ગુજરાતી) languages. Alphabetic script OCR dictionaries such as this contain detailed information about the shapes letters of an alphabet, but do not utilize any other information about a language such as word-frequency and do not understand linguistic context. This has both advantages and disadvantages. This 'Fast' variant of Gujarati Alphabet uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy. To use this language please install the Nuget Package 'IronOcr.Languages.Gujarati' from https://www.nuget.org/packages/IronOcr.Languages.Gujarati/ to your Visual Studio project. Alternatively download the \"Gujarati.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage GujaratiAlphabetFast Field Value Type Description OcrLanguage GujaratiBest Gujarati OCR language. Performs OCR, reading documents of the Gujarati (ગુજરાતી) language with an understanding of spelling and linguistic context. This 'Best' (detailed) variant of Gujarati uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed. To use this language please install the Nuget Package 'IronOcr.Languages.Gujarati' from https://www.nuget.org/packages/IronOcr.Languages.Gujarati/ to your Visual Studio project. Alternatively download the \"Gujarati.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage GujaratiBest Field Value Type Description OcrLanguage GujaratiFast Gujarati OCR language. Performs OCR, reading documents of the Gujarati (ગુજરાતી) language with an understanding of spelling and linguistic context. This 'Fast' variant of Gujarati uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy. To use this language please install the Nuget Package 'IronOcr.Languages.Gujarati' from https://www.nuget.org/packages/IronOcr.Languages.Gujarati/ to your Visual Studio project. Alternatively download the \"Gujarati.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage GujaratiFast Field Value Type Description OcrLanguage GurmukhiAlphabet Gurmukhi Alphabetic Script OCR dictionary. Performs OCR, identifying characters of Gurmukhi Alphabet (Gurmukhī, ਗੁਰਮੁਖੀ, Shahmukhi, گُرمُکھی‎, Sihk Script) languages. Alphabetic script OCR dictionaries such as this contain detailed information about the shapes letters of an alphabet, but do not utilize any other information about a language such as word-frequency and do not understand linguistic context. This has both advantages and disadvantages. This Default variant of Gurmukhi Alphabet uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine. To use this language please install the Nuget Package 'IronOcr.Languages.Gurmukhi' from https://www.nuget.org/packages/IronOcr.Languages.Gurmukhi/ to your Visual Studio project. Alternatively download the \"Gurmukhi.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage GurmukhiAlphabet Field Value Type Description OcrLanguage GurmukhiAlphabetBest Gurmukhi Alphabetic Script OCR dictionary. Performs OCR, identifying characters of Gurmukhi Alphabet (Gurmukhī, ਗੁਰਮੁਖੀ, Shahmukhi, گُرمُکھی‎, Sihk Script) languages. Alphabetic script OCR dictionaries such as this contain detailed information about the shapes letters of an alphabet, but do not utilize any other information about a language such as word-frequency and do not understand linguistic context. This has both advantages and disadvantages. This 'Best' (detailed) variant of Gurmukhi Alphabet uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed. To use this language please install the Nuget Package 'IronOcr.Languages.Gurmukhi' from https://www.nuget.org/packages/IronOcr.Languages.Gurmukhi/ to your Visual Studio project. Alternatively download the \"Gurmukhi.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage GurmukhiAlphabetBest Field Value Type Description OcrLanguage GurmukhiAlphabetFast Gurmukhi Alphabetic Script OCR dictionary. Performs OCR, identifying characters of Gurmukhi Alphabet (Gurmukhī, ਗੁਰਮੁਖੀ, Shahmukhi, گُرمُکھی‎, Sihk Script) languages. Alphabetic script OCR dictionaries such as this contain detailed information about the shapes letters of an alphabet, but do not utilize any other information about a language such as word-frequency and do not understand linguistic context. This has both advantages and disadvantages. This 'Fast' variant of Gurmukhi Alphabet uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy. To use this language please install the Nuget Package 'IronOcr.Languages.Gurmukhi' from https://www.nuget.org/packages/IronOcr.Languages.Gurmukhi/ to your Visual Studio project. Alternatively download the \"Gurmukhi.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage GurmukhiAlphabetFast Field Value Type Description OcrLanguage Haitian Haitian OCR language. Performs OCR, reading documents of the Haitian (Kreyòl ayisyen) language with an understanding of spelling and linguistic context. This Default variant of Haitian uses both an LTSM (Long Term Short Term neural network) and an OEM (shape recognition evolved from Tesseract 3) OCR strategies which can mesh them together to produce results which are both fast and accurate. To use this language please install the Nuget Package 'IronOcr.Languages.Haitian' from https://www.nuget.org/packages/IronOcr.Languages.Haitian/ to your Visual Studio project. Alternatively download the \"Haitian.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage Haitian Field Value Type Description OcrLanguage HaitianBest Haitian OCR language. Performs OCR, reading documents of the Haitian (Kreyòl ayisyen) language with an understanding of spelling and linguistic context. This 'Best' (detailed) variant of Haitian uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed. To use this language please install the Nuget Package 'IronOcr.Languages.Haitian' from https://www.nuget.org/packages/IronOcr.Languages.Haitian/ to your Visual Studio project. Alternatively download the \"Haitian.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage HaitianBest Field Value Type Description OcrLanguage HaitianFast Haitian OCR language. Performs OCR, reading documents of the Haitian (Kreyòl ayisyen) language with an understanding of spelling and linguistic context. This 'Fast' variant of Haitian uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy. To use this language please install the Nuget Package 'IronOcr.Languages.Haitian' from https://www.nuget.org/packages/IronOcr.Languages.Haitian/ to your Visual Studio project. Alternatively download the \"Haitian.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage HaitianFast Field Value Type Description OcrLanguage HangulAlphabet Hangul Alphabetic Script OCR dictionary. Performs OCR, identifying characters of Hangul Alphabet (Korean Alphabet,한글,Hangeul,조선글,hosŏn'gŭl) languages. Alphabetic script OCR dictionaries such as this contain detailed information about the shapes letters of an alphabet, but do not utilize any other information about a language such as word-frequency and do not understand linguistic context. This has both advantages and disadvantages. This Default variant of Hangul Alphabet uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine. To use this language please install the Nuget Package 'IronOcr.Languages.Hangul' from https://www.nuget.org/packages/IronOcr.Languages.Hangul/ to your Visual Studio project. Alternatively download the \"Hangul.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage HangulAlphabet Field Value Type Description OcrLanguage HangulAlphabetBest Hangul Alphabetic Script OCR dictionary. Performs OCR, identifying characters of Hangul Alphabet (Korean Alphabet,한글,Hangeul,조선글,hosŏn'gŭl) languages. Alphabetic script OCR dictionaries such as this contain detailed information about the shapes letters of an alphabet, but do not utilize any other information about a language such as word-frequency and do not understand linguistic context. This has both advantages and disadvantages. This 'Best' (detailed) variant of Hangul Alphabet uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed. To use this language please install the Nuget Package 'IronOcr.Languages.Hangul' from https://www.nuget.org/packages/IronOcr.Languages.Hangul/ to your Visual Studio project. Alternatively download the \"Hangul.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage HangulAlphabetBest Field Value Type Description OcrLanguage HangulAlphabetFast Hangul Alphabetic Script OCR dictionary. Performs OCR, identifying characters of Hangul Alphabet (Korean Alphabet,한글,Hangeul,조선글,hosŏn'gŭl) languages. Alphabetic script OCR dictionaries such as this contain detailed information about the shapes letters of an alphabet, but do not utilize any other information about a language such as word-frequency and do not understand linguistic context. This has both advantages and disadvantages. This 'Fast' variant of Hangul Alphabet uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy. To use this language please install the Nuget Package 'IronOcr.Languages.Hangul' from https://www.nuget.org/packages/IronOcr.Languages.Hangul/ to your Visual Studio project. Alternatively download the \"Hangul.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage HangulAlphabetFast Field Value Type Description OcrLanguage HangulVerticalAlphabet Hangul Vertical Alphabetic Script OCR dictionary. Performs OCR, identifying characters of Hangul Vertical Alphabet (Korean Alphabet,한글,Hangeul,조선글,hosŏn'gŭl) languages. Alphabetic script OCR dictionaries such as this contain detailed information about the shapes letters of an alphabet, but do not utilize any other information about a language such as word-frequency and do not understand linguistic context. This has both advantages and disadvantages. This Default variant of Hangul Vertical Alphabet uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine. To use this language please install the Nuget Package 'IronOcr.Languages.Hangul' from https://www.nuget.org/packages/IronOcr.Languages.Hangul/ to your Visual Studio project. Alternatively download the \"Hangul.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage HangulVerticalAlphabet Field Value Type Description OcrLanguage HangulVerticalAlphabetBest Hangul Vertical Alphabetic Script OCR dictionary. Performs OCR, identifying characters of Hangul Vertical Alphabet (Korean Alphabet,한글,Hangeul,조선글,hosŏn'gŭl) languages. Alphabetic script OCR dictionaries such as this contain detailed information about the shapes letters of an alphabet, but do not utilize any other information about a language such as word-frequency and do not understand linguistic context. This has both advantages and disadvantages. This 'Best' (detailed) variant of Hangul Vertical Alphabet uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed. To use this language please install the Nuget Package 'IronOcr.Languages.Hangul' from https://www.nuget.org/packages/IronOcr.Languages.Hangul/ to your Visual Studio project. Alternatively download the \"Hangul.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage HangulVerticalAlphabetBest Field Value Type Description OcrLanguage HangulVerticalAlphabetFast Hangul Vertical Alphabetic Script OCR dictionary. Performs OCR, identifying characters of Hangul Vertical Alphabet (Korean Alphabet,한글,Hangeul,조선글,hosŏn'gŭl) languages. Alphabetic script OCR dictionaries such as this contain detailed information about the shapes letters of an alphabet, but do not utilize any other information about a language such as word-frequency and do not understand linguistic context. This has both advantages and disadvantages. This 'Fast' variant of Hangul Vertical Alphabet uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy. To use this language please install the Nuget Package 'IronOcr.Languages.Hangul' from https://www.nuget.org/packages/IronOcr.Languages.Hangul/ to your Visual Studio project. Alternatively download the \"Hangul.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage HangulVerticalAlphabetFast Field Value Type Description OcrLanguage HanSimplifiedAlphabet Han Simplified Alphabetic Script OCR dictionary. Performs OCR, identifying characters of Han Simplified Alphabet (Samhan ,한어, 韓語) languages. Alphabetic script OCR dictionaries such as this contain detailed information about the shapes letters of an alphabet, but do not utilize any other information about a language such as word-frequency and do not understand linguistic context. This has both advantages and disadvantages. This Default variant of Han Simplified Alphabet uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine. To use this language please install the Nuget Package 'IronOcr.Languages.Han' from https://www.nuget.org/packages/IronOcr.Languages.Han/ to your Visual Studio project. Alternatively download the \"Han.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage HanSimplifiedAlphabet Field Value Type Description OcrLanguage HanSimplifiedAlphabetBest Han Simplified Alphabetic Script OCR dictionary. Performs OCR, identifying characters of Han Simplified Alphabet (Samhan ,한어, 韓語) languages. Alphabetic script OCR dictionaries such as this contain detailed information about the shapes letters of an alphabet, but do not utilize any other information about a language such as word-frequency and do not understand linguistic context. This has both advantages and disadvantages. This 'Best' (detailed) variant of Han Simplified Alphabet uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed. To use this language please install the Nuget Package 'IronOcr.Languages.Han' from https://www.nuget.org/packages/IronOcr.Languages.Han/ to your Visual Studio project. Alternatively download the \"Han.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage HanSimplifiedAlphabetBest Field Value Type Description OcrLanguage HanSimplifiedAlphabetFast Han Simplified Alphabetic Script OCR dictionary. Performs OCR, identifying characters of Han Simplified Alphabet (Samhan ,한어, 韓語) languages. Alphabetic script OCR dictionaries such as this contain detailed information about the shapes letters of an alphabet, but do not utilize any other information about a language such as word-frequency and do not understand linguistic context. This has both advantages and disadvantages. This 'Fast' variant of Han Simplified Alphabet uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy. To use this language please install the Nuget Package 'IronOcr.Languages.Han' from https://www.nuget.org/packages/IronOcr.Languages.Han/ to your Visual Studio project. Alternatively download the \"Han.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage HanSimplifiedAlphabetFast Field Value Type Description OcrLanguage HanSimplifiedVerticalAlphabet Han Simplified Vertical Alphabetic Script OCR dictionary. Performs OCR, identifying characters of Han Simplified Vertical Alphabet (Samhan ,한어, 韓語) languages. Alphabetic script OCR dictionaries such as this contain detailed information about the shapes letters of an alphabet, but do not utilize any other information about a language such as word-frequency and do not understand linguistic context. This has both advantages and disadvantages. This Default variant of Han Simplified Vertical Alphabet uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine. To use this language please install the Nuget Package 'IronOcr.Languages.Han' from https://www.nuget.org/packages/IronOcr.Languages.Han/ to your Visual Studio project. Alternatively download the \"Han.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage HanSimplifiedVerticalAlphabet Field Value Type Description OcrLanguage HanSimplifiedVerticalAlphabetBest Han Simplified Vertical Alphabetic Script OCR dictionary. Performs OCR, identifying characters of Han Simplified Vertical Alphabet (Samhan ,한어, 韓語) languages. Alphabetic script OCR dictionaries such as this contain detailed information about the shapes letters of an alphabet, but do not utilize any other information about a language such as word-frequency and do not understand linguistic context. This has both advantages and disadvantages. This 'Best' (detailed) variant of Han Simplified Vertical Alphabet uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed. To use this language please install the Nuget Package 'IronOcr.Languages.Han' from https://www.nuget.org/packages/IronOcr.Languages.Han/ to your Visual Studio project. Alternatively download the \"Han.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage HanSimplifiedVerticalAlphabetBest Field Value Type Description OcrLanguage HanSimplifiedVerticalAlphabetFast Han Simplified Vertical Alphabetic Script OCR dictionary. Performs OCR, identifying characters of Han Simplified Vertical Alphabet (Samhan ,한어, 韓語) languages. Alphabetic script OCR dictionaries such as this contain detailed information about the shapes letters of an alphabet, but do not utilize any other information about a language such as word-frequency and do not understand linguistic context. This has both advantages and disadvantages. This 'Fast' variant of Han Simplified Vertical Alphabet uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy. To use this language please install the Nuget Package 'IronOcr.Languages.Han' from https://www.nuget.org/packages/IronOcr.Languages.Han/ to your Visual Studio project. Alternatively download the \"Han.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage HanSimplifiedVerticalAlphabetFast Field Value Type Description OcrLanguage HanTraditionalAlphabet Han Traditional Alphabetic Script OCR dictionary. Performs OCR, identifying characters of Han Traditional Alphabet (Samhan ,한어, 韓語) languages. Alphabetic script OCR dictionaries such as this contain detailed information about the shapes letters of an alphabet, but do not utilize any other information about a language such as word-frequency and do not understand linguistic context. This has both advantages and disadvantages. This Default variant of Han Traditional Alphabet uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine. To use this language please install the Nuget Package 'IronOcr.Languages.Han' from https://www.nuget.org/packages/IronOcr.Languages.Han/ to your Visual Studio project. Alternatively download the \"Han.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage HanTraditionalAlphabet Field Value Type Description OcrLanguage HanTraditionalAlphabetBest Han Traditional Alphabetic Script OCR dictionary. Performs OCR, identifying characters of Han Traditional Alphabet (Samhan ,한어, 韓語) languages. Alphabetic script OCR dictionaries such as this contain detailed information about the shapes letters of an alphabet, but do not utilize any other information about a language such as word-frequency and do not understand linguistic context. This has both advantages and disadvantages. This 'Best' (detailed) variant of Han Traditional Alphabet uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed. To use this language please install the Nuget Package 'IronOcr.Languages.Han' from https://www.nuget.org/packages/IronOcr.Languages.Han/ to your Visual Studio project. Alternatively download the \"Han.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage HanTraditionalAlphabetBest Field Value Type Description OcrLanguage HanTraditionalAlphabetFast Han Traditional Alphabetic Script OCR dictionary. Performs OCR, identifying characters of Han Traditional Alphabet (Samhan ,한어, 韓語) languages. Alphabetic script OCR dictionaries such as this contain detailed information about the shapes letters of an alphabet, but do not utilize any other information about a language such as word-frequency and do not understand linguistic context. This has both advantages and disadvantages. This 'Fast' variant of Han Traditional Alphabet uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy. To use this language please install the Nuget Package 'IronOcr.Languages.Han' from https://www.nuget.org/packages/IronOcr.Languages.Han/ to your Visual Studio project. Alternatively download the \"Han.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage HanTraditionalAlphabetFast Field Value Type Description OcrLanguage HanTraditionalVerticalAlphabet Han Traditional Vertical Alphabetic Script OCR dictionary. Performs OCR, identifying characters of Han Traditional Vertical Alphabet (Samhan ,한어, 韓語) languages. Alphabetic script OCR dictionaries such as this contain detailed information about the shapes letters of an alphabet, but do not utilize any other information about a language such as word-frequency and do not understand linguistic context. This has both advantages and disadvantages. This Default variant of Han Traditional Vertical Alphabet uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine. To use this language please install the Nuget Package 'IronOcr.Languages.Han' from https://www.nuget.org/packages/IronOcr.Languages.Han/ to your Visual Studio project. Alternatively download the \"Han.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage HanTraditionalVerticalAlphabet Field Value Type Description OcrLanguage HanTraditionalVerticalAlphabetBest Han Traditional Vertical Alphabetic Script OCR dictionary. Performs OCR, identifying characters of Han Traditional Vertical Alphabet (Samhan ,한어, 韓語) languages. Alphabetic script OCR dictionaries such as this contain detailed information about the shapes letters of an alphabet, but do not utilize any other information about a language such as word-frequency and do not understand linguistic context. This has both advantages and disadvantages. This 'Best' (detailed) variant of Han Traditional Vertical Alphabet uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed. To use this language please install the Nuget Package 'IronOcr.Languages.Han' from https://www.nuget.org/packages/IronOcr.Languages.Han/ to your Visual Studio project. Alternatively download the \"Han.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage HanTraditionalVerticalAlphabetBest Field Value Type Description OcrLanguage HanTraditionalVerticalAlphabetFast Han Traditional Vertical Alphabetic Script OCR dictionary. Performs OCR, identifying characters of Han Traditional Vertical Alphabet (Samhan ,한어, 韓語) languages. Alphabetic script OCR dictionaries such as this contain detailed information about the shapes letters of an alphabet, but do not utilize any other information about a language such as word-frequency and do not understand linguistic context. This has both advantages and disadvantages. This 'Fast' variant of Han Traditional Vertical Alphabet uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy. To use this language please install the Nuget Package 'IronOcr.Languages.Han' from https://www.nuget.org/packages/IronOcr.Languages.Han/ to your Visual Studio project. Alternatively download the \"Han.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage HanTraditionalVerticalAlphabetFast Field Value Type Description OcrLanguage Hebrew Hebrew OCR language. Performs OCR, reading documents of the Hebrew (עברית) language with an understanding of spelling and linguistic context. This Default variant of Hebrew uses both an LTSM (Long Term Short Term neural network) and an OEM (shape recognition evolved from Tesseract 3) OCR strategies which can mesh them together to produce results which are both fast and accurate. To use this language please install the Nuget Package 'IronOcr.Languages.Hebrew' from https://www.nuget.org/packages/IronOcr.Languages.Hebrew/ to your Visual Studio project. Alternatively download the \"Hebrew.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage Hebrew Field Value Type Description OcrLanguage HebrewAlphabet Hebrew Alphabetic Script OCR dictionary. Performs OCR, identifying characters of Hebrew Alphabet (עברית) languages. Alphabetic script OCR dictionaries such as this contain detailed information about the shapes letters of an alphabet, but do not utilize any other information about a language such as word-frequency and do not understand linguistic context. This has both advantages and disadvantages. This Default variant of Hebrew Alphabet uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine. To use this language please install the Nuget Package 'IronOcr.Languages.Hebrew' from https://www.nuget.org/packages/IronOcr.Languages.Hebrew/ to your Visual Studio project. Alternatively download the \"Hebrew.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage HebrewAlphabet Field Value Type Description OcrLanguage HebrewAlphabetBest Hebrew Alphabetic Script OCR dictionary. Performs OCR, identifying characters of Hebrew Alphabet (עברית) languages. Alphabetic script OCR dictionaries such as this contain detailed information about the shapes letters of an alphabet, but do not utilize any other information about a language such as word-frequency and do not understand linguistic context. This has both advantages and disadvantages. This 'Best' (detailed) variant of Hebrew Alphabet uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed. To use this language please install the Nuget Package 'IronOcr.Languages.Hebrew' from https://www.nuget.org/packages/IronOcr.Languages.Hebrew/ to your Visual Studio project. Alternatively download the \"Hebrew.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage HebrewAlphabetBest Field Value Type Description OcrLanguage HebrewAlphabetFast Hebrew Alphabetic Script OCR dictionary. Performs OCR, identifying characters of Hebrew Alphabet (עברית) languages. Alphabetic script OCR dictionaries such as this contain detailed information about the shapes letters of an alphabet, but do not utilize any other information about a language such as word-frequency and do not understand linguistic context. This has both advantages and disadvantages. This 'Fast' variant of Hebrew Alphabet uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy. To use this language please install the Nuget Package 'IronOcr.Languages.Hebrew' from https://www.nuget.org/packages/IronOcr.Languages.Hebrew/ to your Visual Studio project. Alternatively download the \"Hebrew.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage HebrewAlphabetFast Field Value Type Description OcrLanguage HebrewBest Hebrew OCR language. Performs OCR, reading documents of the Hebrew (עברית) language with an understanding of spelling and linguistic context. This 'Best' (detailed) variant of Hebrew uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed. To use this language please install the Nuget Package 'IronOcr.Languages.Hebrew' from https://www.nuget.org/packages/IronOcr.Languages.Hebrew/ to your Visual Studio project. Alternatively download the \"Hebrew.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage HebrewBest Field Value Type Description OcrLanguage HebrewFast Hebrew OCR language. Performs OCR, reading documents of the Hebrew (עברית) language with an understanding of spelling and linguistic context. This 'Fast' variant of Hebrew uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy. To use this language please install the Nuget Package 'IronOcr.Languages.Hebrew' from https://www.nuget.org/packages/IronOcr.Languages.Hebrew/ to your Visual Studio project. Alternatively download the \"Hebrew.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage HebrewFast Field Value Type Description OcrLanguage Hindi Hindi OCR language. Performs OCR, reading documents of the Hindi (हिन्दी, हिंदी) language with an understanding of spelling and linguistic context. This Default variant of Hindi uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine. To use this language please install the Nuget Package 'IronOcr.Languages.Hindi' from https://www.nuget.org/packages/IronOcr.Languages.Hindi/ to your Visual Studio project. Alternatively download the \"Hindi.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage Hindi Field Value Type Description OcrLanguage HindiBest Hindi OCR language. Performs OCR, reading documents of the Hindi (हिन्दी, हिंदी) language with an understanding of spelling and linguistic context. This 'Best' (detailed) variant of Hindi uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed. To use this language please install the Nuget Package 'IronOcr.Languages.Hindi' from https://www.nuget.org/packages/IronOcr.Languages.Hindi/ to your Visual Studio project. Alternatively download the \"Hindi.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage HindiBest Field Value Type Description OcrLanguage HindiFast Hindi OCR language. Performs OCR, reading documents of the Hindi (हिन्दी, हिंदी) language with an understanding of spelling and linguistic context. This 'Fast' variant of Hindi uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy. To use this language please install the Nuget Package 'IronOcr.Languages.Hindi' from https://www.nuget.org/packages/IronOcr.Languages.Hindi/ to your Visual Studio project. Alternatively download the \"Hindi.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage HindiFast Field Value Type Description OcrLanguage Hungarian Hungarian OCR language. Performs OCR, reading documents of the Hungarian (magyar) language with an understanding of spelling and linguistic context. This Default variant of Hungarian uses both an LTSM (Long Term Short Term neural network) and an OEM (shape recognition evolved from Tesseract 3) OCR strategies which can mesh them together to produce results which are both fast and accurate. To use this language please install the Nuget Package 'IronOcr.Languages.Hungarian' from https://www.nuget.org/packages/IronOcr.Languages.Hungarian/ to your Visual Studio project. Alternatively download the \"Hungarian.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage Hungarian Field Value Type Description OcrLanguage HungarianBest Hungarian OCR language. Performs OCR, reading documents of the Hungarian (magyar) language with an understanding of spelling and linguistic context. This 'Best' (detailed) variant of Hungarian uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed. To use this language please install the Nuget Package 'IronOcr.Languages.Hungarian' from https://www.nuget.org/packages/IronOcr.Languages.Hungarian/ to your Visual Studio project. Alternatively download the \"Hungarian.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage HungarianBest Field Value Type Description OcrLanguage HungarianFast Hungarian OCR language. Performs OCR, reading documents of the Hungarian (magyar) language with an understanding of spelling and linguistic context. This 'Fast' variant of Hungarian uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy. To use this language please install the Nuget Package 'IronOcr.Languages.Hungarian' from https://www.nuget.org/packages/IronOcr.Languages.Hungarian/ to your Visual Studio project. Alternatively download the \"Hungarian.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage HungarianFast Field Value Type Description OcrLanguage Icelandic Icelandic OCR language. Performs OCR, reading documents of the Icelandic (Íslenska) language with an understanding of spelling and linguistic context. This Default variant of Icelandic uses both an LTSM (Long Term Short Term neural network) and an OEM (shape recognition evolved from Tesseract 3) OCR strategies which can mesh them together to produce results which are both fast and accurate. To use this language please install the Nuget Package 'IronOcr.Languages.Icelandic' from https://www.nuget.org/packages/IronOcr.Languages.Icelandic/ to your Visual Studio project. Alternatively download the \"Icelandic.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage Icelandic Field Value Type Description OcrLanguage IcelandicBest Icelandic OCR language. Performs OCR, reading documents of the Icelandic (Íslenska) language with an understanding of spelling and linguistic context. This 'Best' (detailed) variant of Icelandic uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed. To use this language please install the Nuget Package 'IronOcr.Languages.Icelandic' from https://www.nuget.org/packages/IronOcr.Languages.Icelandic/ to your Visual Studio project. Alternatively download the \"Icelandic.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage IcelandicBest Field Value Type Description OcrLanguage IcelandicFast Icelandic OCR language. Performs OCR, reading documents of the Icelandic (Íslenska) language with an understanding of spelling and linguistic context. This 'Fast' variant of Icelandic uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy. To use this language please install the Nuget Package 'IronOcr.Languages.Icelandic' from https://www.nuget.org/packages/IronOcr.Languages.Icelandic/ to your Visual Studio project. Alternatively download the \"Icelandic.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage IcelandicFast Field Value Type Description OcrLanguage Indonesian Indonesian OCR language. Performs OCR, reading documents of the Indonesian (Bahasa Indonesia) language with an understanding of spelling and linguistic context. This Default variant of Indonesian uses both an LTSM (Long Term Short Term neural network) and an OEM (shape recognition evolved from Tesseract 3) OCR strategies which can mesh them together to produce results which are both fast and accurate. To use this language please install the Nuget Package 'IronOcr.Languages.Indonesian' from https://www.nuget.org/packages/IronOcr.Languages.Indonesian/ to your Visual Studio project. Alternatively download the \"Indonesian.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage Indonesian Field Value Type Description OcrLanguage IndonesianBest Indonesian OCR language. Performs OCR, reading documents of the Indonesian (Bahasa Indonesia) language with an understanding of spelling and linguistic context. This 'Best' (detailed) variant of Indonesian uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed. To use this language please install the Nuget Package 'IronOcr.Languages.Indonesian' from https://www.nuget.org/packages/IronOcr.Languages.Indonesian/ to your Visual Studio project. Alternatively download the \"Indonesian.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage IndonesianBest Field Value Type Description OcrLanguage IndonesianFast Indonesian OCR language. Performs OCR, reading documents of the Indonesian (Bahasa Indonesia) language with an understanding of spelling and linguistic context. This 'Fast' variant of Indonesian uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy. To use this language please install the Nuget Package 'IronOcr.Languages.Indonesian' from https://www.nuget.org/packages/IronOcr.Languages.Indonesian/ to your Visual Studio project. Alternatively download the \"Indonesian.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage IndonesianFast Field Value Type Description OcrLanguage Inuktitut Inuktitut OCR language. Performs OCR, reading documents of the Inuktitut (ᐃᓄᒃᑎᑐᑦ) language with an understanding of spelling and linguistic context. This Default variant of Inuktitut uses both an LTSM (Long Term Short Term neural network) and an OEM (shape recognition evolved from Tesseract 3) OCR strategies which can mesh them together to produce results which are both fast and accurate. To use this language please install the Nuget Package 'IronOcr.Languages.Inuktitut' from https://www.nuget.org/packages/IronOcr.Languages.Inuktitut/ to your Visual Studio project. Alternatively download the \"Inuktitut.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage Inuktitut Field Value Type Description OcrLanguage InuktitutBest Inuktitut OCR language. Performs OCR, reading documents of the Inuktitut (ᐃᓄᒃᑎᑐᑦ) language with an understanding of spelling and linguistic context. This 'Best' (detailed) variant of Inuktitut uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed. To use this language please install the Nuget Package 'IronOcr.Languages.Inuktitut' from https://www.nuget.org/packages/IronOcr.Languages.Inuktitut/ to your Visual Studio project. Alternatively download the \"Inuktitut.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage InuktitutBest Field Value Type Description OcrLanguage InuktitutFast Inuktitut OCR language. Performs OCR, reading documents of the Inuktitut (ᐃᓄᒃᑎᑐᑦ) language with an understanding of spelling and linguistic context. This 'Fast' variant of Inuktitut uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy. To use this language please install the Nuget Package 'IronOcr.Languages.Inuktitut' from https://www.nuget.org/packages/IronOcr.Languages.Inuktitut/ to your Visual Studio project. Alternatively download the \"Inuktitut.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage InuktitutFast Field Value Type Description OcrLanguage Irish Irish OCR language. Performs OCR, reading documents of the Irish (Gaeilge) language with an understanding of spelling and linguistic context. This Default variant of Irish uses both an LTSM (Long Term Short Term neural network) and an OEM (shape recognition evolved from Tesseract 3) OCR strategies which can mesh them together to produce results which are both fast and accurate. To use this language please install the Nuget Package 'IronOcr.Languages.Irish' from https://www.nuget.org/packages/IronOcr.Languages.Irish/ to your Visual Studio project. Alternatively download the \"Irish.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage Irish Field Value Type Description OcrLanguage IrishBest Irish OCR language. Performs OCR, reading documents of the Irish (Gaeilge) language with an understanding of spelling and linguistic context. This 'Best' (detailed) variant of Irish uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed. To use this language please install the Nuget Package 'IronOcr.Languages.Irish' from https://www.nuget.org/packages/IronOcr.Languages.Irish/ to your Visual Studio project. Alternatively download the \"Irish.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage IrishBest Field Value Type Description OcrLanguage IrishFast Irish OCR language. Performs OCR, reading documents of the Irish (Gaeilge) language with an understanding of spelling and linguistic context. This 'Fast' variant of Irish uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy. To use this language please install the Nuget Package 'IronOcr.Languages.Irish' from https://www.nuget.org/packages/IronOcr.Languages.Irish/ to your Visual Studio project. Alternatively download the \"Irish.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage IrishFast Field Value Type Description OcrLanguage Italian Italian OCR language. Performs OCR, reading documents of the Italian (italiano) language with an understanding of spelling and linguistic context. This Default variant of Italian uses both an LTSM (Long Term Short Term neural network) and an OEM (shape recognition evolved from Tesseract 3) OCR strategies which can mesh them together to produce results which are both fast and accurate. To use this language please install the Nuget Package 'IronOcr.Languages.Italian' from https://www.nuget.org/packages/IronOcr.Languages.Italian/ to your Visual Studio project. Alternatively download the \"Italian.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage Italian Field Value Type Description OcrLanguage ItalianBest Italian OCR language. Performs OCR, reading documents of the Italian (italiano) language with an understanding of spelling and linguistic context. This 'Best' (detailed) variant of Italian uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed. To use this language please install the Nuget Package 'IronOcr.Languages.Italian' from https://www.nuget.org/packages/IronOcr.Languages.Italian/ to your Visual Studio project. Alternatively download the \"Italian.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage ItalianBest Field Value Type Description OcrLanguage ItalianFast Italian OCR language. Performs OCR, reading documents of the Italian (italiano) language with an understanding of spelling and linguistic context. This 'Fast' variant of Italian uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy. To use this language please install the Nuget Package 'IronOcr.Languages.Italian' from https://www.nuget.org/packages/IronOcr.Languages.Italian/ to your Visual Studio project. Alternatively download the \"Italian.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage ItalianFast Field Value Type Description OcrLanguage ItalianOld Italian Old OCR language. Performs OCR, reading documents of the Italian Old (italiano) language with an understanding of spelling and linguistic context. This Default variant of Italian Old uses both an LTSM (Long Term Short Term neural network) and an OEM (shape recognition evolved from Tesseract 3) OCR strategies which can mesh them together to produce results which are both fast and accurate. To use this language please install the Nuget Package 'IronOcr.Languages.Italian' from https://www.nuget.org/packages/IronOcr.Languages.Italian/ to your Visual Studio project. Alternatively download the \"Italian.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage ItalianOld Field Value Type Description OcrLanguage ItalianOldBest Italian Old OCR language. Performs OCR, reading documents of the Italian Old (italiano) language with an understanding of spelling and linguistic context. This 'Best' (detailed) variant of Italian Old uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed. To use this language please install the Nuget Package 'IronOcr.Languages.Italian' from https://www.nuget.org/packages/IronOcr.Languages.Italian/ to your Visual Studio project. Alternatively download the \"Italian.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage ItalianOldBest Field Value Type Description OcrLanguage ItalianOldFast Italian Old OCR language. Performs OCR, reading documents of the Italian Old (italiano) language with an understanding of spelling and linguistic context. This 'Fast' variant of Italian Old uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy. To use this language please install the Nuget Package 'IronOcr.Languages.Italian' from https://www.nuget.org/packages/IronOcr.Languages.Italian/ to your Visual Studio project. Alternatively download the \"Italian.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage ItalianOldFast Field Value Type Description OcrLanguage Japanese Japanese OCR language. Performs OCR, reading documents of the Japanese [日本語 (にほんご)] language with an understanding of spelling and linguistic context. This Default variant of Japanese uses both an LTSM (Long Term Short Term neural network) and an OEM (shape recognition evolved from Tesseract 3) OCR strategies which can mesh them together to produce results which are both fast and accurate. To use this language please install the Nuget Package 'IronOcr.Languages.Japanese' from https://www.nuget.org/packages/IronOcr.Languages.Japanese/ to your Visual Studio project. Alternatively download the \"Japanese.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage Japanese Field Value Type Description OcrLanguage JapaneseAlphabet Japanese Alphabetic Script OCR dictionary. Performs OCR, identifying characters of Japanese Alphabet [日本語 (にほんご)] languages. Alphabetic script OCR dictionaries such as this contain detailed information about the shapes letters of an alphabet, but do not utilize any other information about a language such as word-frequency and do not understand linguistic context. This has both advantages and disadvantages. This Default variant of Japanese Alphabet uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine. To use this language please install the Nuget Package 'IronOcr.Languages.Japanese' from https://www.nuget.org/packages/IronOcr.Languages.Japanese/ to your Visual Studio project. Alternatively download the \"Japanese.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage JapaneseAlphabet Field Value Type Description OcrLanguage JapaneseAlphabetBest Japanese Alphabetic Script OCR dictionary. Performs OCR, identifying characters of Japanese Alphabet [日本語 (にほんご)] languages. Alphabetic script OCR dictionaries such as this contain detailed information about the shapes letters of an alphabet, but do not utilize any other information about a language such as word-frequency and do not understand linguistic context. This has both advantages and disadvantages. This 'Best' (detailed) variant of Japanese Alphabet uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed. To use this language please install the Nuget Package 'IronOcr.Languages.Japanese' from https://www.nuget.org/packages/IronOcr.Languages.Japanese/ to your Visual Studio project. Alternatively download the \"Japanese.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage JapaneseAlphabetBest Field Value Type Description OcrLanguage JapaneseAlphabetFast Japanese Alphabetic Script OCR dictionary. Performs OCR, identifying characters of Japanese Alphabet [日本語 (にほんご)] languages. Alphabetic script OCR dictionaries such as this contain detailed information about the shapes letters of an alphabet, but do not utilize any other information about a language such as word-frequency and do not understand linguistic context. This has both advantages and disadvantages. This 'Fast' variant of Japanese Alphabet uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy. To use this language please install the Nuget Package 'IronOcr.Languages.Japanese' from https://www.nuget.org/packages/IronOcr.Languages.Japanese/ to your Visual Studio project. Alternatively download the \"Japanese.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage JapaneseAlphabetFast Field Value Type Description OcrLanguage JapaneseBest Japanese OCR language. Performs OCR, reading documents of the Japanese [日本語 (にほんご)] language with an understanding of spelling and linguistic context. This 'Best' (detailed) variant of Japanese uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed. To use this language please install the Nuget Package 'IronOcr.Languages.Japanese' from https://www.nuget.org/packages/IronOcr.Languages.Japanese/ to your Visual Studio project. Alternatively download the \"Japanese.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage JapaneseBest Field Value Type Description OcrLanguage JapaneseFast Japanese OCR language. Performs OCR, reading documents of the Japanese [日本語 (にほんご)] language with an understanding of spelling and linguistic context. This 'Fast' variant of Japanese uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy. To use this language please install the Nuget Package 'IronOcr.Languages.Japanese' from https://www.nuget.org/packages/IronOcr.Languages.Japanese/ to your Visual Studio project. Alternatively download the \"Japanese.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage JapaneseFast Field Value Type Description OcrLanguage JapaneseVertical Japanese Vertical OCR language. Performs OCR, reading documents of the Japanese Vertical [日本語 (にほんご)] language with an understanding of spelling and linguistic context. This Default variant of Japanese Vertical uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine. To use this language please install the Nuget Package 'IronOcr.Languages.Japanese' from https://www.nuget.org/packages/IronOcr.Languages.Japanese/ to your Visual Studio project. Alternatively download the \"Japanese.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage JapaneseVertical Field Value Type Description OcrLanguage JapaneseVerticalAlphabet Japanese Vertical Alphabetic Script OCR dictionary. Performs OCR, identifying characters of Japanese Vertical Alphabet [日本語 (にほんご)] languages. Alphabetic script OCR dictionaries such as this contain detailed information about the shapes letters of an alphabet, but do not utilize any other information about a language such as word-frequency and do not understand linguistic context. This has both advantages and disadvantages. This Default variant of Japanese Vertical Alphabet uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine. To use this language please install the Nuget Package 'IronOcr.Languages.Japanese' from https://www.nuget.org/packages/IronOcr.Languages.Japanese/ to your Visual Studio project. Alternatively download the \"Japanese.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage JapaneseVerticalAlphabet Field Value Type Description OcrLanguage JapaneseVerticalAlphabetBest Japanese Vertical Alphabetic Script OCR dictionary. Performs OCR, identifying characters of Japanese Vertical Alphabet [日本語 (にほんご)] languages. Alphabetic script OCR dictionaries such as this contain detailed information about the shapes letters of an alphabet, but do not utilize any other information about a language such as word-frequency and do not understand linguistic context. This has both advantages and disadvantages. This 'Best' (detailed) variant of Japanese Vertical Alphabet uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed. To use this language please install the Nuget Package 'IronOcr.Languages.Japanese' from https://www.nuget.org/packages/IronOcr.Languages.Japanese/ to your Visual Studio project. Alternatively download the \"Japanese.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage JapaneseVerticalAlphabetBest Field Value Type Description OcrLanguage JapaneseVerticalAlphabetFast Japanese Vertical Alphabetic Script OCR dictionary. Performs OCR, identifying characters of Japanese Vertical Alphabet [日本語 (にほんご)] languages. Alphabetic script OCR dictionaries such as this contain detailed information about the shapes letters of an alphabet, but do not utilize any other information about a language such as word-frequency and do not understand linguistic context. This has both advantages and disadvantages. This 'Fast' variant of Japanese Vertical Alphabet uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy. To use this language please install the Nuget Package 'IronOcr.Languages.Japanese' from https://www.nuget.org/packages/IronOcr.Languages.Japanese/ to your Visual Studio project. Alternatively download the \"Japanese.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage JapaneseVerticalAlphabetFast Field Value Type Description OcrLanguage JapaneseVerticalBest Japanese Vertical OCR language. Performs OCR, reading documents of the Japanese Vertical [日本語 (にほんご)] language with an understanding of spelling and linguistic context. This 'Best' (detailed) variant of Japanese Vertical uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed. To use this language please install the Nuget Package 'IronOcr.Languages.Japanese' from https://www.nuget.org/packages/IronOcr.Languages.Japanese/ to your Visual Studio project. Alternatively download the \"Japanese.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage JapaneseVerticalBest Field Value Type Description OcrLanguage JapaneseVerticalFast Japanese Vertical OCR language. Performs OCR, reading documents of the Japanese Vertical [日本語 (にほんご)] language with an understanding of spelling and linguistic context. This 'Fast' variant of Japanese Vertical uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy. To use this language please install the Nuget Package 'IronOcr.Languages.Japanese' from https://www.nuget.org/packages/IronOcr.Languages.Japanese/ to your Visual Studio project. Alternatively download the \"Japanese.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage JapaneseVerticalFast Field Value Type Description OcrLanguage Javanese Javanese OCR language. Performs OCR, reading documents of the Javanese (basa Jawa) language with an understanding of spelling and linguistic context. This Default variant of Javanese uses both an LTSM (Long Term Short Term neural network) and an OEM (shape recognition evolved from Tesseract 3) OCR strategies which can mesh them together to produce results which are both fast and accurate. To use this language please install the Nuget Package 'IronOcr.Languages.Javanese' from https://www.nuget.org/packages/IronOcr.Languages.Javanese/ to your Visual Studio project. Alternatively download the \"Javanese.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage Javanese Field Value Type Description OcrLanguage JavaneseBest Javanese OCR language. Performs OCR, reading documents of the Javanese (basa Jawa) language with an understanding of spelling and linguistic context. This 'Best' (detailed) variant of Javanese uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed. To use this language please install the Nuget Package 'IronOcr.Languages.Javanese' from https://www.nuget.org/packages/IronOcr.Languages.Javanese/ to your Visual Studio project. Alternatively download the \"Javanese.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage JavaneseBest Field Value Type Description OcrLanguage JavaneseFast Javanese OCR language. Performs OCR, reading documents of the Javanese (basa Jawa) language with an understanding of spelling and linguistic context. This 'Fast' variant of Javanese uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy. To use this language please install the Nuget Package 'IronOcr.Languages.Javanese' from https://www.nuget.org/packages/IronOcr.Languages.Javanese/ to your Visual Studio project. Alternatively download the \"Javanese.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage JavaneseFast Field Value Type Description OcrLanguage Kannada Kannada OCR language. Performs OCR, reading documents of the Kannada (ಕನ್ನಡ) language with an understanding of spelling and linguistic context. This Default variant of Kannada uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine. To use this language please install the Nuget Package 'IronOcr.Languages.Kannada' from https://www.nuget.org/packages/IronOcr.Languages.Kannada/ to your Visual Studio project. Alternatively download the \"Kannada.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage Kannada Field Value Type Description OcrLanguage KannadaAlphabet Kannada Alphabetic Script OCR dictionary. Performs OCR, identifying characters of Kannada Alphabet (ಕನ್ನಡ) languages. Alphabetic script OCR dictionaries such as this contain detailed information about the shapes letters of an alphabet, but do not utilize any other information about a language such as word-frequency and do not understand linguistic context. This has both advantages and disadvantages. This Default variant of Kannada Alphabet uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine. To use this language please install the Nuget Package 'IronOcr.Languages.Kannada' from https://www.nuget.org/packages/IronOcr.Languages.Kannada/ to your Visual Studio project. Alternatively download the \"Kannada.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage KannadaAlphabet Field Value Type Description OcrLanguage KannadaAlphabetBest Kannada Alphabetic Script OCR dictionary. Performs OCR, identifying characters of Kannada Alphabet (ಕನ್ನಡ) languages. Alphabetic script OCR dictionaries such as this contain detailed information about the shapes letters of an alphabet, but do not utilize any other information about a language such as word-frequency and do not understand linguistic context. This has both advantages and disadvantages. This 'Best' (detailed) variant of Kannada Alphabet uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed. To use this language please install the Nuget Package 'IronOcr.Languages.Kannada' from https://www.nuget.org/packages/IronOcr.Languages.Kannada/ to your Visual Studio project. Alternatively download the \"Kannada.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage KannadaAlphabetBest Field Value Type Description OcrLanguage KannadaAlphabetFast Kannada Alphabetic Script OCR dictionary. Performs OCR, identifying characters of Kannada Alphabet (ಕನ್ನಡ) languages. Alphabetic script OCR dictionaries such as this contain detailed information about the shapes letters of an alphabet, but do not utilize any other information about a language such as word-frequency and do not understand linguistic context. This has both advantages and disadvantages. This 'Fast' variant of Kannada Alphabet uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy. To use this language please install the Nuget Package 'IronOcr.Languages.Kannada' from https://www.nuget.org/packages/IronOcr.Languages.Kannada/ to your Visual Studio project. Alternatively download the \"Kannada.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage KannadaAlphabetFast Field Value Type Description OcrLanguage KannadaBest Kannada OCR language. Performs OCR, reading documents of the Kannada (ಕನ್ನಡ) language with an understanding of spelling and linguistic context. This 'Best' (detailed) variant of Kannada uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed. To use this language please install the Nuget Package 'IronOcr.Languages.Kannada' from https://www.nuget.org/packages/IronOcr.Languages.Kannada/ to your Visual Studio project. Alternatively download the \"Kannada.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage KannadaBest Field Value Type Description OcrLanguage KannadaFast Kannada OCR language. Performs OCR, reading documents of the Kannada (ಕನ್ನಡ) language with an understanding of spelling and linguistic context. This 'Fast' variant of Kannada uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy. To use this language please install the Nuget Package 'IronOcr.Languages.Kannada' from https://www.nuget.org/packages/IronOcr.Languages.Kannada/ to your Visual Studio project. Alternatively download the \"Kannada.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage KannadaFast Field Value Type Description OcrLanguage Kazakh Kazakh OCR language. Performs OCR, reading documents of the Kazakh (қазақ тілі) language with an understanding of spelling and linguistic context. This Default variant of Kazakh uses both an LTSM (Long Term Short Term neural network) and an OEM (shape recognition evolved from Tesseract 3) OCR strategies which can mesh them together to produce results which are both fast and accurate. To use this language please install the Nuget Package 'IronOcr.Languages.Kazakh' from https://www.nuget.org/packages/IronOcr.Languages.Kazakh/ to your Visual Studio project. Alternatively download the \"Kazakh.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage Kazakh Field Value Type Description OcrLanguage KazakhBest Kazakh OCR language. Performs OCR, reading documents of the Kazakh (қазақ тілі) language with an understanding of spelling and linguistic context. This 'Best' (detailed) variant of Kazakh uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed. To use this language please install the Nuget Package 'IronOcr.Languages.Kazakh' from https://www.nuget.org/packages/IronOcr.Languages.Kazakh/ to your Visual Studio project. Alternatively download the \"Kazakh.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage KazakhBest Field Value Type Description OcrLanguage KazakhFast Kazakh OCR language. Performs OCR, reading documents of the Kazakh (қазақ тілі) language with an understanding of spelling and linguistic context. This 'Fast' variant of Kazakh uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy. To use this language please install the Nuget Package 'IronOcr.Languages.Kazakh' from https://www.nuget.org/packages/IronOcr.Languages.Kazakh/ to your Visual Studio project. Alternatively download the \"Kazakh.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage KazakhFast Field Value Type Description OcrLanguage Khmer Khmer OCR language. Performs OCR, reading documents of the Khmer (ខ្មែរ, ខេមរភាសា, ភាសាខ្មែរ) language with an understanding of spelling and linguistic context. This Default variant of Khmer uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine. To use this language please install the Nuget Package 'IronOcr.Languages.Khmer' from https://www.nuget.org/packages/IronOcr.Languages.Khmer/ to your Visual Studio project. Alternatively download the \"Khmer.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage Khmer Field Value Type Description OcrLanguage KhmerAlphabet Khmer Alphabetic Script OCR dictionary. Performs OCR, identifying characters of Khmer Alphabet (ខ្មែរ, ខេមរភាសា, ភាសាខ្មែរ) languages. Alphabetic script OCR dictionaries such as this contain detailed information about the shapes letters of an alphabet, but do not utilize any other information about a language such as word-frequency and do not understand linguistic context. This has both advantages and disadvantages. This Default variant of Khmer Alphabet uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine. To use this language please install the Nuget Package 'IronOcr.Languages.Khmer' from https://www.nuget.org/packages/IronOcr.Languages.Khmer/ to your Visual Studio project. Alternatively download the \"Khmer.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage KhmerAlphabet Field Value Type Description OcrLanguage KhmerAlphabetBest Khmer Alphabetic Script OCR dictionary. Performs OCR, identifying characters of Khmer Alphabet (ខ្មែរ, ខេមរភាសា, ភាសាខ្មែរ) languages. Alphabetic script OCR dictionaries such as this contain detailed information about the shapes letters of an alphabet, but do not utilize any other information about a language such as word-frequency and do not understand linguistic context. This has both advantages and disadvantages. This 'Best' (detailed) variant of Khmer Alphabet uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed. To use this language please install the Nuget Package 'IronOcr.Languages.Khmer' from https://www.nuget.org/packages/IronOcr.Languages.Khmer/ to your Visual Studio project. Alternatively download the \"Khmer.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage KhmerAlphabetBest Field Value Type Description OcrLanguage KhmerAlphabetFast Khmer Alphabetic Script OCR dictionary. Performs OCR, identifying characters of Khmer Alphabet (ខ្មែរ, ខេមរភាសា, ភាសាខ្មែរ) languages. Alphabetic script OCR dictionaries such as this contain detailed information about the shapes letters of an alphabet, but do not utilize any other information about a language such as word-frequency and do not understand linguistic context. This has both advantages and disadvantages. This 'Fast' variant of Khmer Alphabet uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy. To use this language please install the Nuget Package 'IronOcr.Languages.Khmer' from https://www.nuget.org/packages/IronOcr.Languages.Khmer/ to your Visual Studio project. Alternatively download the \"Khmer.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage KhmerAlphabetFast Field Value Type Description OcrLanguage KhmerBest Khmer OCR language. Performs OCR, reading documents of the Khmer (ខ្មែរ, ខេមរភាសា, ភាសាខ្មែរ) language with an understanding of spelling and linguistic context. This 'Best' (detailed) variant of Khmer uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed. To use this language please install the Nuget Package 'IronOcr.Languages.Khmer' from https://www.nuget.org/packages/IronOcr.Languages.Khmer/ to your Visual Studio project. Alternatively download the \"Khmer.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage KhmerBest Field Value Type Description OcrLanguage KhmerFast Khmer OCR language. Performs OCR, reading documents of the Khmer (ខ្មែរ, ខេមរភាសា, ភាសាខ្មែរ) language with an understanding of spelling and linguistic context. This 'Fast' variant of Khmer uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy. To use this language please install the Nuget Package 'IronOcr.Languages.Khmer' from https://www.nuget.org/packages/IronOcr.Languages.Khmer/ to your Visual Studio project. Alternatively download the \"Khmer.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage KhmerFast Field Value Type Description OcrLanguage Korean Korean OCR language. Performs OCR, reading documents of the Korean [한국어 (韓國語), 조선어 (朝鮮語)] language with an understanding of spelling and linguistic context. This Default variant of Korean uses both an LTSM (Long Term Short Term neural network) and an OEM (shape recognition evolved from Tesseract 3) OCR strategies which can mesh them together to produce results which are both fast and accurate. To use this language please install the Nuget Package 'IronOcr.Languages.Korean' from https://www.nuget.org/packages/IronOcr.Languages.Korean/ to your Visual Studio project. Alternatively download the \"Korean.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage Korean Field Value Type Description OcrLanguage KoreanBest Korean OCR language. Performs OCR, reading documents of the Korean [한국어 (韓國語), 조선어 (朝鮮語)] language with an understanding of spelling and linguistic context. This 'Best' (detailed) variant of Korean uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed. To use this language please install the Nuget Package 'IronOcr.Languages.Korean' from https://www.nuget.org/packages/IronOcr.Languages.Korean/ to your Visual Studio project. Alternatively download the \"Korean.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage KoreanBest Field Value Type Description OcrLanguage KoreanFast Korean OCR language. Performs OCR, reading documents of the Korean [한국어 (韓國語), 조선어 (朝鮮語)] language with an understanding of spelling and linguistic context. This 'Fast' variant of Korean uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy. To use this language please install the Nuget Package 'IronOcr.Languages.Korean' from https://www.nuget.org/packages/IronOcr.Languages.Korean/ to your Visual Studio project. Alternatively download the \"Korean.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage KoreanFast Field Value Type Description OcrLanguage KoreanVertical Korean Vertical OCR language. Performs OCR, reading documents of the Korean Vertical [한국어 (韓國語), 조선어 (朝鮮語)] language with an understanding of spelling and linguistic context. This Default variant of Korean Vertical uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine. To use this language please install the Nuget Package 'IronOcr.Languages.Korean' from https://www.nuget.org/packages/IronOcr.Languages.Korean/ to your Visual Studio project. Alternatively download the \"Korean.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage KoreanVertical Field Value Type Description OcrLanguage KoreanVerticalBest Korean Vertical OCR language. Performs OCR, reading documents of the Korean Vertical [한국어 (韓國語), 조선어 (朝鮮語)] language with an understanding of spelling and linguistic context. This 'Best' (detailed) variant of Korean Vertical uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed. To use this language please install the Nuget Package 'IronOcr.Languages.Korean' from https://www.nuget.org/packages/IronOcr.Languages.Korean/ to your Visual Studio project. Alternatively download the \"Korean.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage KoreanVerticalBest Field Value Type Description OcrLanguage KoreanVerticalFast Korean Vertical OCR language. Performs OCR, reading documents of the Korean Vertical [한국어 (韓國語), 조선어 (朝鮮語)] language with an understanding of spelling and linguistic context. This 'Fast' variant of Korean Vertical uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy. To use this language please install the Nuget Package 'IronOcr.Languages.Korean' from https://www.nuget.org/packages/IronOcr.Languages.Korean/ to your Visual Studio project. Alternatively download the \"Korean.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage KoreanVerticalFast Field Value Type Description OcrLanguage Kyrgyz Kyrgyz OCR language. Performs OCR, reading documents of the Kyrgyz (Кыргызча, Кыргыз тили) language with an understanding of spelling and linguistic context. This Default variant of Kyrgyz uses both an LTSM (Long Term Short Term neural network) and an OEM (shape recognition evolved from Tesseract 3) OCR strategies which can mesh them together to produce results which are both fast and accurate. To use this language please install the Nuget Package 'IronOcr.Languages.Kyrgyz' from https://www.nuget.org/packages/IronOcr.Languages.Kyrgyz/ to your Visual Studio project. Alternatively download the \"Kyrgyz.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage Kyrgyz Field Value Type Description OcrLanguage KyrgyzBest Kyrgyz OCR language. Performs OCR, reading documents of the Kyrgyz (Кыргызча, Кыргыз тили) language with an understanding of spelling and linguistic context. This 'Best' (detailed) variant of Kyrgyz uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed. To use this language please install the Nuget Package 'IronOcr.Languages.Kyrgyz' from https://www.nuget.org/packages/IronOcr.Languages.Kyrgyz/ to your Visual Studio project. Alternatively download the \"Kyrgyz.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage KyrgyzBest Field Value Type Description OcrLanguage KyrgyzFast Kyrgyz OCR language. Performs OCR, reading documents of the Kyrgyz (Кыргызча, Кыргыз тили) language with an understanding of spelling and linguistic context. This 'Fast' variant of Kyrgyz uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy. To use this language please install the Nuget Package 'IronOcr.Languages.Kyrgyz' from https://www.nuget.org/packages/IronOcr.Languages.Kyrgyz/ to your Visual Studio project. Alternatively download the \"Kyrgyz.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage KyrgyzFast Field Value Type Description OcrLanguage Lao Lao OCR language. Performs OCR, reading documents of the Lao (ພາສາລາວ) language with an understanding of spelling and linguistic context. This Default variant of Lao uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine. To use this language please install the Nuget Package 'IronOcr.Languages.Lao' from https://www.nuget.org/packages/IronOcr.Languages.Lao/ to your Visual Studio project. Alternatively download the \"Lao.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage Lao Field Value Type Description OcrLanguage LaoAlphabet Lao Alphabetic Script OCR dictionary. Performs OCR, identifying characters of Lao Alphabet (ພາສາລາວ) languages. Alphabetic script OCR dictionaries such as this contain detailed information about the shapes letters of an alphabet, but do not utilize any other information about a language such as word-frequency and do not understand linguistic context. This has both advantages and disadvantages. This Default variant of Lao Alphabet uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine. To use this language please install the Nuget Package 'IronOcr.Languages.Lao' from https://www.nuget.org/packages/IronOcr.Languages.Lao/ to your Visual Studio project. Alternatively download the \"Lao.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage LaoAlphabet Field Value Type Description OcrLanguage LaoAlphabetBest Lao Alphabetic Script OCR dictionary. Performs OCR, identifying characters of Lao Alphabet (ພາສາລາວ) languages. Alphabetic script OCR dictionaries such as this contain detailed information about the shapes letters of an alphabet, but do not utilize any other information about a language such as word-frequency and do not understand linguistic context. This has both advantages and disadvantages. This 'Best' (detailed) variant of Lao Alphabet uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed. To use this language please install the Nuget Package 'IronOcr.Languages.Lao' from https://www.nuget.org/packages/IronOcr.Languages.Lao/ to your Visual Studio project. Alternatively download the \"Lao.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage LaoAlphabetBest Field Value Type Description OcrLanguage LaoAlphabetFast Lao Alphabetic Script OCR dictionary. Performs OCR, identifying characters of Lao Alphabet (ພາສາລາວ) languages. Alphabetic script OCR dictionaries such as this contain detailed information about the shapes letters of an alphabet, but do not utilize any other information about a language such as word-frequency and do not understand linguistic context. This has both advantages and disadvantages. This 'Fast' variant of Lao Alphabet uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy. To use this language please install the Nuget Package 'IronOcr.Languages.Lao' from https://www.nuget.org/packages/IronOcr.Languages.Lao/ to your Visual Studio project. Alternatively download the \"Lao.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage LaoAlphabetFast Field Value Type Description OcrLanguage LaoBest Lao OCR language. Performs OCR, reading documents of the Lao (ພາສາລາວ) language with an understanding of spelling and linguistic context. This 'Best' (detailed) variant of Lao uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed. To use this language please install the Nuget Package 'IronOcr.Languages.Lao' from https://www.nuget.org/packages/IronOcr.Languages.Lao/ to your Visual Studio project. Alternatively download the \"Lao.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage LaoBest Field Value Type Description OcrLanguage LaoFast Lao OCR language. Performs OCR, reading documents of the Lao (ພາສາລາວ) language with an understanding of spelling and linguistic context. This 'Fast' variant of Lao uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy. To use this language please install the Nuget Package 'IronOcr.Languages.Lao' from https://www.nuget.org/packages/IronOcr.Languages.Lao/ to your Visual Studio project. Alternatively download the \"Lao.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage LaoFast Field Value Type Description OcrLanguage Latin Latin OCR language. Performs OCR, reading documents of the Latin (latine, lingua latina) language with an understanding of spelling and linguistic context. This Default variant of Latin uses both an LTSM (Long Term Short Term neural network) and an OEM (shape recognition evolved from Tesseract 3) OCR strategies which can mesh them together to produce results which are both fast and accurate. To use this language please install the Nuget Package 'IronOcr.Languages.Latin' from https://www.nuget.org/packages/IronOcr.Languages.Latin/ to your Visual Studio project. Alternatively download the \"Latin.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage Latin Field Value Type Description OcrLanguage LatinAlphabet Latin Alphabetic Script OCR dictionary. Reads the letters of the Latin / Romain / 'English' alphabet as is commonly used in English and other European languages. Alphabetic script OCR dictionaries such as this contain detailed information about the shapes letters of an alphabet, but do not utilize any other information about a language such as word-frequency and do not understand linguistic context. This has both advantages and disadvantages. This Default variant of Latin Alphabet uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine. To use this language please install the Nuget Package 'IronOcr.Languages.LatinAlphabet' from https://www.nuget.org/packages/IronOcr.Languages.LatinAlphabet/ to your Visual Studio project. Alternatively download the \"LatinAlphabet.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage LatinAlphabet Field Value Type Description OcrLanguage LatinAlphabetBest Latin Alphabetic Script OCR dictionary. Reads the letters of the Latin / Romain / 'English' alphabet as is commonly used in English and other European languages. Alphabetic script OCR dictionaries such as this contain detailed information about the shapes letters of an alphabet, but do not utilize any other information about a language such as word-frequency and do not understand linguistic context. This has both advantages and disadvantages. This 'Best' (detailed) variant of Latin Alphabet uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed. To use this language please install the Nuget Package 'IronOcr.Languages.LatinAlphabet' from https://www.nuget.org/packages/IronOcr.Languages.LatinAlphabet/ to your Visual Studio project. Alternatively download the \"LatinAlphabet.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage LatinAlphabetBest Field Value Type Description OcrLanguage LatinAlphabetFast Latin Alphabetic Script OCR dictionary. Reads the letters of the Latin / Romain / 'English' alphabet as is commonly used in English and other European languages. Alphabetic script OCR dictionaries such as this contain detailed information about the shapes letters of an alphabet, but do not utilize any other information about a language such as word-frequency and do not understand linguistic context. This has both advantages and disadvantages. This 'Fast' variant of Latin Alphabet uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy. To use this language please install the Nuget Package 'IronOcr.Languages.LatinAlphabet' from https://www.nuget.org/packages/IronOcr.Languages.LatinAlphabet/ to your Visual Studio project. Alternatively download the \"LatinAlphabet.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage LatinAlphabetFast Field Value Type Description OcrLanguage LatinBest Latin OCR language. Performs OCR, reading documents of the Latin (latine, lingua latina) language with an understanding of spelling and linguistic context. This 'Best' (detailed) variant of Latin uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed. To use this language please install the Nuget Package 'IronOcr.Languages.Latin' from https://www.nuget.org/packages/IronOcr.Languages.Latin/ to your Visual Studio project. Alternatively download the \"Latin.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage LatinBest Field Value Type Description OcrLanguage LatinFast Latin OCR language. Performs OCR, reading documents of the Latin (latine, lingua latina) language with an understanding of spelling and linguistic context. This 'Fast' variant of Latin uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy. To use this language please install the Nuget Package 'IronOcr.Languages.Latin' from https://www.nuget.org/packages/IronOcr.Languages.Latin/ to your Visual Studio project. Alternatively download the \"Latin.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage LatinFast Field Value Type Description OcrLanguage Latvian Latvian OCR language. Performs OCR, reading documents of the Latvian (latviešu valoda) language with an understanding of spelling and linguistic context. This Default variant of Latvian uses both an LTSM (Long Term Short Term neural network) and an OEM (shape recognition evolved from Tesseract 3) OCR strategies which can mesh them together to produce results which are both fast and accurate. To use this language please install the Nuget Package 'IronOcr.Languages.Latvian' from https://www.nuget.org/packages/IronOcr.Languages.Latvian/ to your Visual Studio project. Alternatively download the \"Latvian.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage Latvian Field Value Type Description OcrLanguage LatvianBest Latvian OCR language. Performs OCR, reading documents of the Latvian (latviešu valoda) language with an understanding of spelling and linguistic context. This 'Best' (detailed) variant of Latvian uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed. To use this language please install the Nuget Package 'IronOcr.Languages.Latvian' from https://www.nuget.org/packages/IronOcr.Languages.Latvian/ to your Visual Studio project. Alternatively download the \"Latvian.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage LatvianBest Field Value Type Description OcrLanguage LatvianFast Latvian OCR language. Performs OCR, reading documents of the Latvian (latviešu valoda) language with an understanding of spelling and linguistic context. This 'Fast' variant of Latvian uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy. To use this language please install the Nuget Package 'IronOcr.Languages.Latvian' from https://www.nuget.org/packages/IronOcr.Languages.Latvian/ to your Visual Studio project. Alternatively download the \"Latvian.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage LatvianFast Field Value Type Description OcrLanguage Lithuanian Lithuanian OCR language. Performs OCR, reading documents of the Lithuanian (lietuvių kalba) language with an understanding of spelling and linguistic context. This Default variant of Lithuanian uses both an LTSM (Long Term Short Term neural network) and an OEM (shape recognition evolved from Tesseract 3) OCR strategies which can mesh them together to produce results which are both fast and accurate. To use this language please install the Nuget Package 'IronOcr.Languages.Lithuanian' from https://www.nuget.org/packages/IronOcr.Languages.Lithuanian/ to your Visual Studio project. Alternatively download the \"Lithuanian.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage Lithuanian Field Value Type Description OcrLanguage LithuanianBest Lithuanian OCR language. Performs OCR, reading documents of the Lithuanian (lietuvių kalba) language with an understanding of spelling and linguistic context. This 'Best' (detailed) variant of Lithuanian uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed. To use this language please install the Nuget Package 'IronOcr.Languages.Lithuanian' from https://www.nuget.org/packages/IronOcr.Languages.Lithuanian/ to your Visual Studio project. Alternatively download the \"Lithuanian.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage LithuanianBest Field Value Type Description OcrLanguage LithuanianFast Lithuanian OCR language. Performs OCR, reading documents of the Lithuanian (lietuvių kalba) language with an understanding of spelling and linguistic context. This 'Fast' variant of Lithuanian uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy. To use this language please install the Nuget Package 'IronOcr.Languages.Lithuanian' from https://www.nuget.org/packages/IronOcr.Languages.Lithuanian/ to your Visual Studio project. Alternatively download the \"Lithuanian.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage LithuanianFast Field Value Type Description OcrLanguage Luxembourgish Luxembourgish OCR language. Performs OCR, reading documents of the Luxembourgish (Lëtzebuergesch) language with an understanding of spelling and linguistic context. This Default variant of Luxembourgish uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine. To use this language please install the Nuget Package 'IronOcr.Languages.Luxembourgish' from https://www.nuget.org/packages/IronOcr.Languages.Luxembourgish/ to your Visual Studio project. Alternatively download the \"Luxembourgish.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage Luxembourgish Field Value Type Description OcrLanguage LuxembourgishBest Luxembourgish OCR language. Performs OCR, reading documents of the Luxembourgish (Lëtzebuergesch) language with an understanding of spelling and linguistic context. This 'Best' (detailed) variant of Luxembourgish uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed. To use this language please install the Nuget Package 'IronOcr.Languages.Luxembourgish' from https://www.nuget.org/packages/IronOcr.Languages.Luxembourgish/ to your Visual Studio project. Alternatively download the \"Luxembourgish.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage LuxembourgishBest Field Value Type Description OcrLanguage LuxembourgishFast Luxembourgish OCR language. Performs OCR, reading documents of the Luxembourgish (Lëtzebuergesch) language with an understanding of spelling and linguistic context. This 'Fast' variant of Luxembourgish uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy. To use this language please install the Nuget Package 'IronOcr.Languages.Luxembourgish' from https://www.nuget.org/packages/IronOcr.Languages.Luxembourgish/ to your Visual Studio project. Alternatively download the \"Luxembourgish.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage LuxembourgishFast Field Value Type Description OcrLanguage Macedonian Macedonian OCR language. Performs OCR, reading documents of the Macedonian (македонски јазик) language with an understanding of spelling and linguistic context. This Default variant of Macedonian uses both an LTSM (Long Term Short Term neural network) and an OEM (shape recognition evolved from Tesseract 3) OCR strategies which can mesh them together to produce results which are both fast and accurate. To use this language please install the Nuget Package 'IronOcr.Languages.Macedonian' from https://www.nuget.org/packages/IronOcr.Languages.Macedonian/ to your Visual Studio project. Alternatively download the \"Macedonian.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage Macedonian Field Value Type Description OcrLanguage MacedonianBest Macedonian OCR language. Performs OCR, reading documents of the Macedonian (македонски јазик) language with an understanding of spelling and linguistic context. This 'Best' (detailed) variant of Macedonian uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed. To use this language please install the Nuget Package 'IronOcr.Languages.Macedonian' from https://www.nuget.org/packages/IronOcr.Languages.Macedonian/ to your Visual Studio project. Alternatively download the \"Macedonian.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage MacedonianBest Field Value Type Description OcrLanguage MacedonianFast Macedonian OCR language. Performs OCR, reading documents of the Macedonian (македонски јазик) language with an understanding of spelling and linguistic context. This 'Fast' variant of Macedonian uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy. To use this language please install the Nuget Package 'IronOcr.Languages.Macedonian' from https://www.nuget.org/packages/IronOcr.Languages.Macedonian/ to your Visual Studio project. Alternatively download the \"Macedonian.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage MacedonianFast Field Value Type Description OcrLanguage Malay Malay OCR language. Performs OCR, reading documents of the Malay (bahasa Melayu, بهاس ملايو‎) language with an understanding of spelling and linguistic context. This Default variant of Malay uses both an LTSM (Long Term Short Term neural network) and an OEM (shape recognition evolved from Tesseract 3) OCR strategies which can mesh them together to produce results which are both fast and accurate. To use this language please install the Nuget Package 'IronOcr.Languages.Malay' from https://www.nuget.org/packages/IronOcr.Languages.Malay/ to your Visual Studio project. Alternatively download the \"Malay.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage Malay Field Value Type Description OcrLanguage Malayalam Malayalam OCR language. Performs OCR, reading documents of the Malayalam (മലയാളം) language with an understanding of spelling and linguistic context. This Default variant of Malayalam uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine. To use this language please install the Nuget Package 'IronOcr.Languages.Malayalam' from https://www.nuget.org/packages/IronOcr.Languages.Malayalam/ to your Visual Studio project. Alternatively download the \"Malayalam.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage Malayalam Field Value Type Description OcrLanguage MalayalamAlphabet Malayalam Alphabetic Script OCR dictionary. Performs OCR, identifying characters of Malayalam Alphabet (മലയാളം) languages. Alphabetic script OCR dictionaries such as this contain detailed information about the shapes letters of an alphabet, but do not utilize any other information about a language such as word-frequency and do not understand linguistic context. This has both advantages and disadvantages. This Default variant of Malayalam Alphabet uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine. To use this language please install the Nuget Package 'IronOcr.Languages.Malayalam' from https://www.nuget.org/packages/IronOcr.Languages.Malayalam/ to your Visual Studio project. Alternatively download the \"Malayalam.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage MalayalamAlphabet Field Value Type Description OcrLanguage MalayalamAlphabetBest Malayalam Alphabetic Script OCR dictionary. Performs OCR, identifying characters of Malayalam Alphabet (മലയാളം) languages. Alphabetic script OCR dictionaries such as this contain detailed information about the shapes letters of an alphabet, but do not utilize any other information about a language such as word-frequency and do not understand linguistic context. This has both advantages and disadvantages. This 'Best' (detailed) variant of Malayalam Alphabet uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed. To use this language please install the Nuget Package 'IronOcr.Languages.Malayalam' from https://www.nuget.org/packages/IronOcr.Languages.Malayalam/ to your Visual Studio project. Alternatively download the \"Malayalam.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage MalayalamAlphabetBest Field Value Type Description OcrLanguage MalayalamAlphabetFast Malayalam Alphabetic Script OCR dictionary. Performs OCR, identifying characters of Malayalam Alphabet (മലയാളം) languages. Alphabetic script OCR dictionaries such as this contain detailed information about the shapes letters of an alphabet, but do not utilize any other information about a language such as word-frequency and do not understand linguistic context. This has both advantages and disadvantages. This 'Fast' variant of Malayalam Alphabet uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy. To use this language please install the Nuget Package 'IronOcr.Languages.Malayalam' from https://www.nuget.org/packages/IronOcr.Languages.Malayalam/ to your Visual Studio project. Alternatively download the \"Malayalam.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage MalayalamAlphabetFast Field Value Type Description OcrLanguage MalayalamBest Malayalam OCR language. Performs OCR, reading documents of the Malayalam (മലയാളം) language with an understanding of spelling and linguistic context. This 'Best' (detailed) variant of Malayalam uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed. To use this language please install the Nuget Package 'IronOcr.Languages.Malayalam' from https://www.nuget.org/packages/IronOcr.Languages.Malayalam/ to your Visual Studio project. Alternatively download the \"Malayalam.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage MalayalamBest Field Value Type Description OcrLanguage MalayalamFast Malayalam OCR language. Performs OCR, reading documents of the Malayalam (മലയാളം) language with an understanding of spelling and linguistic context. This 'Fast' variant of Malayalam uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy. To use this language please install the Nuget Package 'IronOcr.Languages.Malayalam' from https://www.nuget.org/packages/IronOcr.Languages.Malayalam/ to your Visual Studio project. Alternatively download the \"Malayalam.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage MalayalamFast Field Value Type Description OcrLanguage MalayBest Malay OCR language. Performs OCR, reading documents of the Malay (bahasa Melayu, بهاس ملايو‎) language with an understanding of spelling and linguistic context. This 'Best' (detailed) variant of Malay uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed. To use this language please install the Nuget Package 'IronOcr.Languages.Malay' from https://www.nuget.org/packages/IronOcr.Languages.Malay/ to your Visual Studio project. Alternatively download the \"Malay.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage MalayBest Field Value Type Description OcrLanguage MalayFast Malay OCR language. Performs OCR, reading documents of the Malay (bahasa Melayu, بهاس ملايو‎) language with an understanding of spelling and linguistic context. This 'Fast' variant of Malay uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy. To use this language please install the Nuget Package 'IronOcr.Languages.Malay' from https://www.nuget.org/packages/IronOcr.Languages.Malay/ to your Visual Studio project. Alternatively download the \"Malay.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage MalayFast Field Value Type Description OcrLanguage Maltese Maltese OCR language. Performs OCR, reading documents of the Maltese (Malti) language with an understanding of spelling and linguistic context. This Default variant of Maltese uses both an LTSM (Long Term Short Term neural network) and an OEM (shape recognition evolved from Tesseract 3) OCR strategies which can mesh them together to produce results which are both fast and accurate. To use this language please install the Nuget Package 'IronOcr.Languages.Maltese' from https://www.nuget.org/packages/IronOcr.Languages.Maltese/ to your Visual Studio project. Alternatively download the \"Maltese.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage Maltese Field Value Type Description OcrLanguage MalteseBest Maltese OCR language. Performs OCR, reading documents of the Maltese (Malti) language with an understanding of spelling and linguistic context. This 'Best' (detailed) variant of Maltese uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed. To use this language please install the Nuget Package 'IronOcr.Languages.Maltese' from https://www.nuget.org/packages/IronOcr.Languages.Maltese/ to your Visual Studio project. Alternatively download the \"Maltese.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage MalteseBest Field Value Type Description OcrLanguage MalteseFast Maltese OCR language. Performs OCR, reading documents of the Maltese (Malti) language with an understanding of spelling and linguistic context. This 'Fast' variant of Maltese uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy. To use this language please install the Nuget Package 'IronOcr.Languages.Maltese' from https://www.nuget.org/packages/IronOcr.Languages.Maltese/ to your Visual Studio project. Alternatively download the \"Maltese.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage MalteseFast Field Value Type Description OcrLanguage Maori Maori OCR language. Performs OCR, reading documents of the Maori (te reo Māori) language with an understanding of spelling and linguistic context. This Default variant of Maori uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine. To use this language please install the Nuget Package 'IronOcr.Languages.Maori' from https://www.nuget.org/packages/IronOcr.Languages.Maori/ to your Visual Studio project. Alternatively download the \"Maori.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage Maori Field Value Type Description OcrLanguage MaoriBest Maori OCR language. Performs OCR, reading documents of the Maori (te reo Māori) language with an understanding of spelling and linguistic context. This 'Best' (detailed) variant of Maori uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed. To use this language please install the Nuget Package 'IronOcr.Languages.Maori' from https://www.nuget.org/packages/IronOcr.Languages.Maori/ to your Visual Studio project. Alternatively download the \"Maori.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage MaoriBest Field Value Type Description OcrLanguage MaoriFast Maori OCR language. Performs OCR, reading documents of the Maori (te reo Māori) language with an understanding of spelling and linguistic context. This 'Fast' variant of Maori uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy. To use this language please install the Nuget Package 'IronOcr.Languages.Maori' from https://www.nuget.org/packages/IronOcr.Languages.Maori/ to your Visual Studio project. Alternatively download the \"Maori.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage MaoriFast Field Value Type Description OcrLanguage Marathi Marathi OCR language. Performs OCR, reading documents of the Marathi (मराठी) language with an understanding of spelling and linguistic context. This Default variant of Marathi uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine. To use this language please install the Nuget Package 'IronOcr.Languages.Marathi' from https://www.nuget.org/packages/IronOcr.Languages.Marathi/ to your Visual Studio project. Alternatively download the \"Marathi.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage Marathi Field Value Type Description OcrLanguage MarathiBest Marathi OCR language. Performs OCR, reading documents of the Marathi (मराठी) language with an understanding of spelling and linguistic context. This 'Best' (detailed) variant of Marathi uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed. To use this language please install the Nuget Package 'IronOcr.Languages.Marathi' from https://www.nuget.org/packages/IronOcr.Languages.Marathi/ to your Visual Studio project. Alternatively download the \"Marathi.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage MarathiBest Field Value Type Description OcrLanguage MarathiFast Marathi OCR language. Performs OCR, reading documents of the Marathi (मराठी) language with an understanding of spelling and linguistic context. This 'Fast' variant of Marathi uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy. To use this language please install the Nuget Package 'IronOcr.Languages.Marathi' from https://www.nuget.org/packages/IronOcr.Languages.Marathi/ to your Visual Studio project. Alternatively download the \"Marathi.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage MarathiFast Field Value Type Description OcrLanguage MICR MICR OCR language. Performs OCR, reading documents of the MICR (Magnetic Ink Character Recognition, MICR Cheque Encoding) language with an understanding of spelling and linguistic context. This MICR OCR language pack uses only an OEM (shape recognition evolved from Tesseract 3) Tesseract OCR engine. To use this language please install the Nuget Package 'IronOcr.Languages.MICR' from https://www.nuget.org/packages/IronOcr.Languages.MICR/ to your Visual Studio project. Alternatively download the \"MICR.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage MICR Field Value Type Description OcrLanguage MiddleEnglish Middle English OCR language. Performs OCR, reading documents of the Middle English [English (1100-1500 AD)] language with an understanding of spelling and linguistic context. This Default variant of Middle English uses both an LTSM (Long Term Short Term neural network) and an OEM (shape recognition evolved from Tesseract 3) OCR strategies which can mesh them together to produce results which are both fast and accurate. To use this language please install the Nuget Package 'IronOcr.Languages.MiddleEnglish' from https://www.nuget.org/packages/IronOcr.Languages.MiddleEnglish/ to your Visual Studio project. Alternatively download the \"MiddleEnglish.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage MiddleEnglish Field Value Type Description OcrLanguage MiddleEnglishBest Middle English OCR language. Performs OCR, reading documents of the Middle English [English (1100-1500 AD)] language with an understanding of spelling and linguistic context. This 'Best' (detailed) variant of Middle English uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed. To use this language please install the Nuget Package 'IronOcr.Languages.MiddleEnglish' from https://www.nuget.org/packages/IronOcr.Languages.MiddleEnglish/ to your Visual Studio project. Alternatively download the \"MiddleEnglish.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage MiddleEnglishBest Field Value Type Description OcrLanguage MiddleEnglishFast Middle English OCR language. Performs OCR, reading documents of the Middle English [English (1100-1500 AD)] language with an understanding of spelling and linguistic context. This 'Fast' variant of Middle English uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy. To use this language please install the Nuget Package 'IronOcr.Languages.MiddleEnglish' from https://www.nuget.org/packages/IronOcr.Languages.MiddleEnglish/ to your Visual Studio project. Alternatively download the \"MiddleEnglish.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage MiddleEnglishFast Field Value Type Description OcrLanguage MiddleFrench Middle French OCR language. Performs OCR, reading documents of the Middle French [Moyen Français,Middle French (ca. 1400-1600 AD)] language with an understanding of spelling and linguistic context. This Default variant of Middle French uses both an LTSM (Long Term Short Term neural network) and an OEM (shape recognition evolved from Tesseract 3) OCR strategies which can mesh them together to produce results which are both fast and accurate. To use this language please install the Nuget Package 'IronOcr.Languages.MiddleFrench' from https://www.nuget.org/packages/IronOcr.Languages.MiddleFrench/ to your Visual Studio project. Alternatively download the \"MiddleFrench.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage MiddleFrench Field Value Type Description OcrLanguage MiddleFrenchBest Middle French OCR language. Performs OCR, reading documents of the Middle French [Moyen Français,Middle French (ca. 1400-1600 AD)] language with an understanding of spelling and linguistic context. This 'Best' (detailed) variant of Middle French uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed. To use this language please install the Nuget Package 'IronOcr.Languages.MiddleFrench' from https://www.nuget.org/packages/IronOcr.Languages.MiddleFrench/ to your Visual Studio project. Alternatively download the \"MiddleFrench.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage MiddleFrenchBest Field Value Type Description OcrLanguage MiddleFrenchFast Middle French OCR language. Performs OCR, reading documents of the Middle French [Moyen Français,Middle French (ca. 1400-1600 AD)] language with an understanding of spelling and linguistic context. This 'Fast' variant of Middle French uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy. To use this language please install the Nuget Package 'IronOcr.Languages.MiddleFrench' from https://www.nuget.org/packages/IronOcr.Languages.MiddleFrench/ to your Visual Studio project. Alternatively download the \"MiddleFrench.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage MiddleFrenchFast Field Value Type Description OcrLanguage Mongolian Mongolian OCR language. Performs OCR, reading documents of the Mongolian (монгол) language with an understanding of spelling and linguistic context. This Default variant of Mongolian uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine. To use this language please install the Nuget Package 'IronOcr.Languages.Mongolian' from https://www.nuget.org/packages/IronOcr.Languages.Mongolian/ to your Visual Studio project. Alternatively download the \"Mongolian.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage Mongolian Field Value Type Description OcrLanguage MongolianBest Mongolian OCR language. Performs OCR, reading documents of the Mongolian (монгол) language with an understanding of spelling and linguistic context. This 'Best' (detailed) variant of Mongolian uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed. To use this language please install the Nuget Package 'IronOcr.Languages.Mongolian' from https://www.nuget.org/packages/IronOcr.Languages.Mongolian/ to your Visual Studio project. Alternatively download the \"Mongolian.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage MongolianBest Field Value Type Description OcrLanguage MongolianFast Mongolian OCR language. Performs OCR, reading documents of the Mongolian (монгол) language with an understanding of spelling and linguistic context. This 'Fast' variant of Mongolian uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy. To use this language please install the Nuget Package 'IronOcr.Languages.Mongolian' from https://www.nuget.org/packages/IronOcr.Languages.Mongolian/ to your Visual Studio project. Alternatively download the \"Mongolian.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage MongolianFast Field Value Type Description OcrLanguage Myanmar Myanmar OCR language. Performs OCR, reading documents of the Myanmar (Burmese ,ဗမာစာ) language with an understanding of spelling and linguistic context. This Default variant of Myanmar uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine. To use this language please install the Nuget Package 'IronOcr.Languages.Myanmar' from https://www.nuget.org/packages/IronOcr.Languages.Myanmar/ to your Visual Studio project. Alternatively download the \"Myanmar.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage Myanmar Field Value Type Description OcrLanguage MyanmarAlphabet Myanmar Alphabetic Script OCR dictionary. Performs OCR, identifying characters of Myanmar Alphabet (Burmese ,ဗမာစာ) languages. Alphabetic script OCR dictionaries such as this contain detailed information about the shapes letters of an alphabet, but do not utilize any other information about a language such as word-frequency and do not understand linguistic context. This has both advantages and disadvantages. This Default variant of Myanmar Alphabet uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine. To use this language please install the Nuget Package 'IronOcr.Languages.Myanmar' from https://www.nuget.org/packages/IronOcr.Languages.Myanmar/ to your Visual Studio project. Alternatively download the \"Myanmar.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage MyanmarAlphabet Field Value Type Description OcrLanguage MyanmarAlphabetBest Myanmar Alphabetic Script OCR dictionary. Performs OCR, identifying characters of Myanmar Alphabet (Burmese ,ဗမာစာ) languages. Alphabetic script OCR dictionaries such as this contain detailed information about the shapes letters of an alphabet, but do not utilize any other information about a language such as word-frequency and do not understand linguistic context. This has both advantages and disadvantages. This 'Best' (detailed) variant of Myanmar Alphabet uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed. To use this language please install the Nuget Package 'IronOcr.Languages.Myanmar' from https://www.nuget.org/packages/IronOcr.Languages.Myanmar/ to your Visual Studio project. Alternatively download the \"Myanmar.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage MyanmarAlphabetBest Field Value Type Description OcrLanguage MyanmarAlphabetFast Myanmar Alphabetic Script OCR dictionary. Performs OCR, identifying characters of Myanmar Alphabet (Burmese ,ဗမာစာ) languages. Alphabetic script OCR dictionaries such as this contain detailed information about the shapes letters of an alphabet, but do not utilize any other information about a language such as word-frequency and do not understand linguistic context. This has both advantages and disadvantages. This 'Fast' variant of Myanmar Alphabet uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy. To use this language please install the Nuget Package 'IronOcr.Languages.Myanmar' from https://www.nuget.org/packages/IronOcr.Languages.Myanmar/ to your Visual Studio project. Alternatively download the \"Myanmar.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage MyanmarAlphabetFast Field Value Type Description OcrLanguage MyanmarBest Myanmar OCR language. Performs OCR, reading documents of the Myanmar (Burmese ,ဗမာစာ) language with an understanding of spelling and linguistic context. This 'Best' (detailed) variant of Myanmar uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed. To use this language please install the Nuget Package 'IronOcr.Languages.Myanmar' from https://www.nuget.org/packages/IronOcr.Languages.Myanmar/ to your Visual Studio project. Alternatively download the \"Myanmar.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage MyanmarBest Field Value Type Description OcrLanguage MyanmarFast Myanmar OCR language. Performs OCR, reading documents of the Myanmar (Burmese ,ဗမာစာ) language with an understanding of spelling and linguistic context. This 'Fast' variant of Myanmar uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy. To use this language please install the Nuget Package 'IronOcr.Languages.Myanmar' from https://www.nuget.org/packages/IronOcr.Languages.Myanmar/ to your Visual Studio project. Alternatively download the \"Myanmar.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage MyanmarFast Field Value Type Description OcrLanguage Nepali Nepali OCR language. Performs OCR, reading documents of the Nepali (नेपाली) language with an understanding of spelling and linguistic context. This Default variant of Nepali uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine. To use this language please install the Nuget Package 'IronOcr.Languages.Nepali' from https://www.nuget.org/packages/IronOcr.Languages.Nepali/ to your Visual Studio project. Alternatively download the \"Nepali.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage Nepali Field Value Type Description OcrLanguage NepaliBest Nepali OCR language. Performs OCR, reading documents of the Nepali (नेपाली) language with an understanding of spelling and linguistic context. This 'Best' (detailed) variant of Nepali uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed. To use this language please install the Nuget Package 'IronOcr.Languages.Nepali' from https://www.nuget.org/packages/IronOcr.Languages.Nepali/ to your Visual Studio project. Alternatively download the \"Nepali.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage NepaliBest Field Value Type Description OcrLanguage NepaliFast Nepali OCR language. Performs OCR, reading documents of the Nepali (नेपाली) language with an understanding of spelling and linguistic context. This 'Fast' variant of Nepali uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy. To use this language please install the Nuget Package 'IronOcr.Languages.Nepali' from https://www.nuget.org/packages/IronOcr.Languages.Nepali/ to your Visual Studio project. Alternatively download the \"Nepali.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage NepaliFast Field Value Type Description OcrLanguage NorthernKurdish Northern Kurdish OCR language. Performs OCR, reading documents of the Northern Kurdish (Kurmanji, کورمانجی ,Kurmancî‎) language with an understanding of spelling and linguistic context. This Default variant of Northern Kurdish uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine. To use this language please install the Nuget Package 'IronOcr.Languages.NorthernKurdish' from https://www.nuget.org/packages/IronOcr.Languages.NorthernKurdish/ to your Visual Studio project. Alternatively download the \"NorthernKurdish.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage NorthernKurdish Field Value Type Description OcrLanguage NorthernKurdishBest Northern Kurdish OCR language. Performs OCR, reading documents of the Northern Kurdish (Kurmanji, کورمانجی ,Kurmancî‎) language with an understanding of spelling and linguistic context. This 'Best' (detailed) variant of Northern Kurdish uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed. To use this language please install the Nuget Package 'IronOcr.Languages.NorthernKurdish' from https://www.nuget.org/packages/IronOcr.Languages.NorthernKurdish/ to your Visual Studio project. Alternatively download the \"NorthernKurdish.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage NorthernKurdishBest Field Value Type Description OcrLanguage NorthernKurdishFast Northern Kurdish OCR language. Performs OCR, reading documents of the Northern Kurdish (Kurmanji, کورمانجی ,Kurmancî‎) language with an understanding of spelling and linguistic context. This 'Fast' variant of Northern Kurdish uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy. To use this language please install the Nuget Package 'IronOcr.Languages.NorthernKurdish' from https://www.nuget.org/packages/IronOcr.Languages.NorthernKurdish/ to your Visual Studio project. Alternatively download the \"NorthernKurdish.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage NorthernKurdishFast Field Value Type Description OcrLanguage Norwegian Norwegian OCR language. Performs OCR, reading documents of the Norwegian (Norsk) language with an understanding of spelling and linguistic context. This Default variant of Norwegian uses both an LTSM (Long Term Short Term neural network) and an OEM (shape recognition evolved from Tesseract 3) OCR strategies which can mesh them together to produce results which are both fast and accurate. To use this language please install the Nuget Package 'IronOcr.Languages.Norwegian' from https://www.nuget.org/packages/IronOcr.Languages.Norwegian/ to your Visual Studio project. Alternatively download the \"Norwegian.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage Norwegian Field Value Type Description OcrLanguage NorwegianBest Norwegian OCR language. Performs OCR, reading documents of the Norwegian (Norsk) language with an understanding of spelling and linguistic context. This 'Best' (detailed) variant of Norwegian uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed. To use this language please install the Nuget Package 'IronOcr.Languages.Norwegian' from https://www.nuget.org/packages/IronOcr.Languages.Norwegian/ to your Visual Studio project. Alternatively download the \"Norwegian.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage NorwegianBest Field Value Type Description OcrLanguage NorwegianFast Norwegian OCR language. Performs OCR, reading documents of the Norwegian (Norsk) language with an understanding of spelling and linguistic context. This 'Fast' variant of Norwegian uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy. To use this language please install the Nuget Package 'IronOcr.Languages.Norwegian' from https://www.nuget.org/packages/IronOcr.Languages.Norwegian/ to your Visual Studio project. Alternatively download the \"Norwegian.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage NorwegianFast Field Value Type Description OcrLanguage Occitan Occitan OCR language. Performs OCR, reading documents of the Occitan (occitan, lenga d'òc) language with an understanding of spelling and linguistic context. This Default variant of Occitan uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine. To use this language please install the Nuget Package 'IronOcr.Languages.Occitan' from https://www.nuget.org/packages/IronOcr.Languages.Occitan/ to your Visual Studio project. Alternatively download the \"Occitan.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage Occitan Field Value Type Description OcrLanguage OccitanBest Occitan OCR language. Performs OCR, reading documents of the Occitan (occitan, lenga d'òc) language with an understanding of spelling and linguistic context. This 'Best' (detailed) variant of Occitan uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed. To use this language please install the Nuget Package 'IronOcr.Languages.Occitan' from https://www.nuget.org/packages/IronOcr.Languages.Occitan/ to your Visual Studio project. Alternatively download the \"Occitan.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage OccitanBest Field Value Type Description OcrLanguage OccitanFast Occitan OCR language. Performs OCR, reading documents of the Occitan (occitan, lenga d'òc) language with an understanding of spelling and linguistic context. This 'Fast' variant of Occitan uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy. To use this language please install the Nuget Package 'IronOcr.Languages.Occitan' from https://www.nuget.org/packages/IronOcr.Languages.Occitan/ to your Visual Studio project. Alternatively download the \"Occitan.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage OccitanFast Field Value Type Description OcrLanguage Oriya Oriya OCR language. Performs OCR, reading documents of the Oriya (ଓଡ଼ିଆ) language with an understanding of spelling and linguistic context. This Default variant of Oriya uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine. To use this language please install the Nuget Package 'IronOcr.Languages.Oriya' from https://www.nuget.org/packages/IronOcr.Languages.Oriya/ to your Visual Studio project. Alternatively download the \"Oriya.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage Oriya Field Value Type Description OcrLanguage OriyaAlphabet Oriya Alphabetic Script OCR dictionary. Performs OCR, identifying characters of Oriya Alphabet (ଓଡ଼ିଆ) languages. Alphabetic script OCR dictionaries such as this contain detailed information about the shapes letters of an alphabet, but do not utilize any other information about a language such as word-frequency and do not understand linguistic context. This has both advantages and disadvantages. This Default variant of Oriya Alphabet uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine. To use this language please install the Nuget Package 'IronOcr.Languages.Oriya' from https://www.nuget.org/packages/IronOcr.Languages.Oriya/ to your Visual Studio project. Alternatively download the \"Oriya.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage OriyaAlphabet Field Value Type Description OcrLanguage OriyaAlphabetBest Oriya Alphabetic Script OCR dictionary. Performs OCR, identifying characters of Oriya Alphabet (ଓଡ଼ିଆ) languages. Alphabetic script OCR dictionaries such as this contain detailed information about the shapes letters of an alphabet, but do not utilize any other information about a language such as word-frequency and do not understand linguistic context. This has both advantages and disadvantages. This 'Best' (detailed) variant of Oriya Alphabet uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed. To use this language please install the Nuget Package 'IronOcr.Languages.Oriya' from https://www.nuget.org/packages/IronOcr.Languages.Oriya/ to your Visual Studio project. Alternatively download the \"Oriya.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage OriyaAlphabetBest Field Value Type Description OcrLanguage OriyaAlphabetFast Oriya Alphabetic Script OCR dictionary. Performs OCR, identifying characters of Oriya Alphabet (ଓଡ଼ିଆ) languages. Alphabetic script OCR dictionaries such as this contain detailed information about the shapes letters of an alphabet, but do not utilize any other information about a language such as word-frequency and do not understand linguistic context. This has both advantages and disadvantages. This 'Fast' variant of Oriya Alphabet uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy. To use this language please install the Nuget Package 'IronOcr.Languages.Oriya' from https://www.nuget.org/packages/IronOcr.Languages.Oriya/ to your Visual Studio project. Alternatively download the \"Oriya.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage OriyaAlphabetFast Field Value Type Description OcrLanguage OriyaBest Oriya OCR language. Performs OCR, reading documents of the Oriya (ଓଡ଼ିଆ) language with an understanding of spelling and linguistic context. This 'Best' (detailed) variant of Oriya uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed. To use this language please install the Nuget Package 'IronOcr.Languages.Oriya' from https://www.nuget.org/packages/IronOcr.Languages.Oriya/ to your Visual Studio project. Alternatively download the \"Oriya.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage OriyaBest Field Value Type Description OcrLanguage OriyaFast Oriya OCR language. Performs OCR, reading documents of the Oriya (ଓଡ଼ିଆ) language with an understanding of spelling and linguistic context. This 'Fast' variant of Oriya uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy. To use this language please install the Nuget Package 'IronOcr.Languages.Oriya' from https://www.nuget.org/packages/IronOcr.Languages.Oriya/ to your Visual Studio project. Alternatively download the \"Oriya.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage OriyaFast Field Value Type Description OcrLanguage Panjabi Panjabi OCR language. Performs OCR, reading documents of the Panjabi (ਪੰਜਾਬੀ, پنجابی‎) language with an understanding of spelling and linguistic context. This Default variant of Panjabi uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine. To use this language please install the Nuget Package 'IronOcr.Languages.Panjabi' from https://www.nuget.org/packages/IronOcr.Languages.Panjabi/ to your Visual Studio project. Alternatively download the \"Panjabi.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage Panjabi Field Value Type Description OcrLanguage PanjabiBest Panjabi OCR language. Performs OCR, reading documents of the Panjabi (ਪੰਜਾਬੀ, پنجابی‎) language with an understanding of spelling and linguistic context. This 'Best' (detailed) variant of Panjabi uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed. To use this language please install the Nuget Package 'IronOcr.Languages.Panjabi' from https://www.nuget.org/packages/IronOcr.Languages.Panjabi/ to your Visual Studio project. Alternatively download the \"Panjabi.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage PanjabiBest Field Value Type Description OcrLanguage PanjabiFast Panjabi OCR language. Performs OCR, reading documents of the Panjabi (ਪੰਜਾਬੀ, پنجابی‎) language with an understanding of spelling and linguistic context. This 'Fast' variant of Panjabi uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy. To use this language please install the Nuget Package 'IronOcr.Languages.Panjabi' from https://www.nuget.org/packages/IronOcr.Languages.Panjabi/ to your Visual Studio project. Alternatively download the \"Panjabi.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage PanjabiFast Field Value Type Description OcrLanguage Pashto Pashto OCR language. Performs OCR, reading documents of the Pashto (پښتو) language with an understanding of spelling and linguistic context. This Default variant of Pashto uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine. To use this language please install the Nuget Package 'IronOcr.Languages.Pashto' from https://www.nuget.org/packages/IronOcr.Languages.Pashto/ to your Visual Studio project. Alternatively download the \"Pashto.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage Pashto Field Value Type Description OcrLanguage PashtoBest Pashto OCR language. Performs OCR, reading documents of the Pashto (پښتو) language with an understanding of spelling and linguistic context. This 'Best' (detailed) variant of Pashto uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed. To use this language please install the Nuget Package 'IronOcr.Languages.Pashto' from https://www.nuget.org/packages/IronOcr.Languages.Pashto/ to your Visual Studio project. Alternatively download the \"Pashto.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage PashtoBest Field Value Type Description OcrLanguage PashtoFast Pashto OCR language. Performs OCR, reading documents of the Pashto (پښتو) language with an understanding of spelling and linguistic context. This 'Fast' variant of Pashto uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy. To use this language please install the Nuget Package 'IronOcr.Languages.Pashto' from https://www.nuget.org/packages/IronOcr.Languages.Pashto/ to your Visual Studio project. Alternatively download the \"Pashto.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage PashtoFast Field Value Type Description OcrLanguage Persian Persian OCR language. Performs OCR, reading documents of the Persian (فارسی) language with an understanding of spelling and linguistic context. This Default variant of Persian uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine. To use this language please install the Nuget Package 'IronOcr.Languages.Persian' from https://www.nuget.org/packages/IronOcr.Languages.Persian/ to your Visual Studio project. Alternatively download the \"Persian.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage Persian Field Value Type Description OcrLanguage PersianBest Persian OCR language. Performs OCR, reading documents of the Persian (فارسی) language with an understanding of spelling and linguistic context. This 'Best' (detailed) variant of Persian uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed. To use this language please install the Nuget Package 'IronOcr.Languages.Persian' from https://www.nuget.org/packages/IronOcr.Languages.Persian/ to your Visual Studio project. Alternatively download the \"Persian.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage PersianBest Field Value Type Description OcrLanguage PersianFast Persian OCR language. Performs OCR, reading documents of the Persian (فارسی) language with an understanding of spelling and linguistic context. This 'Fast' variant of Persian uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy. To use this language please install the Nuget Package 'IronOcr.Languages.Persian' from https://www.nuget.org/packages/IronOcr.Languages.Persian/ to your Visual Studio project. Alternatively download the \"Persian.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage PersianFast Field Value Type Description OcrLanguage Polish Polish OCR language. Performs OCR, reading documents of the Polish (język polski, polszczyzna) language with an understanding of spelling and linguistic context. This Default variant of Polish uses both an LTSM (Long Term Short Term neural network) and an OEM (shape recognition evolved from Tesseract 3) OCR strategies which can mesh them together to produce results which are both fast and accurate. To use this language please install the Nuget Package 'IronOcr.Languages.Polish' from https://www.nuget.org/packages/IronOcr.Languages.Polish/ to your Visual Studio project. Alternatively download the \"Polish.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage Polish Field Value Type Description OcrLanguage PolishBest Polish OCR language. Performs OCR, reading documents of the Polish (język polski, polszczyzna) language with an understanding of spelling and linguistic context. This 'Best' (detailed) variant of Polish uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed. To use this language please install the Nuget Package 'IronOcr.Languages.Polish' from https://www.nuget.org/packages/IronOcr.Languages.Polish/ to your Visual Studio project. Alternatively download the \"Polish.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage PolishBest Field Value Type Description OcrLanguage PolishFast Polish OCR language. Performs OCR, reading documents of the Polish (język polski, polszczyzna) language with an understanding of spelling and linguistic context. This 'Fast' variant of Polish uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy. To use this language please install the Nuget Package 'IronOcr.Languages.Polish' from https://www.nuget.org/packages/IronOcr.Languages.Polish/ to your Visual Studio project. Alternatively download the \"Polish.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage PolishFast Field Value Type Description OcrLanguage Portuguese Portuguese OCR language. Performs OCR, reading documents of the Portuguese (português) language with an understanding of spelling and linguistic context. This Default variant of Portuguese uses both an LTSM (Long Term Short Term neural network) and an OEM (shape recognition evolved from Tesseract 3) OCR strategies which can mesh them together to produce results which are both fast and accurate. To use this language please install the Nuget Package 'IronOcr.Languages.Portuguese' from https://www.nuget.org/packages/IronOcr.Languages.Portuguese/ to your Visual Studio project. Alternatively download the \"Portuguese.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage Portuguese Field Value Type Description OcrLanguage PortugueseBest Portuguese OCR language. Performs OCR, reading documents of the Portuguese (português) language with an understanding of spelling and linguistic context. This 'Best' (detailed) variant of Portuguese uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed. To use this language please install the Nuget Package 'IronOcr.Languages.Portuguese' from https://www.nuget.org/packages/IronOcr.Languages.Portuguese/ to your Visual Studio project. Alternatively download the \"Portuguese.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage PortugueseBest Field Value Type Description OcrLanguage PortugueseFast Portuguese OCR language. Performs OCR, reading documents of the Portuguese (português) language with an understanding of spelling and linguistic context. This 'Fast' variant of Portuguese uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy. To use this language please install the Nuget Package 'IronOcr.Languages.Portuguese' from https://www.nuget.org/packages/IronOcr.Languages.Portuguese/ to your Visual Studio project. Alternatively download the \"Portuguese.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage PortugueseFast Field Value Type Description OcrLanguage Quechua Quechua OCR language. Performs OCR, reading documents of the Quechua (Runa Simi, Kichwa) language with an understanding of spelling and linguistic context. This Default variant of Quechua uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine. To use this language please install the Nuget Package 'IronOcr.Languages.Quechua' from https://www.nuget.org/packages/IronOcr.Languages.Quechua/ to your Visual Studio project. Alternatively download the \"Quechua.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage Quechua Field Value Type Description OcrLanguage QuechuaBest Quechua OCR language. Performs OCR, reading documents of the Quechua (Runa Simi, Kichwa) language with an understanding of spelling and linguistic context. This 'Best' (detailed) variant of Quechua uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed. To use this language please install the Nuget Package 'IronOcr.Languages.Quechua' from https://www.nuget.org/packages/IronOcr.Languages.Quechua/ to your Visual Studio project. Alternatively download the \"Quechua.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage QuechuaBest Field Value Type Description OcrLanguage QuechuaFast Quechua OCR language. Performs OCR, reading documents of the Quechua (Runa Simi, Kichwa) language with an understanding of spelling and linguistic context. This 'Fast' variant of Quechua uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy. To use this language please install the Nuget Package 'IronOcr.Languages.Quechua' from https://www.nuget.org/packages/IronOcr.Languages.Quechua/ to your Visual Studio project. Alternatively download the \"Quechua.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage QuechuaFast Field Value Type Description OcrLanguage Romanian Romanian OCR language. Performs OCR, reading documents of the Romanian (limba română) language with an understanding of spelling and linguistic context. This Default variant of Romanian uses both an LTSM (Long Term Short Term neural network) and an OEM (shape recognition evolved from Tesseract 3) OCR strategies which can mesh them together to produce results which are both fast and accurate. To use this language please install the Nuget Package 'IronOcr.Languages.Romanian' from https://www.nuget.org/packages/IronOcr.Languages.Romanian/ to your Visual Studio project. Alternatively download the \"Romanian.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage Romanian Field Value Type Description OcrLanguage RomanianBest Romanian OCR language. Performs OCR, reading documents of the Romanian (limba română) language with an understanding of spelling and linguistic context. This 'Best' (detailed) variant of Romanian uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed. To use this language please install the Nuget Package 'IronOcr.Languages.Romanian' from https://www.nuget.org/packages/IronOcr.Languages.Romanian/ to your Visual Studio project. Alternatively download the \"Romanian.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage RomanianBest Field Value Type Description OcrLanguage RomanianFast Romanian OCR language. Performs OCR, reading documents of the Romanian (limba română) language with an understanding of spelling and linguistic context. This 'Fast' variant of Romanian uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy. To use this language please install the Nuget Package 'IronOcr.Languages.Romanian' from https://www.nuget.org/packages/IronOcr.Languages.Romanian/ to your Visual Studio project. Alternatively download the \"Romanian.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage RomanianFast Field Value Type Description OcrLanguage Russian Russian OCR language. Performs OCR, reading documents of the Russian (русский язык) language with an understanding of spelling and linguistic context. This Default variant of Russian uses both an LTSM (Long Term Short Term neural network) and an OEM (shape recognition evolved from Tesseract 3) OCR strategies which can mesh them together to produce results which are both fast and accurate. To use this language please install the Nuget Package 'IronOcr.Languages.Russian' from https://www.nuget.org/packages/IronOcr.Languages.Russian/ to your Visual Studio project. Alternatively download the \"Russian.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage Russian Field Value Type Description OcrLanguage RussianBest Russian OCR language. Performs OCR, reading documents of the Russian (русский язык) language with an understanding of spelling and linguistic context. This 'Best' (detailed) variant of Russian uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed. To use this language please install the Nuget Package 'IronOcr.Languages.Russian' from https://www.nuget.org/packages/IronOcr.Languages.Russian/ to your Visual Studio project. Alternatively download the \"Russian.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage RussianBest Field Value Type Description OcrLanguage RussianFast Russian OCR language. Performs OCR, reading documents of the Russian (русский язык) language with an understanding of spelling and linguistic context. This 'Fast' variant of Russian uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy. To use this language please install the Nuget Package 'IronOcr.Languages.Russian' from https://www.nuget.org/packages/IronOcr.Languages.Russian/ to your Visual Studio project. Alternatively download the \"Russian.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage RussianFast Field Value Type Description OcrLanguage Sanskrit Sanskrit OCR language. Performs OCR, reading documents of the Sanskrit (संस्कृतम्) language with an understanding of spelling and linguistic context. This Default variant of Sanskrit uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine. To use this language please install the Nuget Package 'IronOcr.Languages.Sanskrit' from https://www.nuget.org/packages/IronOcr.Languages.Sanskrit/ to your Visual Studio project. Alternatively download the \"Sanskrit.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage Sanskrit Field Value Type Description OcrLanguage SanskritBest Sanskrit OCR language. Performs OCR, reading documents of the Sanskrit (संस्कृतम्) language with an understanding of spelling and linguistic context. This 'Best' (detailed) variant of Sanskrit uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed. To use this language please install the Nuget Package 'IronOcr.Languages.Sanskrit' from https://www.nuget.org/packages/IronOcr.Languages.Sanskrit/ to your Visual Studio project. Alternatively download the \"Sanskrit.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage SanskritBest Field Value Type Description OcrLanguage SanskritFast Sanskrit OCR language. Performs OCR, reading documents of the Sanskrit (संस्कृतम्) language with an understanding of spelling and linguistic context. This 'Fast' variant of Sanskrit uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy. To use this language please install the Nuget Package 'IronOcr.Languages.Sanskrit' from https://www.nuget.org/packages/IronOcr.Languages.Sanskrit/ to your Visual Studio project. Alternatively download the \"Sanskrit.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage SanskritFast Field Value Type Description OcrLanguage ScottishGaelic Scottish Gaelic OCR language. Performs OCR, reading documents of the Scottish Gaelic (Gàidhlig) language with an understanding of spelling and linguistic context. This Default variant of Scottish Gaelic uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine. To use this language please install the Nuget Package 'IronOcr.Languages.ScottishGaelic' from https://www.nuget.org/packages/IronOcr.Languages.ScottishGaelic/ to your Visual Studio project. Alternatively download the \"ScottishGaelic.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage ScottishGaelic Field Value Type Description OcrLanguage ScottishGaelicBest Scottish Gaelic OCR language. Performs OCR, reading documents of the Scottish Gaelic (Gàidhlig) language with an understanding of spelling and linguistic context. This 'Best' (detailed) variant of Scottish Gaelic uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed. To use this language please install the Nuget Package 'IronOcr.Languages.ScottishGaelic' from https://www.nuget.org/packages/IronOcr.Languages.ScottishGaelic/ to your Visual Studio project. Alternatively download the \"ScottishGaelic.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage ScottishGaelicBest Field Value Type Description OcrLanguage ScottishGaelicFast Scottish Gaelic OCR language. Performs OCR, reading documents of the Scottish Gaelic (Gàidhlig) language with an understanding of spelling and linguistic context. This 'Fast' variant of Scottish Gaelic uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy. To use this language please install the Nuget Package 'IronOcr.Languages.ScottishGaelic' from https://www.nuget.org/packages/IronOcr.Languages.ScottishGaelic/ to your Visual Studio project. Alternatively download the \"ScottishGaelic.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage ScottishGaelicFast Field Value Type Description OcrLanguage Serbian Serbian OCR language. Performs OCR, reading documents of the Serbian (српски језик) language with an understanding of spelling and linguistic context. This Default variant of Serbian uses both an LTSM (Long Term Short Term neural network) and an OEM (shape recognition evolved from Tesseract 3) OCR strategies which can mesh them together to produce results which are both fast and accurate. To use this language please install the Nuget Package 'IronOcr.Languages.Serbian' from https://www.nuget.org/packages/IronOcr.Languages.Serbian/ to your Visual Studio project. Alternatively download the \"Serbian.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage Serbian Field Value Type Description OcrLanguage SerbianBest Serbian OCR language. Performs OCR, reading documents of the Serbian (српски језик) language with an understanding of spelling and linguistic context. This 'Best' (detailed) variant of Serbian uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed. To use this language please install the Nuget Package 'IronOcr.Languages.Serbian' from https://www.nuget.org/packages/IronOcr.Languages.Serbian/ to your Visual Studio project. Alternatively download the \"Serbian.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage SerbianBest Field Value Type Description OcrLanguage SerbianFast Serbian OCR language. Performs OCR, reading documents of the Serbian (српски језик) language with an understanding of spelling and linguistic context. This 'Fast' variant of Serbian uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy. To use this language please install the Nuget Package 'IronOcr.Languages.Serbian' from https://www.nuget.org/packages/IronOcr.Languages.Serbian/ to your Visual Studio project. Alternatively download the \"Serbian.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage SerbianFast Field Value Type Description OcrLanguage SerbianLatin Serbian Latin OCR language. Performs OCR, reading documents of the Serbian (српски језик) language , using the Latin alphabet (abc...), with an understanding of spelling and linguistic context. This Default variant of Serbian Latin uses both an LTSM (Long Term Short Term neural network) and an OEM (shape recognition evolved from Tesseract 3) OCR strategies which can mesh them together to produce results which are both fast and accurate. To use this language please install the Nuget Package 'IronOcr.Languages.Serbian' from https://www.nuget.org/packages/IronOcr.Languages.Serbian/ to your Visual Studio project. Alternatively download the \"Serbian.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage SerbianLatin Field Value Type Description OcrLanguage SerbianLatinBest Serbian Latin OCR language. Performs OCR, reading documents of the Serbian (српски језик) language , using the Latin alphabet (abc...), with an understanding of spelling and linguistic context. This 'Best' (detailed) variant of Serbian Latin uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed. To use this language please install the Nuget Package 'IronOcr.Languages.Serbian' from https://www.nuget.org/packages/IronOcr.Languages.Serbian/ to your Visual Studio project. Alternatively download the \"Serbian.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage SerbianLatinBest Field Value Type Description OcrLanguage SerbianLatinFast Serbian Latin OCR language. Performs OCR, reading documents of the Serbian (српски језик) language , using the Latin alphabet (abc...), with an understanding of spelling and linguistic context. This 'Fast' variant of Serbian Latin uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy. To use this language please install the Nuget Package 'IronOcr.Languages.Serbian' from https://www.nuget.org/packages/IronOcr.Languages.Serbian/ to your Visual Studio project. Alternatively download the \"Serbian.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage SerbianLatinFast Field Value Type Description OcrLanguage Sindhi Sindhi OCR language. Performs OCR, reading documents of the Sindhi (सिन्धी, سنڌي، سندھی‎) language with an understanding of spelling and linguistic context. This Default variant of Sindhi uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine. To use this language please install the Nuget Package 'IronOcr.Languages.Sindhi' from https://www.nuget.org/packages/IronOcr.Languages.Sindhi/ to your Visual Studio project. Alternatively download the \"Sindhi.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage Sindhi Field Value Type Description OcrLanguage SindhiBest Sindhi OCR language. Performs OCR, reading documents of the Sindhi (सिन्धी, سنڌي، سندھی‎) language with an understanding of spelling and linguistic context. This 'Best' (detailed) variant of Sindhi uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed. To use this language please install the Nuget Package 'IronOcr.Languages.Sindhi' from https://www.nuget.org/packages/IronOcr.Languages.Sindhi/ to your Visual Studio project. Alternatively download the \"Sindhi.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage SindhiBest Field Value Type Description OcrLanguage SindhiFast Sindhi OCR language. Performs OCR, reading documents of the Sindhi (सिन्धी, سنڌي، سندھی‎) language with an understanding of spelling and linguistic context. This 'Fast' variant of Sindhi uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy. To use this language please install the Nuget Package 'IronOcr.Languages.Sindhi' from https://www.nuget.org/packages/IronOcr.Languages.Sindhi/ to your Visual Studio project. Alternatively download the \"Sindhi.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage SindhiFast Field Value Type Description OcrLanguage Sinhala Sinhala OCR language. Performs OCR, reading documents of the Sinhala (සිංහල) language with an understanding of spelling and linguistic context. This Default variant of Sinhala uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine. To use this language please install the Nuget Package 'IronOcr.Languages.Sinhala' from https://www.nuget.org/packages/IronOcr.Languages.Sinhala/ to your Visual Studio project. Alternatively download the \"Sinhala.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage Sinhala Field Value Type Description OcrLanguage SinhalaAlphabet Sinhala Alphabetic Script OCR dictionary. Performs OCR, identifying characters of Sinhala Alphabet (සිංහල) languages. Alphabetic script OCR dictionaries such as this contain detailed information about the shapes letters of an alphabet, but do not utilize any other information about a language such as word-frequency and do not understand linguistic context. This has both advantages and disadvantages. This Default variant of Sinhala Alphabet uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine. To use this language please install the Nuget Package 'IronOcr.Languages.Sinhala' from https://www.nuget.org/packages/IronOcr.Languages.Sinhala/ to your Visual Studio project. Alternatively download the \"Sinhala.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage SinhalaAlphabet Field Value Type Description OcrLanguage SinhalaAlphabetBest Sinhala Alphabetic Script OCR dictionary. Performs OCR, identifying characters of Sinhala Alphabet (සිංහල) languages. Alphabetic script OCR dictionaries such as this contain detailed information about the shapes letters of an alphabet, but do not utilize any other information about a language such as word-frequency and do not understand linguistic context. This has both advantages and disadvantages. This 'Best' (detailed) variant of Sinhala Alphabet uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed. To use this language please install the Nuget Package 'IronOcr.Languages.Sinhala' from https://www.nuget.org/packages/IronOcr.Languages.Sinhala/ to your Visual Studio project. Alternatively download the \"Sinhala.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage SinhalaAlphabetBest Field Value Type Description OcrLanguage SinhalaAlphabetFast Sinhala Alphabetic Script OCR dictionary. Performs OCR, identifying characters of Sinhala Alphabet (සිංහල) languages. Alphabetic script OCR dictionaries such as this contain detailed information about the shapes letters of an alphabet, but do not utilize any other information about a language such as word-frequency and do not understand linguistic context. This has both advantages and disadvantages. This 'Fast' variant of Sinhala Alphabet uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy. To use this language please install the Nuget Package 'IronOcr.Languages.Sinhala' from https://www.nuget.org/packages/IronOcr.Languages.Sinhala/ to your Visual Studio project. Alternatively download the \"Sinhala.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage SinhalaAlphabetFast Field Value Type Description OcrLanguage SinhalaBest Sinhala OCR language. Performs OCR, reading documents of the Sinhala (සිංහල) language with an understanding of spelling and linguistic context. This 'Best' (detailed) variant of Sinhala uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed. To use this language please install the Nuget Package 'IronOcr.Languages.Sinhala' from https://www.nuget.org/packages/IronOcr.Languages.Sinhala/ to your Visual Studio project. Alternatively download the \"Sinhala.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage SinhalaBest Field Value Type Description OcrLanguage SinhalaFast Sinhala OCR language. Performs OCR, reading documents of the Sinhala (සිංහල) language with an understanding of spelling and linguistic context. This 'Fast' variant of Sinhala uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy. To use this language please install the Nuget Package 'IronOcr.Languages.Sinhala' from https://www.nuget.org/packages/IronOcr.Languages.Sinhala/ to your Visual Studio project. Alternatively download the \"Sinhala.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage SinhalaFast Field Value Type Description OcrLanguage Slovak Slovak OCR language. Performs OCR, reading documents of the Slovak (slovenčina, slovenský jazyk) language with an understanding of spelling and linguistic context. This Default variant of Slovak uses both an LTSM (Long Term Short Term neural network) and an OEM (shape recognition evolved from Tesseract 3) OCR strategies which can mesh them together to produce results which are both fast and accurate. To use this language please install the Nuget Package 'IronOcr.Languages.Slovak' from https://www.nuget.org/packages/IronOcr.Languages.Slovak/ to your Visual Studio project. Alternatively download the \"Slovak.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage Slovak Field Value Type Description OcrLanguage SlovakBest Slovak OCR language. Performs OCR, reading documents of the Slovak (slovenčina, slovenský jazyk) language with an understanding of spelling and linguistic context. This 'Best' (detailed) variant of Slovak uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed. To use this language please install the Nuget Package 'IronOcr.Languages.Slovak' from https://www.nuget.org/packages/IronOcr.Languages.Slovak/ to your Visual Studio project. Alternatively download the \"Slovak.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage SlovakBest Field Value Type Description OcrLanguage SlovakFast Slovak OCR language. Performs OCR, reading documents of the Slovak (slovenčina, slovenský jazyk) language with an understanding of spelling and linguistic context. This 'Fast' variant of Slovak uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy. To use this language please install the Nuget Package 'IronOcr.Languages.Slovak' from https://www.nuget.org/packages/IronOcr.Languages.Slovak/ to your Visual Studio project. Alternatively download the \"Slovak.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage SlovakFast Field Value Type Description OcrLanguage SlovakFraktur Slovak Fraktur OCR language. Performs OCR, reading documents of the Slovak Fraktur (slovenčina, slovenský jazyk) language with an understanding of spelling and linguistic context. This Slovak Fraktur OCR language pack uses only an OEM (shape recognition evolved from Tesseract 3) Tesseract OCR engine. To use this language please install the Nuget Package 'IronOcr.Languages.Slovak' from https://www.nuget.org/packages/IronOcr.Languages.Slovak/ to your Visual Studio project. Alternatively download the \"Slovak.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage SlovakFraktur Field Value Type Description OcrLanguage Slovene Slovene OCR language. Performs OCR, reading documents of the Slovene (slovenski jezik, slovenščina) language with an understanding of spelling and linguistic context. This Default variant of Slovene uses both an LTSM (Long Term Short Term neural network) and an OEM (shape recognition evolved from Tesseract 3) OCR strategies which can mesh them together to produce results which are both fast and accurate. To use this language please install the Nuget Package 'IronOcr.Languages.Slovene' from https://www.nuget.org/packages/IronOcr.Languages.Slovene/ to your Visual Studio project. Alternatively download the \"Slovene.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage Slovene Field Value Type Description OcrLanguage SloveneBest Slovene OCR language. Performs OCR, reading documents of the Slovene (slovenski jezik, slovenščina) language with an understanding of spelling and linguistic context. This 'Best' (detailed) variant of Slovene uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed. To use this language please install the Nuget Package 'IronOcr.Languages.Slovene' from https://www.nuget.org/packages/IronOcr.Languages.Slovene/ to your Visual Studio project. Alternatively download the \"Slovene.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage SloveneBest Field Value Type Description OcrLanguage SloveneFast Slovene OCR language. Performs OCR, reading documents of the Slovene (slovenski jezik, slovenščina) language with an understanding of spelling and linguistic context. This 'Fast' variant of Slovene uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy. To use this language please install the Nuget Package 'IronOcr.Languages.Slovene' from https://www.nuget.org/packages/IronOcr.Languages.Slovene/ to your Visual Studio project. Alternatively download the \"Slovene.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage SloveneFast Field Value Type Description OcrLanguage Spanish Spanish OCR language. Performs OCR, reading documents of the Spanish (español, castellano) language with an understanding of spelling and linguistic context. This Default variant of Spanish uses both an LTSM (Long Term Short Term neural network) and an OEM (shape recognition evolved from Tesseract 3) OCR strategies which can mesh them together to produce results which are both fast and accurate. To use this language please install the Nuget Package 'IronOcr.Languages.Spanish' from https://www.nuget.org/packages/IronOcr.Languages.Spanish/ to your Visual Studio project. Alternatively download the \"Spanish.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage Spanish Field Value Type Description OcrLanguage SpanishBest Spanish OCR language. Performs OCR, reading documents of the Spanish (español, castellano) language with an understanding of spelling and linguistic context. This 'Best' (detailed) variant of Spanish uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed. To use this language please install the Nuget Package 'IronOcr.Languages.Spanish' from https://www.nuget.org/packages/IronOcr.Languages.Spanish/ to your Visual Studio project. Alternatively download the \"Spanish.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage SpanishBest Field Value Type Description OcrLanguage SpanishFast Spanish OCR language. Performs OCR, reading documents of the Spanish (español, castellano) language with an understanding of spelling and linguistic context. This 'Fast' variant of Spanish uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy. To use this language please install the Nuget Package 'IronOcr.Languages.Spanish' from https://www.nuget.org/packages/IronOcr.Languages.Spanish/ to your Visual Studio project. Alternatively download the \"Spanish.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage SpanishFast Field Value Type Description OcrLanguage SpanishOld Spanish Old OCR language. Performs OCR, reading documents of the Spanish Old (español, castellano) language with an understanding of spelling and linguistic context. This Default variant of Spanish Old uses both an LTSM (Long Term Short Term neural network) and an OEM (shape recognition evolved from Tesseract 3) OCR strategies which can mesh them together to produce results which are both fast and accurate. To use this language please install the Nuget Package 'IronOcr.Languages.Spanish' from https://www.nuget.org/packages/IronOcr.Languages.Spanish/ to your Visual Studio project. Alternatively download the \"Spanish.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage SpanishOld Field Value Type Description OcrLanguage SpanishOldBest Spanish Old OCR language. Performs OCR, reading documents of the Spanish Old (español, castellano) language with an understanding of spelling and linguistic context. This 'Best' (detailed) variant of Spanish Old uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed. To use this language please install the Nuget Package 'IronOcr.Languages.Spanish' from https://www.nuget.org/packages/IronOcr.Languages.Spanish/ to your Visual Studio project. Alternatively download the \"Spanish.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage SpanishOldBest Field Value Type Description OcrLanguage SpanishOldFast Spanish Old OCR language. Performs OCR, reading documents of the Spanish Old (español, castellano) language with an understanding of spelling and linguistic context. This 'Fast' variant of Spanish Old uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy. To use this language please install the Nuget Package 'IronOcr.Languages.Spanish' from https://www.nuget.org/packages/IronOcr.Languages.Spanish/ to your Visual Studio project. Alternatively download the \"Spanish.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage SpanishOldFast Field Value Type Description OcrLanguage Sundanese Sundanese OCR language. Performs OCR, reading documents of the Sundanese (Basa Sunda) language with an understanding of spelling and linguistic context. This Default variant of Sundanese uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine. To use this language please install the Nuget Package 'IronOcr.Languages.Sundanese' from https://www.nuget.org/packages/IronOcr.Languages.Sundanese/ to your Visual Studio project. Alternatively download the \"Sundanese.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage Sundanese Field Value Type Description OcrLanguage SundaneseBest Sundanese OCR language. Performs OCR, reading documents of the Sundanese (Basa Sunda) language with an understanding of spelling and linguistic context. This 'Best' (detailed) variant of Sundanese uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed. To use this language please install the Nuget Package 'IronOcr.Languages.Sundanese' from https://www.nuget.org/packages/IronOcr.Languages.Sundanese/ to your Visual Studio project. Alternatively download the \"Sundanese.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage SundaneseBest Field Value Type Description OcrLanguage SundaneseFast Sundanese OCR language. Performs OCR, reading documents of the Sundanese (Basa Sunda) language with an understanding of spelling and linguistic context. This 'Fast' variant of Sundanese uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy. To use this language please install the Nuget Package 'IronOcr.Languages.Sundanese' from https://www.nuget.org/packages/IronOcr.Languages.Sundanese/ to your Visual Studio project. Alternatively download the \"Sundanese.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage SundaneseFast Field Value Type Description OcrLanguage Swahili Swahili OCR language. Performs OCR, reading documents of the Swahili (Kiswahili) language with an understanding of spelling and linguistic context. This Default variant of Swahili uses both an LTSM (Long Term Short Term neural network) and an OEM (shape recognition evolved from Tesseract 3) OCR strategies which can mesh them together to produce results which are both fast and accurate. To use this language please install the Nuget Package 'IronOcr.Languages.Swahili' from https://www.nuget.org/packages/IronOcr.Languages.Swahili/ to your Visual Studio project. Alternatively download the \"Swahili.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage Swahili Field Value Type Description OcrLanguage SwahiliBest Swahili OCR language. Performs OCR, reading documents of the Swahili (Kiswahili) language with an understanding of spelling and linguistic context. This 'Best' (detailed) variant of Swahili uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed. To use this language please install the Nuget Package 'IronOcr.Languages.Swahili' from https://www.nuget.org/packages/IronOcr.Languages.Swahili/ to your Visual Studio project. Alternatively download the \"Swahili.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage SwahiliBest Field Value Type Description OcrLanguage SwahiliFast Swahili OCR language. Performs OCR, reading documents of the Swahili (Kiswahili) language with an understanding of spelling and linguistic context. This 'Fast' variant of Swahili uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy. To use this language please install the Nuget Package 'IronOcr.Languages.Swahili' from https://www.nuget.org/packages/IronOcr.Languages.Swahili/ to your Visual Studio project. Alternatively download the \"Swahili.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage SwahiliFast Field Value Type Description OcrLanguage Swedish Swedish OCR language. Performs OCR, reading documents of the Swedish (Svenska) language with an understanding of spelling and linguistic context. This Default variant of Swedish uses both an LTSM (Long Term Short Term neural network) and an OEM (shape recognition evolved from Tesseract 3) OCR strategies which can mesh them together to produce results which are both fast and accurate. To use this language please install the Nuget Package 'IronOcr.Languages.Swedish' from https://www.nuget.org/packages/IronOcr.Languages.Swedish/ to your Visual Studio project. Alternatively download the \"Swedish.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage Swedish Field Value Type Description OcrLanguage SwedishBest Swedish OCR language. Performs OCR, reading documents of the Swedish (Svenska) language with an understanding of spelling and linguistic context. This 'Best' (detailed) variant of Swedish uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed. To use this language please install the Nuget Package 'IronOcr.Languages.Swedish' from https://www.nuget.org/packages/IronOcr.Languages.Swedish/ to your Visual Studio project. Alternatively download the \"Swedish.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage SwedishBest Field Value Type Description OcrLanguage SwedishFast Swedish OCR language. Performs OCR, reading documents of the Swedish (Svenska) language with an understanding of spelling and linguistic context. This 'Fast' variant of Swedish uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy. To use this language please install the Nuget Package 'IronOcr.Languages.Swedish' from https://www.nuget.org/packages/IronOcr.Languages.Swedish/ to your Visual Studio project. Alternatively download the \"Swedish.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage SwedishFast Field Value Type Description OcrLanguage Syriac Syriac OCR language. Performs OCR, reading documents of the Syriac (Syrian, Syriac Aramaic,ܠܫܢܐ ܣܘܪܝܝܐ‎, Leššānā Suryāyā) language with an understanding of spelling and linguistic context. This Default variant of Syriac uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine. To use this language please install the Nuget Package 'IronOcr.Languages.Syriac' from https://www.nuget.org/packages/IronOcr.Languages.Syriac/ to your Visual Studio project. Alternatively download the \"Syriac.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage Syriac Field Value Type Description OcrLanguage SyriacAlphabet Syriac Alphabetic Script OCR dictionary. Performs OCR, identifying characters of Syriac Alphabet (Syrian, Syriac Aramaic,ܠܫܢܐ ܣܘܪܝܝܐ‎, Leššānā Suryāyā) languages. Alphabetic script OCR dictionaries such as this contain detailed information about the shapes letters of an alphabet, but do not utilize any other information about a language such as word-frequency and do not understand linguistic context. This has both advantages and disadvantages. This Default variant of Syriac Alphabet uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine. To use this language please install the Nuget Package 'IronOcr.Languages.Syriac' from https://www.nuget.org/packages/IronOcr.Languages.Syriac/ to your Visual Studio project. Alternatively download the \"Syriac.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage SyriacAlphabet Field Value Type Description OcrLanguage SyriacAlphabetBest Syriac Alphabetic Script OCR dictionary. Performs OCR, identifying characters of Syriac Alphabet (Syrian, Syriac Aramaic,ܠܫܢܐ ܣܘܪܝܝܐ‎, Leššānā Suryāyā) languages. Alphabetic script OCR dictionaries such as this contain detailed information about the shapes letters of an alphabet, but do not utilize any other information about a language such as word-frequency and do not understand linguistic context. This has both advantages and disadvantages. This 'Best' (detailed) variant of Syriac Alphabet uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed. To use this language please install the Nuget Package 'IronOcr.Languages.Syriac' from https://www.nuget.org/packages/IronOcr.Languages.Syriac/ to your Visual Studio project. Alternatively download the \"Syriac.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage SyriacAlphabetBest Field Value Type Description OcrLanguage SyriacAlphabetFast Syriac Alphabetic Script OCR dictionary. Performs OCR, identifying characters of Syriac Alphabet (Syrian, Syriac Aramaic,ܠܫܢܐ ܣܘܪܝܝܐ‎, Leššānā Suryāyā) languages. Alphabetic script OCR dictionaries such as this contain detailed information about the shapes letters of an alphabet, but do not utilize any other information about a language such as word-frequency and do not understand linguistic context. This has both advantages and disadvantages. This 'Fast' variant of Syriac Alphabet uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy. To use this language please install the Nuget Package 'IronOcr.Languages.Syriac' from https://www.nuget.org/packages/IronOcr.Languages.Syriac/ to your Visual Studio project. Alternatively download the \"Syriac.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage SyriacAlphabetFast Field Value Type Description OcrLanguage SyriacBest Syriac OCR language. Performs OCR, reading documents of the Syriac (Syrian, Syriac Aramaic,ܠܫܢܐ ܣܘܪܝܝܐ‎, Leššānā Suryāyā) language with an understanding of spelling and linguistic context. This 'Best' (detailed) variant of Syriac uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed. To use this language please install the Nuget Package 'IronOcr.Languages.Syriac' from https://www.nuget.org/packages/IronOcr.Languages.Syriac/ to your Visual Studio project. Alternatively download the \"Syriac.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage SyriacBest Field Value Type Description OcrLanguage SyriacFast Syriac OCR language. Performs OCR, reading documents of the Syriac (Syrian, Syriac Aramaic,ܠܫܢܐ ܣܘܪܝܝܐ‎, Leššānā Suryāyā) language with an understanding of spelling and linguistic context. This 'Fast' variant of Syriac uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy. To use this language please install the Nuget Package 'IronOcr.Languages.Syriac' from https://www.nuget.org/packages/IronOcr.Languages.Syriac/ to your Visual Studio project. Alternatively download the \"Syriac.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage SyriacFast Field Value Type Description OcrLanguage Tagalog Tagalog OCR language. Performs OCR, reading documents of the Tagalog (Wikang Tagalog, ᜏᜒᜃᜅ᜔ ᜆᜄᜎᜓᜄ᜔) language with an understanding of spelling and linguistic context. This Tagalog OCR language pack uses both an LTSM (Long Term Short Term neural network) and an OEM (shape recognition evolved from Tesseract 3) OCR strategies which can mesh them together to produce results which are both fast and accurate. To use this language please install the Nuget Package 'IronOcr.Languages.Tagalog' from https://www.nuget.org/packages/IronOcr.Languages.Tagalog/ to your Visual Studio project. Alternatively download the \"Tagalog.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage Tagalog Field Value Type Description OcrLanguage Tajik Tajik OCR language. Performs OCR, reading documents of the Tajik (тоҷикӣ, toğikī, تاجیکی‎) language with an understanding of spelling and linguistic context. This Default variant of Tajik uses both an LTSM (Long Term Short Term neural network) and an OEM (shape recognition evolved from Tesseract 3) OCR strategies which can mesh them together to produce results which are both fast and accurate. To use this language please install the Nuget Package 'IronOcr.Languages.Tajik' from https://www.nuget.org/packages/IronOcr.Languages.Tajik/ to your Visual Studio project. Alternatively download the \"Tajik.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage Tajik Field Value Type Description OcrLanguage TajikBest Tajik OCR language. Performs OCR, reading documents of the Tajik (тоҷикӣ, toğikī, تاجیکی‎) language with an understanding of spelling and linguistic context. This 'Best' (detailed) variant of Tajik uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed. To use this language please install the Nuget Package 'IronOcr.Languages.Tajik' from https://www.nuget.org/packages/IronOcr.Languages.Tajik/ to your Visual Studio project. Alternatively download the \"Tajik.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage TajikBest Field Value Type Description OcrLanguage TajikFast Tajik OCR language. Performs OCR, reading documents of the Tajik (тоҷикӣ, toğikī, تاجیکی‎) language with an understanding of spelling and linguistic context. This 'Fast' variant of Tajik uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy. To use this language please install the Nuget Package 'IronOcr.Languages.Tajik' from https://www.nuget.org/packages/IronOcr.Languages.Tajik/ to your Visual Studio project. Alternatively download the \"Tajik.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage TajikFast Field Value Type Description OcrLanguage Tamil Tamil OCR language. Performs OCR, reading documents of the Tamil (தமிழ்) language with an understanding of spelling and linguistic context. This Default variant of Tamil uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine. To use this language please install the Nuget Package 'IronOcr.Languages.Tamil' from https://www.nuget.org/packages/IronOcr.Languages.Tamil/ to your Visual Studio project. Alternatively download the \"Tamil.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage Tamil Field Value Type Description OcrLanguage TamilAlphabet Tamil Alphabetic Script OCR dictionary. Performs OCR, identifying characters of Tamil Alphabet (தமிழ்) languages. Alphabetic script OCR dictionaries such as this contain detailed information about the shapes letters of an alphabet, but do not utilize any other information about a language such as word-frequency and do not understand linguistic context. This has both advantages and disadvantages. This Default variant of Tamil Alphabet uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine. To use this language please install the Nuget Package 'IronOcr.Languages.Tamil' from https://www.nuget.org/packages/IronOcr.Languages.Tamil/ to your Visual Studio project. Alternatively download the \"Tamil.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage TamilAlphabet Field Value Type Description OcrLanguage TamilAlphabetBest Tamil Alphabetic Script OCR dictionary. Performs OCR, identifying characters of Tamil Alphabet (தமிழ்) languages. Alphabetic script OCR dictionaries such as this contain detailed information about the shapes letters of an alphabet, but do not utilize any other information about a language such as word-frequency and do not understand linguistic context. This has both advantages and disadvantages. This 'Best' (detailed) variant of Tamil Alphabet uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed. To use this language please install the Nuget Package 'IronOcr.Languages.Tamil' from https://www.nuget.org/packages/IronOcr.Languages.Tamil/ to your Visual Studio project. Alternatively download the \"Tamil.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage TamilAlphabetBest Field Value Type Description OcrLanguage TamilAlphabetFast Tamil Alphabetic Script OCR dictionary. Performs OCR, identifying characters of Tamil Alphabet (தமிழ்) languages. Alphabetic script OCR dictionaries such as this contain detailed information about the shapes letters of an alphabet, but do not utilize any other information about a language such as word-frequency and do not understand linguistic context. This has both advantages and disadvantages. This 'Fast' variant of Tamil Alphabet uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy. To use this language please install the Nuget Package 'IronOcr.Languages.Tamil' from https://www.nuget.org/packages/IronOcr.Languages.Tamil/ to your Visual Studio project. Alternatively download the \"Tamil.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage TamilAlphabetFast Field Value Type Description OcrLanguage TamilBest Tamil OCR language. Performs OCR, reading documents of the Tamil (தமிழ்) language with an understanding of spelling and linguistic context. This 'Best' (detailed) variant of Tamil uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed. To use this language please install the Nuget Package 'IronOcr.Languages.Tamil' from https://www.nuget.org/packages/IronOcr.Languages.Tamil/ to your Visual Studio project. Alternatively download the \"Tamil.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage TamilBest Field Value Type Description OcrLanguage TamilFast Tamil OCR language. Performs OCR, reading documents of the Tamil (தமிழ்) language with an understanding of spelling and linguistic context. This 'Fast' variant of Tamil uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy. To use this language please install the Nuget Package 'IronOcr.Languages.Tamil' from https://www.nuget.org/packages/IronOcr.Languages.Tamil/ to your Visual Studio project. Alternatively download the \"Tamil.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage TamilFast Field Value Type Description OcrLanguage Tatar Tatar OCR language. Performs OCR, reading documents of the Tatar (татар теле, tatar tele) language with an understanding of spelling and linguistic context. This Default variant of Tatar uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine. To use this language please install the Nuget Package 'IronOcr.Languages.Tatar' from https://www.nuget.org/packages/IronOcr.Languages.Tatar/ to your Visual Studio project. Alternatively download the \"Tatar.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage Tatar Field Value Type Description OcrLanguage TatarBest Tatar OCR language. Performs OCR, reading documents of the Tatar (татар теле, tatar tele) language with an understanding of spelling and linguistic context. This 'Best' (detailed) variant of Tatar uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed. To use this language please install the Nuget Package 'IronOcr.Languages.Tatar' from https://www.nuget.org/packages/IronOcr.Languages.Tatar/ to your Visual Studio project. Alternatively download the \"Tatar.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage TatarBest Field Value Type Description OcrLanguage TatarFast Tatar OCR language. Performs OCR, reading documents of the Tatar (татар теле, tatar tele) language with an understanding of spelling and linguistic context. This 'Fast' variant of Tatar uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy. To use this language please install the Nuget Package 'IronOcr.Languages.Tatar' from https://www.nuget.org/packages/IronOcr.Languages.Tatar/ to your Visual Studio project. Alternatively download the \"Tatar.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage TatarFast Field Value Type Description OcrLanguage Telugu Telugu OCR language. Performs OCR, reading documents of the Telugu (తెలుగు) language with an understanding of spelling and linguistic context. This Default variant of Telugu uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine. To use this language please install the Nuget Package 'IronOcr.Languages.Telugu' from https://www.nuget.org/packages/IronOcr.Languages.Telugu/ to your Visual Studio project. Alternatively download the \"Telugu.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage Telugu Field Value Type Description OcrLanguage TeluguAlphabet Telugu Alphabetic Script OCR dictionary. Performs OCR, identifying characters of Telugu Alphabet (తెలుగు) languages. Alphabetic script OCR dictionaries such as this contain detailed information about the shapes letters of an alphabet, but do not utilize any other information about a language such as word-frequency and do not understand linguistic context. This has both advantages and disadvantages. This Default variant of Telugu Alphabet uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine. To use this language please install the Nuget Package 'IronOcr.Languages.Telugu' from https://www.nuget.org/packages/IronOcr.Languages.Telugu/ to your Visual Studio project. Alternatively download the \"Telugu.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage TeluguAlphabet Field Value Type Description OcrLanguage TeluguAlphabetBest Telugu Alphabetic Script OCR dictionary. Performs OCR, identifying characters of Telugu Alphabet (తెలుగు) languages. Alphabetic script OCR dictionaries such as this contain detailed information about the shapes letters of an alphabet, but do not utilize any other information about a language such as word-frequency and do not understand linguistic context. This has both advantages and disadvantages. This 'Best' (detailed) variant of Telugu Alphabet uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed. To use this language please install the Nuget Package 'IronOcr.Languages.Telugu' from https://www.nuget.org/packages/IronOcr.Languages.Telugu/ to your Visual Studio project. Alternatively download the \"Telugu.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage TeluguAlphabetBest Field Value Type Description OcrLanguage TeluguAlphabetFast Telugu Alphabetic Script OCR dictionary. Performs OCR, identifying characters of Telugu Alphabet (తెలుగు) languages. Alphabetic script OCR dictionaries such as this contain detailed information about the shapes letters of an alphabet, but do not utilize any other information about a language such as word-frequency and do not understand linguistic context. This has both advantages and disadvantages. This 'Fast' variant of Telugu Alphabet uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy. To use this language please install the Nuget Package 'IronOcr.Languages.Telugu' from https://www.nuget.org/packages/IronOcr.Languages.Telugu/ to your Visual Studio project. Alternatively download the \"Telugu.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage TeluguAlphabetFast Field Value Type Description OcrLanguage TeluguBest Telugu OCR language. Performs OCR, reading documents of the Telugu (తెలుగు) language with an understanding of spelling and linguistic context. This 'Best' (detailed) variant of Telugu uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed. To use this language please install the Nuget Package 'IronOcr.Languages.Telugu' from https://www.nuget.org/packages/IronOcr.Languages.Telugu/ to your Visual Studio project. Alternatively download the \"Telugu.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage TeluguBest Field Value Type Description OcrLanguage TeluguFast Telugu OCR language. Performs OCR, reading documents of the Telugu (తెలుగు) language with an understanding of spelling and linguistic context. This 'Fast' variant of Telugu uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy. To use this language please install the Nuget Package 'IronOcr.Languages.Telugu' from https://www.nuget.org/packages/IronOcr.Languages.Telugu/ to your Visual Studio project. Alternatively download the \"Telugu.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage TeluguFast Field Value Type Description OcrLanguage ThaanaAlphabet Thaana Alphabetic Script OCR dictionary. Performs OCR, identifying characters of Thaana Alphabet (Taana , Tāna , ތާނަ‎) languages. Alphabetic script OCR dictionaries such as this contain detailed information about the shapes letters of an alphabet, but do not utilize any other information about a language such as word-frequency and do not understand linguistic context. This has both advantages and disadvantages. This Default variant of Thaana Alphabet uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine. To use this language please install the Nuget Package 'IronOcr.Languages.Thaana' from https://www.nuget.org/packages/IronOcr.Languages.Thaana/ to your Visual Studio project. Alternatively download the \"Thaana.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage ThaanaAlphabet Field Value Type Description OcrLanguage ThaanaAlphabetBest Thaana Alphabetic Script OCR dictionary. Performs OCR, identifying characters of Thaana Alphabet (Taana , Tāna , ތާނަ‎) languages. Alphabetic script OCR dictionaries such as this contain detailed information about the shapes letters of an alphabet, but do not utilize any other information about a language such as word-frequency and do not understand linguistic context. This has both advantages and disadvantages. This 'Best' (detailed) variant of Thaana Alphabet uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed. To use this language please install the Nuget Package 'IronOcr.Languages.Thaana' from https://www.nuget.org/packages/IronOcr.Languages.Thaana/ to your Visual Studio project. Alternatively download the \"Thaana.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage ThaanaAlphabetBest Field Value Type Description OcrLanguage ThaanaAlphabetFast Thaana Alphabetic Script OCR dictionary. Performs OCR, identifying characters of Thaana Alphabet (Taana , Tāna , ތާނަ‎) languages. Alphabetic script OCR dictionaries such as this contain detailed information about the shapes letters of an alphabet, but do not utilize any other information about a language such as word-frequency and do not understand linguistic context. This has both advantages and disadvantages. This 'Fast' variant of Thaana Alphabet uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy. To use this language please install the Nuget Package 'IronOcr.Languages.Thaana' from https://www.nuget.org/packages/IronOcr.Languages.Thaana/ to your Visual Studio project. Alternatively download the \"Thaana.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage ThaanaAlphabetFast Field Value Type Description OcrLanguage Thai Thai OCR language. Performs OCR, reading documents of the Thai (ไทย) language with an understanding of spelling and linguistic context. This Default variant of Thai uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine. To use this language please install the Nuget Package 'IronOcr.Languages.Thai' from https://www.nuget.org/packages/IronOcr.Languages.Thai/ to your Visual Studio project. Alternatively download the \"Thai.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage Thai Field Value Type Description OcrLanguage ThaiAlphabet Thai Alphabetic Script OCR dictionary. Performs OCR, identifying characters of Thai Alphabet (ไทย) languages. Alphabetic script OCR dictionaries such as this contain detailed information about the shapes letters of an alphabet, but do not utilize any other information about a language such as word-frequency and do not understand linguistic context. This has both advantages and disadvantages. This Default variant of Thai Alphabet uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine. To use this language please install the Nuget Package 'IronOcr.Languages.Thai' from https://www.nuget.org/packages/IronOcr.Languages.Thai/ to your Visual Studio project. Alternatively download the \"Thai.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage ThaiAlphabet Field Value Type Description OcrLanguage ThaiAlphabetBest Thai Alphabetic Script OCR dictionary. Performs OCR, identifying characters of Thai Alphabet (ไทย) languages. Alphabetic script OCR dictionaries such as this contain detailed information about the shapes letters of an alphabet, but do not utilize any other information about a language such as word-frequency and do not understand linguistic context. This has both advantages and disadvantages. This 'Best' (detailed) variant of Thai Alphabet uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed. To use this language please install the Nuget Package 'IronOcr.Languages.Thai' from https://www.nuget.org/packages/IronOcr.Languages.Thai/ to your Visual Studio project. Alternatively download the \"Thai.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage ThaiAlphabetBest Field Value Type Description OcrLanguage ThaiAlphabetFast Thai Alphabetic Script OCR dictionary. Performs OCR, identifying characters of Thai Alphabet (ไทย) languages. Alphabetic script OCR dictionaries such as this contain detailed information about the shapes letters of an alphabet, but do not utilize any other information about a language such as word-frequency and do not understand linguistic context. This has both advantages and disadvantages. This 'Fast' variant of Thai Alphabet uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy. To use this language please install the Nuget Package 'IronOcr.Languages.Thai' from https://www.nuget.org/packages/IronOcr.Languages.Thai/ to your Visual Studio project. Alternatively download the \"Thai.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage ThaiAlphabetFast Field Value Type Description OcrLanguage ThaiBest Thai OCR language. Performs OCR, reading documents of the Thai (ไทย) language with an understanding of spelling and linguistic context. This 'Best' (detailed) variant of Thai uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed. To use this language please install the Nuget Package 'IronOcr.Languages.Thai' from https://www.nuget.org/packages/IronOcr.Languages.Thai/ to your Visual Studio project. Alternatively download the \"Thai.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage ThaiBest Field Value Type Description OcrLanguage ThaiFast Thai OCR language. Performs OCR, reading documents of the Thai (ไทย) language with an understanding of spelling and linguistic context. This 'Fast' variant of Thai uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy. To use this language please install the Nuget Package 'IronOcr.Languages.Thai' from https://www.nuget.org/packages/IronOcr.Languages.Thai/ to your Visual Studio project. Alternatively download the \"Thai.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage ThaiFast Field Value Type Description OcrLanguage Tibetan Tibetan OCR language. Performs OCR, reading documents of the Tibetan (Tibetan Standard, Tibetan, Central ཡིག་) language with an understanding of spelling and linguistic context. This Default variant of Tibetan uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine. To use this language please install the Nuget Package 'IronOcr.Languages.Tibetan' from https://www.nuget.org/packages/IronOcr.Languages.Tibetan/ to your Visual Studio project. Alternatively download the \"Tibetan.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage Tibetan Field Value Type Description OcrLanguage TibetanAlphabet Tibetan Alphabetic Script OCR dictionary. Performs OCR, identifying characters of Tibetan Alphabet (Tibetan Standard, Tibetan, Central ཡིག་) languages. Alphabetic script OCR dictionaries such as this contain detailed information about the shapes letters of an alphabet, but do not utilize any other information about a language such as word-frequency and do not understand linguistic context. This has both advantages and disadvantages. This Default variant of Tibetan Alphabet uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine. To use this language please install the Nuget Package 'IronOcr.Languages.Tibetan' from https://www.nuget.org/packages/IronOcr.Languages.Tibetan/ to your Visual Studio project. Alternatively download the \"Tibetan.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage TibetanAlphabet Field Value Type Description OcrLanguage TibetanAlphabetBest Tibetan Alphabetic Script OCR dictionary. Performs OCR, identifying characters of Tibetan Alphabet (Tibetan Standard, Tibetan, Central ཡིག་) languages. Alphabetic script OCR dictionaries such as this contain detailed information about the shapes letters of an alphabet, but do not utilize any other information about a language such as word-frequency and do not understand linguistic context. This has both advantages and disadvantages. This 'Best' (detailed) variant of Tibetan Alphabet uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed. To use this language please install the Nuget Package 'IronOcr.Languages.Tibetan' from https://www.nuget.org/packages/IronOcr.Languages.Tibetan/ to your Visual Studio project. Alternatively download the \"Tibetan.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage TibetanAlphabetBest Field Value Type Description OcrLanguage TibetanAlphabetFast Tibetan Alphabetic Script OCR dictionary. Performs OCR, identifying characters of Tibetan Alphabet (Tibetan Standard, Tibetan, Central ཡིག་) languages. Alphabetic script OCR dictionaries such as this contain detailed information about the shapes letters of an alphabet, but do not utilize any other information about a language such as word-frequency and do not understand linguistic context. This has both advantages and disadvantages. This 'Fast' variant of Tibetan Alphabet uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy. To use this language please install the Nuget Package 'IronOcr.Languages.Tibetan' from https://www.nuget.org/packages/IronOcr.Languages.Tibetan/ to your Visual Studio project. Alternatively download the \"Tibetan.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage TibetanAlphabetFast Field Value Type Description OcrLanguage TibetanBest Tibetan OCR language. Performs OCR, reading documents of the Tibetan (Tibetan Standard, Tibetan, Central ཡིག་) language with an understanding of spelling and linguistic context. This 'Best' (detailed) variant of Tibetan uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed. To use this language please install the Nuget Package 'IronOcr.Languages.Tibetan' from https://www.nuget.org/packages/IronOcr.Languages.Tibetan/ to your Visual Studio project. Alternatively download the \"Tibetan.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage TibetanBest Field Value Type Description OcrLanguage TibetanFast Tibetan OCR language. Performs OCR, reading documents of the Tibetan (Tibetan Standard, Tibetan, Central ཡིག་) language with an understanding of spelling and linguistic context. This 'Fast' variant of Tibetan uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy. To use this language please install the Nuget Package 'IronOcr.Languages.Tibetan' from https://www.nuget.org/packages/IronOcr.Languages.Tibetan/ to your Visual Studio project. Alternatively download the \"Tibetan.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage TibetanFast Field Value Type Description OcrLanguage Tigrinya Tigrinya OCR language. Performs OCR, reading documents of the Tigrinya (ትግርኛ) language with an understanding of spelling and linguistic context. This Default variant of Tigrinya uses both an LTSM (Long Term Short Term neural network) and an OEM (shape recognition evolved from Tesseract 3) OCR strategies which can mesh them together to produce results which are both fast and accurate. To use this language please install the Nuget Package 'IronOcr.Languages.Tigrinya' from https://www.nuget.org/packages/IronOcr.Languages.Tigrinya/ to your Visual Studio project. Alternatively download the \"Tigrinya.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage Tigrinya Field Value Type Description OcrLanguage TigrinyaBest Tigrinya OCR language. Performs OCR, reading documents of the Tigrinya (ትግርኛ) language with an understanding of spelling and linguistic context. This 'Best' (detailed) variant of Tigrinya uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed. To use this language please install the Nuget Package 'IronOcr.Languages.Tigrinya' from https://www.nuget.org/packages/IronOcr.Languages.Tigrinya/ to your Visual Studio project. Alternatively download the \"Tigrinya.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage TigrinyaBest Field Value Type Description OcrLanguage TigrinyaFast Tigrinya OCR language. Performs OCR, reading documents of the Tigrinya (ትግርኛ) language with an understanding of spelling and linguistic context. This 'Fast' variant of Tigrinya uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy. To use this language please install the Nuget Package 'IronOcr.Languages.Tigrinya' from https://www.nuget.org/packages/IronOcr.Languages.Tigrinya/ to your Visual Studio project. Alternatively download the \"Tigrinya.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage TigrinyaFast Field Value Type Description OcrLanguage Tonga Tonga OCR language. Performs OCR, reading documents of the Tonga (faka Tonga) language with an understanding of spelling and linguistic context. This Default variant of Tonga uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine. To use this language please install the Nuget Package 'IronOcr.Languages.Tonga' from https://www.nuget.org/packages/IronOcr.Languages.Tonga/ to your Visual Studio project. Alternatively download the \"Tonga.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage Tonga Field Value Type Description OcrLanguage TongaBest Tonga OCR language. Performs OCR, reading documents of the Tonga (faka Tonga) language with an understanding of spelling and linguistic context. This 'Best' (detailed) variant of Tonga uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed. To use this language please install the Nuget Package 'IronOcr.Languages.Tonga' from https://www.nuget.org/packages/IronOcr.Languages.Tonga/ to your Visual Studio project. Alternatively download the \"Tonga.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage TongaBest Field Value Type Description OcrLanguage TongaFast Tonga OCR language. Performs OCR, reading documents of the Tonga (faka Tonga) language with an understanding of spelling and linguistic context. This 'Fast' variant of Tonga uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy. To use this language please install the Nuget Package 'IronOcr.Languages.Tonga' from https://www.nuget.org/packages/IronOcr.Languages.Tonga/ to your Visual Studio project. Alternatively download the \"Tonga.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage TongaFast Field Value Type Description OcrLanguage Turkish Turkish OCR language. Performs OCR, reading documents of the Turkish (Türkçe) language with an understanding of spelling and linguistic context. This Default variant of Turkish uses both an LTSM (Long Term Short Term neural network) and an OEM (shape recognition evolved from Tesseract 3) OCR strategies which can mesh them together to produce results which are both fast and accurate. To use this language please install the Nuget Package 'IronOcr.Languages.Turkish' from https://www.nuget.org/packages/IronOcr.Languages.Turkish/ to your Visual Studio project. Alternatively download the \"Turkish.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage Turkish Field Value Type Description OcrLanguage TurkishBest Turkish OCR language. Performs OCR, reading documents of the Turkish (Türkçe) language with an understanding of spelling and linguistic context. This 'Best' (detailed) variant of Turkish uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed. To use this language please install the Nuget Package 'IronOcr.Languages.Turkish' from https://www.nuget.org/packages/IronOcr.Languages.Turkish/ to your Visual Studio project. Alternatively download the \"Turkish.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage TurkishBest Field Value Type Description OcrLanguage TurkishFast Turkish OCR language. Performs OCR, reading documents of the Turkish (Türkçe) language with an understanding of spelling and linguistic context. This 'Fast' variant of Turkish uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy. To use this language please install the Nuget Package 'IronOcr.Languages.Turkish' from https://www.nuget.org/packages/IronOcr.Languages.Turkish/ to your Visual Studio project. Alternatively download the \"Turkish.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage TurkishFast Field Value Type Description OcrLanguage Ukrainian Ukrainian OCR language. Performs OCR, reading documents of the Ukrainian (українська мова) language with an understanding of spelling and linguistic context. This Default variant of Ukrainian uses both an LTSM (Long Term Short Term neural network) and an OEM (shape recognition evolved from Tesseract 3) OCR strategies which can mesh them together to produce results which are both fast and accurate. To use this language please install the Nuget Package 'IronOcr.Languages.Ukrainian' from https://www.nuget.org/packages/IronOcr.Languages.Ukrainian/ to your Visual Studio project. Alternatively download the \"Ukrainian.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage Ukrainian Field Value Type Description OcrLanguage UkrainianBest Ukrainian OCR language. Performs OCR, reading documents of the Ukrainian (українська мова) language with an understanding of spelling and linguistic context. This 'Best' (detailed) variant of Ukrainian uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed. To use this language please install the Nuget Package 'IronOcr.Languages.Ukrainian' from https://www.nuget.org/packages/IronOcr.Languages.Ukrainian/ to your Visual Studio project. Alternatively download the \"Ukrainian.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage UkrainianBest Field Value Type Description OcrLanguage UkrainianFast Ukrainian OCR language. Performs OCR, reading documents of the Ukrainian (українська мова) language with an understanding of spelling and linguistic context. This 'Fast' variant of Ukrainian uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy. To use this language please install the Nuget Package 'IronOcr.Languages.Ukrainian' from https://www.nuget.org/packages/IronOcr.Languages.Ukrainian/ to your Visual Studio project. Alternatively download the \"Ukrainian.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage UkrainianFast Field Value Type Description OcrLanguage Urdu Urdu OCR language. Performs OCR, reading documents of the Urdu (اردو) language with an understanding of spelling and linguistic context. This Default variant of Urdu uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine. To use this language please install the Nuget Package 'IronOcr.Languages.Urdu' from https://www.nuget.org/packages/IronOcr.Languages.Urdu/ to your Visual Studio project. Alternatively download the \"Urdu.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage Urdu Field Value Type Description OcrLanguage UrduBest Urdu OCR language. Performs OCR, reading documents of the Urdu (اردو) language with an understanding of spelling and linguistic context. This 'Best' (detailed) variant of Urdu uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed. To use this language please install the Nuget Package 'IronOcr.Languages.Urdu' from https://www.nuget.org/packages/IronOcr.Languages.Urdu/ to your Visual Studio project. Alternatively download the \"Urdu.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage UrduBest Field Value Type Description OcrLanguage UrduFast Urdu OCR language. Performs OCR, reading documents of the Urdu (اردو) language with an understanding of spelling and linguistic context. This 'Fast' variant of Urdu uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy. To use this language please install the Nuget Package 'IronOcr.Languages.Urdu' from https://www.nuget.org/packages/IronOcr.Languages.Urdu/ to your Visual Studio project. Alternatively download the \"Urdu.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage UrduFast Field Value Type Description OcrLanguage Uyghur Uyghur OCR language. Performs OCR, reading documents of the Uyghur (Uyƣurqə, ئۇيغۇرچە‎) language with an understanding of spelling and linguistic context. This Default variant of Uyghur uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine. To use this language please install the Nuget Package 'IronOcr.Languages.Uyghur' from https://www.nuget.org/packages/IronOcr.Languages.Uyghur/ to your Visual Studio project. Alternatively download the \"Uyghur.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage Uyghur Field Value Type Description OcrLanguage UyghurBest Uyghur OCR language. Performs OCR, reading documents of the Uyghur (Uyƣurqə, ئۇيغۇرچە‎) language with an understanding of spelling and linguistic context. This 'Best' (detailed) variant of Uyghur uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed. To use this language please install the Nuget Package 'IronOcr.Languages.Uyghur' from https://www.nuget.org/packages/IronOcr.Languages.Uyghur/ to your Visual Studio project. Alternatively download the \"Uyghur.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage UyghurBest Field Value Type Description OcrLanguage UyghurFast Uyghur OCR language. Performs OCR, reading documents of the Uyghur (Uyƣurqə, ئۇيغۇرچە‎) language with an understanding of spelling and linguistic context. This 'Fast' variant of Uyghur uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy. To use this language please install the Nuget Package 'IronOcr.Languages.Uyghur' from https://www.nuget.org/packages/IronOcr.Languages.Uyghur/ to your Visual Studio project. Alternatively download the \"Uyghur.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage UyghurFast Field Value Type Description OcrLanguage Uzbek Uzbek OCR language. Performs OCR, reading documents of the Uzbek (O‘zbek, Ўзбек, أۇزبېك‎) language with an understanding of spelling and linguistic context. This Default variant of Uzbek uses both an LTSM (Long Term Short Term neural network) and an OEM (shape recognition evolved from Tesseract 3) OCR strategies which can mesh them together to produce results which are both fast and accurate. To use this language please install the Nuget Package 'IronOcr.Languages.Uzbek' from https://www.nuget.org/packages/IronOcr.Languages.Uzbek/ to your Visual Studio project. Alternatively download the \"Uzbek.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage Uzbek Field Value Type Description OcrLanguage UzbekBest Uzbek OCR language. Performs OCR, reading documents of the Uzbek (O‘zbek, Ўзбек, أۇزبېك‎) language with an understanding of spelling and linguistic context. This 'Best' (detailed) variant of Uzbek uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed. To use this language please install the Nuget Package 'IronOcr.Languages.Uzbek' from https://www.nuget.org/packages/IronOcr.Languages.Uzbek/ to your Visual Studio project. Alternatively download the \"Uzbek.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage UzbekBest Field Value Type Description OcrLanguage UzbekCyrillic Uzbek Cyrillic OCR language. Performs OCR, reading documents of the Uzbek (O‘zbek, Ўзбек, أۇزبېك‎) language ,using the Cyrillic alphabet, with an understanding of spelling and linguistic context. This Default variant of Uzbek Cyrillic uses both an LTSM (Long Term Short Term neural network) and an OEM (shape recognition evolved from Tesseract 3) OCR strategies which can mesh them together to produce results which are both fast and accurate. To use this language please install the Nuget Package 'IronOcr.Languages.Uzbek' from https://www.nuget.org/packages/IronOcr.Languages.Uzbek/ to your Visual Studio project. Alternatively download the \"Uzbek.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage UzbekCyrillic Field Value Type Description OcrLanguage UzbekCyrillicBest Uzbek Cyrillic OCR language. Performs OCR, reading documents of the Uzbek (O‘zbek, Ўзбек, أۇزبېك‎) language ,using the Cyrillic alphabet, with an understanding of spelling and linguistic context. This 'Best' (detailed) variant of Uzbek Cyrillic uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed. To use this language please install the Nuget Package 'IronOcr.Languages.Uzbek' from https://www.nuget.org/packages/IronOcr.Languages.Uzbek/ to your Visual Studio project. Alternatively download the \"Uzbek.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage UzbekCyrillicBest Field Value Type Description OcrLanguage UzbekCyrillicFast Uzbek Cyrillic OCR language. Performs OCR, reading documents of the Uzbek (O‘zbek, Ўзбек, أۇزبېك‎) language ,using the Cyrillic alphabet, with an understanding of spelling and linguistic context. This 'Fast' variant of Uzbek Cyrillic uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy. To use this language please install the Nuget Package 'IronOcr.Languages.Uzbek' from https://www.nuget.org/packages/IronOcr.Languages.Uzbek/ to your Visual Studio project. Alternatively download the \"Uzbek.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage UzbekCyrillicFast Field Value Type Description OcrLanguage UzbekFast Uzbek OCR language. Performs OCR, reading documents of the Uzbek (O‘zbek, Ўзбек, أۇزبېك‎) language with an understanding of spelling and linguistic context. This 'Fast' variant of Uzbek uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy. To use this language please install the Nuget Package 'IronOcr.Languages.Uzbek' from https://www.nuget.org/packages/IronOcr.Languages.Uzbek/ to your Visual Studio project. Alternatively download the \"Uzbek.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage UzbekFast Field Value Type Description OcrLanguage value__ Declaration public int value__ Field Value Type Description System.Int32 Vietnamese Vietnamese OCR language. Performs OCR, reading documents of the Vietnamese (Tiếng Việt) language with an understanding of spelling and linguistic context. This Default variant of Vietnamese uses both an LTSM (Long Term Short Term neural network) and an OEM (shape recognition evolved from Tesseract 3) OCR strategies which can mesh them together to produce results which are both fast and accurate. To use this language please install the Nuget Package 'IronOcr.Languages.Vietnamese' from https://www.nuget.org/packages/IronOcr.Languages.Vietnamese/ to your Visual Studio project. Alternatively download the \"Vietnamese.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage Vietnamese Field Value Type Description OcrLanguage VietnameseAlphabet Vietnamese Alphabetic Script OCR dictionary. Performs OCR, identifying characters of Vietnamese Alphabet (Tiếng Việt) languages. Alphabetic script OCR dictionaries such as this contain detailed information about the shapes letters of an alphabet, but do not utilize any other information about a language such as word-frequency and do not understand linguistic context. This has both advantages and disadvantages. This Default variant of Vietnamese Alphabet uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine. To use this language please install the Nuget Package 'IronOcr.Languages.Vietnamese' from https://www.nuget.org/packages/IronOcr.Languages.Vietnamese/ to your Visual Studio project. Alternatively download the \"Vietnamese.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage VietnameseAlphabet Field Value Type Description OcrLanguage VietnameseAlphabetBest Vietnamese Alphabetic Script OCR dictionary. Performs OCR, identifying characters of Vietnamese Alphabet (Tiếng Việt) languages. Alphabetic script OCR dictionaries such as this contain detailed information about the shapes letters of an alphabet, but do not utilize any other information about a language such as word-frequency and do not understand linguistic context. This has both advantages and disadvantages. This 'Best' (detailed) variant of Vietnamese Alphabet uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed. To use this language please install the Nuget Package 'IronOcr.Languages.Vietnamese' from https://www.nuget.org/packages/IronOcr.Languages.Vietnamese/ to your Visual Studio project. Alternatively download the \"Vietnamese.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage VietnameseAlphabetBest Field Value Type Description OcrLanguage VietnameseAlphabetFast Vietnamese Alphabetic Script OCR dictionary. Performs OCR, identifying characters of Vietnamese Alphabet (Tiếng Việt) languages. Alphabetic script OCR dictionaries such as this contain detailed information about the shapes letters of an alphabet, but do not utilize any other information about a language such as word-frequency and do not understand linguistic context. This has both advantages and disadvantages. This 'Fast' variant of Vietnamese Alphabet uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy. To use this language please install the Nuget Package 'IronOcr.Languages.Vietnamese' from https://www.nuget.org/packages/IronOcr.Languages.Vietnamese/ to your Visual Studio project. Alternatively download the \"Vietnamese.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage VietnameseAlphabetFast Field Value Type Description OcrLanguage VietnameseBest Vietnamese OCR language. Performs OCR, reading documents of the Vietnamese (Tiếng Việt) language with an understanding of spelling and linguistic context. This 'Best' (detailed) variant of Vietnamese uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed. To use this language please install the Nuget Package 'IronOcr.Languages.Vietnamese' from https://www.nuget.org/packages/IronOcr.Languages.Vietnamese/ to your Visual Studio project. Alternatively download the \"Vietnamese.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage VietnameseBest Field Value Type Description OcrLanguage VietnameseFast Vietnamese OCR language. Performs OCR, reading documents of the Vietnamese (Tiếng Việt) language with an understanding of spelling and linguistic context. This 'Fast' variant of Vietnamese uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy. To use this language please install the Nuget Package 'IronOcr.Languages.Vietnamese' from https://www.nuget.org/packages/IronOcr.Languages.Vietnamese/ to your Visual Studio project. Alternatively download the \"Vietnamese.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage VietnameseFast Field Value Type Description OcrLanguage Welsh Welsh OCR language. Performs OCR, reading documents of the Welsh (Cymraeg) language with an understanding of spelling and linguistic context. This Default variant of Welsh uses both an LTSM (Long Term Short Term neural network) and an OEM (shape recognition evolved from Tesseract 3) OCR strategies which can mesh them together to produce results which are both fast and accurate. To use this language please install the Nuget Package 'IronOcr.Languages.Welsh' from https://www.nuget.org/packages/IronOcr.Languages.Welsh/ to your Visual Studio project. Alternatively download the \"Welsh.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage Welsh Field Value Type Description OcrLanguage WelshBest Welsh OCR language. Performs OCR, reading documents of the Welsh (Cymraeg) language with an understanding of spelling and linguistic context. This 'Best' (detailed) variant of Welsh uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed. To use this language please install the Nuget Package 'IronOcr.Languages.Welsh' from https://www.nuget.org/packages/IronOcr.Languages.Welsh/ to your Visual Studio project. Alternatively download the \"Welsh.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage WelshBest Field Value Type Description OcrLanguage WelshFast Welsh OCR language. Performs OCR, reading documents of the Welsh (Cymraeg) language with an understanding of spelling and linguistic context. This 'Fast' variant of Welsh uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy. To use this language please install the Nuget Package 'IronOcr.Languages.Welsh' from https://www.nuget.org/packages/IronOcr.Languages.Welsh/ to your Visual Studio project. Alternatively download the \"Welsh.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage WelshFast Field Value Type Description OcrLanguage WesternFrisian Western Frisian OCR language. Performs OCR, reading documents of the Western Frisian (Frysk) language with an understanding of spelling and linguistic context. This Default variant of Western Frisian uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine. To use this language please install the Nuget Package 'IronOcr.Languages.WesternFrisian' from https://www.nuget.org/packages/IronOcr.Languages.WesternFrisian/ to your Visual Studio project. Alternatively download the \"WesternFrisian.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage WesternFrisian Field Value Type Description OcrLanguage WesternFrisianBest Western Frisian OCR language. Performs OCR, reading documents of the Western Frisian (Frysk) language with an understanding of spelling and linguistic context. This 'Best' (detailed) variant of Western Frisian uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed. To use this language please install the Nuget Package 'IronOcr.Languages.WesternFrisian' from https://www.nuget.org/packages/IronOcr.Languages.WesternFrisian/ to your Visual Studio project. Alternatively download the \"WesternFrisian.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage WesternFrisianBest Field Value Type Description OcrLanguage WesternFrisianFast Western Frisian OCR language. Performs OCR, reading documents of the Western Frisian (Frysk) language with an understanding of spelling and linguistic context. This 'Fast' variant of Western Frisian uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy. To use this language please install the Nuget Package 'IronOcr.Languages.WesternFrisian' from https://www.nuget.org/packages/IronOcr.Languages.WesternFrisian/ to your Visual Studio project. Alternatively download the \"WesternFrisian.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage WesternFrisianFast Field Value Type Description OcrLanguage Yiddish Yiddish OCR language. Performs OCR, reading documents of the Yiddish (ייִדיש) language with an understanding of spelling and linguistic context. This Default variant of Yiddish uses both an LTSM (Long Term Short Term neural network) and an OEM (shape recognition evolved from Tesseract 3) OCR strategies which can mesh them together to produce results which are both fast and accurate. To use this language please install the Nuget Package 'IronOcr.Languages.Yiddish' from https://www.nuget.org/packages/IronOcr.Languages.Yiddish/ to your Visual Studio project. Alternatively download the \"Yiddish.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage Yiddish Field Value Type Description OcrLanguage YiddishBest Yiddish OCR language. Performs OCR, reading documents of the Yiddish (ייִדיש) language with an understanding of spelling and linguistic context. This 'Best' (detailed) variant of Yiddish uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed. To use this language please install the Nuget Package 'IronOcr.Languages.Yiddish' from https://www.nuget.org/packages/IronOcr.Languages.Yiddish/ to your Visual Studio project. Alternatively download the \"Yiddish.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage YiddishBest Field Value Type Description OcrLanguage YiddishFast Yiddish OCR language. Performs OCR, reading documents of the Yiddish (ייִדיש) language with an understanding of spelling and linguistic context. This 'Fast' variant of Yiddish uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy. To use this language please install the Nuget Package 'IronOcr.Languages.Yiddish' from https://www.nuget.org/packages/IronOcr.Languages.Yiddish/ to your Visual Studio project. Alternatively download the \"Yiddish.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage YiddishFast Field Value Type Description OcrLanguage Yoruba Yoruba OCR language. Performs OCR, reading documents of the Yoruba (Yorùbá) language with an understanding of spelling and linguistic context. This Default variant of Yoruba uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine. To use this language please install the Nuget Package 'IronOcr.Languages.Yoruba' from https://www.nuget.org/packages/IronOcr.Languages.Yoruba/ to your Visual Studio project. Alternatively download the \"Yoruba.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage Yoruba Field Value Type Description OcrLanguage YorubaBest Yoruba OCR language. Performs OCR, reading documents of the Yoruba (Yorùbá) language with an understanding of spelling and linguistic context. This 'Best' (detailed) variant of Yoruba uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed. To use this language please install the Nuget Package 'IronOcr.Languages.Yoruba' from https://www.nuget.org/packages/IronOcr.Languages.Yoruba/ to your Visual Studio project. Alternatively download the \"Yoruba.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage YorubaBest Field Value Type Description OcrLanguage YorubaFast Yoruba OCR language. Performs OCR, reading documents of the Yoruba (Yorùbá) language with an understanding of spelling and linguistic context. This 'Fast' variant of Yoruba uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy. To use this language please install the Nuget Package 'IronOcr.Languages.Yoruba' from https://www.nuget.org/packages/IronOcr.Languages.Yoruba/ to your Visual Studio project. Alternatively download the \"Yoruba.ocrdata\" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property CopyToOutputDirectory = CopyIfNewer Declaration public const OcrLanguage YorubaFast Field Value Type Description OcrLanguage"
  },
  "api/IronOcr.OcrResult.Barcode.html": {
    "href": "api/IronOcr.OcrResult.Barcode.html",
    "title": "Class OcrResult.Barcode | C# OCR & Tesseract API | IronOCR",
    "keywords": "Class OcrResult.Barcode Represents a barcode discovered during OCR. See ReadBarCodes which must be set true to use this feature. Inheritance System.Object OcrResult.OcrResultElement OcrResult.Barcode Inherited Members OcrResult.OcrResultElement.ToBitmap(OcrInput) OcrResult.OcrResultElement.Width OcrResult.OcrResultElement.Height OcrResult.OcrResultElement.X OcrResult.OcrResultElement.Y OcrResult.OcrResultElement.Location Namespace : IronOcr Assembly : IronOcr.dll Syntax public class Barcode : OcrResult.OcrResultElement Properties BarcodeNumber One based number of this barcode within the OcrResult document. Declaration public int BarcodeNumber { get; } Property Value Type Description System.Int32 Format Barcode format / type. Declaration public OcrResult.BarcodeEncoding Format { get; } Property Value Type Description OcrResult.BarcodeEncoding Text Text value of the barcode. Synonym of Value . Declaration public string Text { get; } Property Value Type Description System.String Value Text value of the barcode. Declaration public string Value { get; } Property Value Type Description System.String Methods ToString() Text value of the barcode. Synonym of Value . Declaration public override string ToString() Returns Type Description System.String Inherited members ToBitmap(OcrInput) Width Height X Y Location"
  },
  "api/IronOcr.OcrResult.BarcodeEncoding.html": {
    "href": "api/IronOcr.OcrResult.BarcodeEncoding.html",
    "title": "Class OcrResult.BarcodeEncoding | C# OCR & Tesseract API | IronOCR",
    "keywords": "Class OcrResult.BarcodeEncoding Barcode Encoding Types. Inheritance System.Object OcrResult.BarcodeEncoding Namespace : IronOcr Assembly : IronOcr.dll Syntax public sealed class BarcodeEncoding : Enum Fields Aztec Aztec 2D barcode format. Aztec Code is a type of 2D barcode invented by Andrew Longacre, Jr. and Robert Hussey in 1995. Named after the resemblance of the central finder pattern to an Aztec pyramid, Aztec code has the potential to use less space than other matrix barcodes because it does not require a surrounding blank \"quiet zone\".s Declaration public const OcrResult.BarcodeEncoding Aztec Field Value Type Description OcrResult.BarcodeEncoding Codabar Codabar 1D barcode format. Codabar is a linear barcode symbology developed in 1972 by Pitney Bowes Corp Please Note: Codabar encodes numerical data (digits) only. Declaration public const OcrResult.BarcodeEncoding Codabar Field Value Type Description OcrResult.BarcodeEncoding Code128 Code 128 1D format. Code 128 is a high-density linear barcode symbology defined in ISO/IEC 15417:2007. It is used for alphanumeric or numeric-only barcodes. Declaration public const OcrResult.BarcodeEncoding Code128 Field Value Type Description OcrResult.BarcodeEncoding Code39 Code 39 1D barcode format. Code 39 is a variable length, discrete barcode symbology. The Code 39 specification defines 43 characters, consisting of uppercase letters (A through Z). Declaration public const OcrResult.BarcodeEncoding Code39 Field Value Type Description OcrResult.BarcodeEncoding Code93 Code 93 1D barcode format. Code 93 is a barcode symbology designed in 1982 by Intermec to provide a higher density and data security enhancement to Code 39. Code 93 Supports encoding of only the following ASCII characters: A B C D E F G H I J K L M N O P Q R S T U V W X Y Z 0 1 2 3 4 5 6 7 8 9 - . $ / + % SPACE Declaration public const OcrResult.BarcodeEncoding Code93 Field Value Type Description OcrResult.BarcodeEncoding Databar \"RSS Expanded\" or \"GS1 Databar\" barcode formats. Includes 1D barcode and stacked 2D variants of this barcode format. Declaration public const OcrResult.BarcodeEncoding Databar Field Value Type Description OcrResult.BarcodeEncoding DataMatrix Data Matrix 2D barcode format. An example of a Data Matrix code, encoding the text: \"Wikipedia, the free encyclopedia\" A Data Matrix is a two-dimensional barcode consisting of black and white \"cells\" or modules arranged in either a square or rectangular pattern, also known as a matrix. The information to be encoded can be text or numeric data. Usual data size is from a few bytes up to 1556 bytes. Declaration public const OcrResult.BarcodeEncoding DataMatrix Field Value Type Description OcrResult.BarcodeEncoding EAN13 EAN-13 1D format. The International Article Number (also known as European Article Number or EAN) is a standard describing a barcode symbology and numbering system used in global trade to identify a specific retail product type, in a specific packaging configuration, from a specific manufacturer.Titf Please Note: EAN-13 may only encode numerical (digits) content of length 12 or 13 digits long. Shorter Barcodes will have trailing zeros (000) prepended to the start of the number automatically. Declaration public const OcrResult.BarcodeEncoding EAN13 Field Value Type Description OcrResult.BarcodeEncoding EAN8 EAN-8 1D barcode format. An EAN-8 is an EAN/UPC symbology barcode and is derived from the longer International Article Number (EAN-13) code. Please Note: EAN-8 may only encode numerical (digits) content of length 7 or 8 digits long. Shorter Barcodes will have trailing zeros (000) prepended to the start of the number automatically. Declaration public const OcrResult.BarcodeEncoding EAN8 Field Value Type Description OcrResult.BarcodeEncoding IntelligentMail Intelligent Mail 2D barcode format. The Intelligent Mail Barcode (Also known as \"IM Barcode\" or \"USPS OneCode Barcodes\" or \"IMB\") is a 65-bar barcode for use on mail in the United States. The term \"Intelligent Mail\" refers to services offered by the United States Postal Service for domestic mail delivery. The IM barcode is intended to provide greater information and functionality than its predecessors POSTNET and PLANET. Declaration public const OcrResult.BarcodeEncoding IntelligentMail Field Value Type Description OcrResult.BarcodeEncoding ITF ITF (Interleaved Two of Five) 1D format. ITF-14 is the GS1 implementation of an Interleaved 2 of 5 (ITF) bar code to encode a Global Trade Item Number. ITF-14 symbols are generally used on packaging levels of a product, such as a case box of 24 cans of soup. The ITF-14 will always encode 14 digits.s Please Note: ITF encodes numerical data only. If the number if digits is not even, a '0' will automatically be prepended. Declaration public const OcrResult.BarcodeEncoding ITF Field Value Type Description OcrResult.BarcodeEncoding MaxiCode MaxiCode 2D barcode format. MaxiCode is a public domain, machine-readable symbol system originally created and used by United Parcel Service. Suitable for tracking and managing the shipment of packages, it resembles a barcode, but uses dots arranged in a hexagonal grid instead . Declaration public const OcrResult.BarcodeEncoding MaxiCode Field Value Type Description OcrResult.BarcodeEncoding MSI MSI 1D format. MSI is a barcode symbology developed by the MSI Data Corporation, based on the original Plessey Code symbology. Declaration public const OcrResult.BarcodeEncoding MSI Field Value Type Description OcrResult.BarcodeEncoding Other Unspecified Barcode Encoding Declaration public const OcrResult.BarcodeEncoding Other Field Value Type Description OcrResult.BarcodeEncoding PDF417 PDF417 format. PDF417 is a stacked linear barcode symbol format used in a variety of applications, primarily transport, identification cards, and inventory management. PDF stands for Portable Data File. The 417 signifies that each pattern in the code consists of 4 bars and spaces, and that each pattern is 17 units long. The PDF417 symbology was invented by Dr. Ynjiun P. Wang at Symbol Technologies in 1991. (Wang 1993) It is ISO standard 15438. Declaration public const OcrResult.BarcodeEncoding PDF417 Field Value Type Description OcrResult.BarcodeEncoding PharmaCode Pharmaceutical Binary Code. A reading fault tolerant binary barcode standard used in the medical industry. https://en.wikipedia.org/wiki/Pharmacode Declaration public const OcrResult.BarcodeEncoding PharmaCode Field Value Type Description OcrResult.BarcodeEncoding Plessey Plessey 1D format. Plessey Code is a 1D linear barcode symbology based on pulse width modulation, developed in 1971 by The Plessey Company PLC, a British-based company. Declaration public const OcrResult.BarcodeEncoding Plessey Field Value Type Description OcrResult.BarcodeEncoding QRCode QR Code 2D barcode format. QR code (abbreviated from Quick Response Code) is the trademark for a type of matrix barcode (or two-dimensional barcode) first designed in 1994 for the automotive industry in Japan. A barcode is a machine-readable optical label that contains information about the item to which it is attached. A QR code uses four standardized encoding modes (numeric, alphanumeric, byte/binary, and kanji) to efficiently store data; extensions may also be used. Declaration public const OcrResult.BarcodeEncoding QRCode Field Value Type Description OcrResult.BarcodeEncoding Rss14 Reduce Space Symbology 14 barcode format. May represent a 1D barcode or Stacked 2D barcode. RSS 14 barcode (Reduce Space Symbology) encodes the full 14-digit EAN.UCC item identification in a symbol that can be omni-directionally scanned by suitably configured point-of-sale laser scanners. It is the latest barcode type for space-constrained identification from EAN International and the Uniform Code Council, Inc.. RSS barcodes have been identified to target the grocery industry and in healthcare, where items are too small to allow for other barcode symbologies. Declaration public const OcrResult.BarcodeEncoding Rss14 Field Value Type Description OcrResult.BarcodeEncoding UPCA UPC-A 1D format. The Universal Product Code (UPC) is a barcode symbology that is widely used in the United States, Canada, United Kingdom, Australia, New Zealand, in Europe and other countries for tracking trade items in stores. UPC (technically refers to UPC-A) consists of 12 numeric digits, that are uniquely assigned to each trade item. Along with the related EAN barcode, the UPC is the barcode mainly used for scanning of trade items at the point of sale, per GS1 specifications. Please Note: UPCA may only encode numerical (digits) content of length 12 or 13 digits long. Shorter Barcodes will have trailing zeros (000) prepended to the start of the number automatically. Declaration public const OcrResult.BarcodeEncoding UPCA Field Value Type Description OcrResult.BarcodeEncoding UPCE UPC-E 1D format. To allow the use of UPC barcodes on smaller packages, where a full 12-digit barcode may not fit, a 'zero-suppressed' version of UPC was developed, called UPC-E, in which the number system digit, all trailing zeros in the manufacturer code, and all leading zeros in the product code, are suppressed (omitted).MSI Please Note: UPCE may only encode numerical (digits) content of between 8 and more than 13 digits long. Declaration public const OcrResult.BarcodeEncoding UPCE Field Value Type Description OcrResult.BarcodeEncoding value__ Declaration public int value__ Field Value Type Description System.Int32"
  },
  "api/IronOcr.OcrResult.Block.html": {
    "href": "api/IronOcr.OcrResult.Block.html",
    "title": "Class OcrResult.Block | C# OCR & Tesseract API | IronOCR",
    "keywords": "Class OcrResult.Block Represents a block of text containing zero or more paragraphs. Inheritance System.Object OcrResult.OcrResultElement OcrResult.OcrResultTextElement OcrResult.Block Inherited Members OcrResult.OcrResultTextElement.ToString() OcrResult.OcrResultTextElement.TextDirection OcrResult.OcrResultTextElement.Text OcrResult.OcrResultTextElement.Confidence OcrResult.OcrResultElement.ToBitmap(OcrInput) OcrResult.OcrResultElement.Width OcrResult.OcrResultElement.Height OcrResult.OcrResultElement.X OcrResult.OcrResultElement.Y OcrResult.OcrResultElement.Location Namespace : IronOcr Assembly : IronOcr.dll Syntax public class Block : OcrResult.OcrResultTextElement Properties BlockNumber A unique ID for this Block within its OcrResult object. The first block will be numbered 1. Declaration public int BlockNumber { get; } Property Value Type Description System.Int32 BlockType A string representation of the type of block. See https://github.com/charlesw/tesseract/blob/master/src/Tesseract/PolyBlockType.cs Declaration public string BlockType { get; } Property Value Type Description System.String Characters Every character of text within this block - in order. Declaration public OcrResult.Character[] Characters { get; } Property Value Type Description OcrResult.Character [] Lines Every line of text within this block. Declaration public OcrResult.Line[] Lines { get; } Property Value Type Description OcrResult.Line [] Paragraphs Every paragraph of text within this block. Declaration public OcrResult.Paragraph[] Paragraphs { get; } Property Value Type Description OcrResult.Paragraph [] Words Every word of text within this block - in order. Declaration public OcrResult.Word[] Words { get; } Property Value Type Description OcrResult.Word [] Inherited members ToString() TextDirection Text Confidence ToBitmap(OcrInput) Width Height X Y Location"
  },
  "api/IronOcr.OcrResult.Character.html": {
    "href": "api/IronOcr.OcrResult.Character.html",
    "title": "Class OcrResult.Character | C# OCR & Tesseract API | IronOCR",
    "keywords": "Class OcrResult.Character Represents a single character (char) of text. Inheritance System.Object OcrResult.OcrResultElement OcrResult.OcrResultTextElement OcrResult.Character Inherited Members OcrResult.OcrResultTextElement.ToString() OcrResult.OcrResultTextElement.TextDirection OcrResult.OcrResultTextElement.Text OcrResult.OcrResultTextElement.Confidence OcrResult.OcrResultElement.ToBitmap(OcrInput) OcrResult.OcrResultElement.Width OcrResult.OcrResultElement.Height OcrResult.OcrResultElement.X OcrResult.OcrResultElement.Y OcrResult.OcrResultElement.Location Namespace : IronOcr Assembly : IronOcr.dll Syntax public class Character : OcrResult.OcrResultTextElement Fields Block The block of text containing this character. Declaration public OcrResult.Block Block Field Value Type Description OcrResult.Block Line The line of text containing this character. Declaration public OcrResult.Line Line Field Value Type Description OcrResult.Line Paragraph The paragraph of text containing this character. Declaration public OcrResult.Paragraph Paragraph Field Value Type Description OcrResult.Paragraph Word The word containing this character. Declaration public OcrResult.Word Word Field Value Type Description OcrResult.Word Properties CharacterNumber A unique ID number for this character within the document. The first character will be 1. Declaration public int CharacterNumber { get; } Property Value Type Description System.Int32 Choices A list of alternative words choices and their statistical relevance. Declaration public OcrResult.Choice[] Choices { get; } Property Value Type Description OcrResult.Choice [] Font Detailed font information for this character. May only be visible using TesseractOnly . Declaration public OcrResult.OcrFont Font { get; } Property Value Type Description OcrResult.OcrFont Methods ToChar() Converts this object to a System.Char Declaration public char ToChar() Returns Type Description System.Char A single character Inherited members ToString() TextDirection Text Confidence ToBitmap(OcrInput) Width Height X Y Location"
  },
  "api/IronOcr.OcrResult.Choice.html": {
    "href": "api/IronOcr.OcrResult.Choice.html",
    "title": "Class OcrResult.Choice | C# OCR & Tesseract API | IronOCR",
    "keywords": "Class OcrResult.Choice Inheritance System.Object OcrResult.Choice Namespace : IronOcr Assembly : IronOcr.dll Syntax public class Choice : Object Constructors Choice() Declaration public Choice() Fields Confidence Statistical Confidence as a percentage. Declaration public double Confidence Field Value Type Description System.Double Text The text for this word choice. Declaration public string Text Field Value Type Description System.String"
  },
  "api/IronOcr.OcrResult.html": {
    "href": "api/IronOcr.OcrResult.html",
    "title": "Class OcrResult | C# OCR & Tesseract API | IronOCR",
    "keywords": "Class OcrResult A full document object model (DOM) for results when IronTesseract reads an image or OcrInput . Gives access to Text, Pages, Words, Paragraphs, Lines, Words, Characters, Images, Barcodes, Coordinates, Font information in granular detail. Inheritance System.Object OcrResult Namespace : IronOcr Assembly : IronOcr.dll Syntax public class OcrResult : Object Properties Barcodes Represents every barcode discovered in this OCR document. Developers must set ReadBarCodes = True for this feature to be active. Declaration public OcrResult.Barcode[] Barcodes { get; } Property Value Type Description OcrResult.Barcode [] Blocks Represents every block of text discovered in this OCR document in order of appearance. A Block is a collection of 1 or more paragraphs located closely together. Declaration public OcrResult.Block[] Blocks { get; } Property Value Type Description OcrResult.Block [] Characters Represents every symbol (char) discovered in this OCR document in order of appearance. Declaration public OcrResult.Character[] Characters { get; } Property Value Type Description OcrResult.Character [] Confidence OCR statistical accuracy confidence as an average of every character. 1 = 100%, 0 = 0% Declaration public double Confidence { get; } Property Value Type Description System.Double EngineModeUsed The TesseractEngineMode used to generate this OcrResult . Declaration public TesseractEngineMode EngineModeUsed { get; } Property Value Type Description TesseractEngineMode See Also TesseractEngineMode Lines Represents every line of text discovered in this OCR document in order of appearance. Declaration public OcrResult.Line[] Lines { get; } Property Value Type Description OcrResult.Line [] Pages Represents every page within this OcrResult object. Declaration public OcrResult.Page[] Pages { get; } Property Value Type Description OcrResult.Page [] Paragraphs Represents every paragraph of text discovered in this OCR document in order of appearance. Declaration public OcrResult.Paragraph[] Paragraphs { get; } Property Value Type Description OcrResult.Paragraph [] TesseractVersion The TesseractVersion used to generate this OcrResult . Declaration public string TesseractVersion { get; } Property Value Type Description System.String See Also TesseractVersion Text Returns the entire Text content of this OCR document. 4 System.Environment.NewLine characters will separate pages. Declaration public string Text { get; } Property Value Type Description System.String Words Represents every word discovered in this OCR document in order of appearance. Declaration public OcrResult.Word[] Words { get; } Property Value Type Description OcrResult.Word [] Methods FromJson(String) Deserializes the JSON to the OcrResult object. Declaration public static OcrResult FromJson(string json) Parameters Type Name Description System.String json A JSON string representation of the OcrResult . Returns Type Description OcrResult The deserialized OcrResult object from the JSON string. Exceptions Type Condition System.ArgumentNullException json is null SaveAsHocrFile(String) Exports an hOCR version of the Tesseract results object document. This is an XHTML file which can be read as XML or HTML. https://en.wikipedia.org/wiki/HOCR Declaration public void SaveAsHocrFile(string Path) Parameters Type Name Description System.String Path The file path the xhtml file will be saved to. SaveAsHocrString() Exports an hOCR version of the Tesseract results object document as a string. This is an XHTML file which can be read as XML or HTML. https://en.wikipedia.org/wiki/HOCR Declaration public string SaveAsHocrString() Returns Type Description System.String SaveAsSearchablePdf(String) Exports a searchable PDF version of the OCR input document. Works for all input formats including PDFs & Images. Declaration public void SaveAsSearchablePdf(string Path) Parameters Type Name Description System.String Path The file path the PDF will be saved to. SaveAsSearchablePdfBytes() Exports a searchable PDF version of the OCR input document as a byte array. Works for all input formats including PDFs & Images. Declaration public byte[] SaveAsSearchablePdfBytes() Returns Type Description System.Byte [] SaveAsSearchablePdfStream() Exports a searchable PDF version of the OCR input document as a Stream. Works for all input formats including PDFs & Images. Declaration public Stream SaveAsSearchablePdfStream() Returns Type Description System.IO.Stream SaveAsTextFile(String) Exports a .txt version of the Tesseract results objects document. This is a plain text file. 4 Environment.Newlines between pages. 2 Environment.Newlines between paragraphs. Declaration public void SaveAsTextFile(string Path) Parameters Type Name Description System.String Path The file path the text file will be saved to. ToJson() Serializes the OcrResult object to a JSON string. Declaration public string ToJson() Returns Type Description System.String The JSON string representation of the OcrResult . Remarks Use the method FromJson(String) for deserializing the JSON to the OcrResult object."
  },
  "api/IronOcr.OcrResult.Line.html": {
    "href": "api/IronOcr.OcrResult.Line.html",
    "title": "Class OcrResult.Line | C# OCR & Tesseract API | IronOCR",
    "keywords": "Class OcrResult.Line A line of text within an Paragraph Inheritance System.Object OcrResult.OcrResultElement OcrResult.OcrResultTextElement OcrResult.Line Inherited Members OcrResult.OcrResultTextElement.ToString() OcrResult.OcrResultTextElement.TextDirection OcrResult.OcrResultTextElement.Text OcrResult.OcrResultTextElement.Confidence OcrResult.OcrResultElement.ToBitmap(OcrInput) OcrResult.OcrResultElement.Width OcrResult.OcrResultElement.Height OcrResult.OcrResultElement.X OcrResult.OcrResultElement.Y OcrResult.OcrResultElement.Location Namespace : IronOcr Assembly : IronOcr.dll Syntax public class Line : OcrResult.OcrResultTextElement Fields BaselineAngle Angle at which this line of text slopes. Declaration public double BaselineAngle Field Value Type Description System.Double BaselineOffset pixel offset defining how this line of text slopes. Declaration public double BaselineOffset Field Value Type Description System.Double Block The Block of text which contains this line. Declaration public OcrResult.Block Block Field Value Type Description OcrResult.Block Paragraph The Paragraph which contains this line of text. Declaration public OcrResult.Paragraph Paragraph Field Value Type Description OcrResult.Paragraph Properties Characters Every symbol (char) contained within this Line. In order of appearance. Declaration public OcrResult.Character[] Characters { get; } Property Value Type Description OcrResult.Character [] LineNumber One based line number (identified) within this OcrResult object. Declaration public int LineNumber { get; } Property Value Type Description System.Int32 Words Every OcrResult.Word contained within this Line. In order of appearance. Declaration public OcrResult.Word[] Words { get; } Property Value Type Description OcrResult.Word [] Inherited members ToString() TextDirection Text Confidence ToBitmap(OcrInput) Width Height X Y Location"
  },
  "api/IronOcr.OcrResult.OcrFont.html": {
    "href": "api/IronOcr.OcrResult.OcrFont.html",
    "title": "Class OcrResult.OcrFont | C# OCR & Tesseract API | IronOCR",
    "keywords": "Class OcrResult.OcrFont Detailed font information returned when using Tesseract OEM engine modes. Inheritance System.Object OcrResult.OcrFont Namespace : IronOcr Assembly : IronOcr.dll Syntax public class OcrFont : Object Properties FontName Best guess at the closest known typeface name. Declaration public string FontName { get; } Property Value Type Description System.String FontSize Best guess at the font height in points. Declaration public double FontSize { get; } Property Value Type Description System.Double IsBold Is the text Bold. Declaration public bool IsBold { get; } Property Value Type Description System.Boolean IsCaligraphic Is the text in a calligraphic or \"Fruktur\" style. Declaration public bool IsCaligraphic { get; } Property Value Type Description System.Boolean IsFixedWidth Is the text FixedWidth (monospaced like Courier). Declaration public bool IsFixedWidth { get; } Property Value Type Description System.Boolean IsItalic Is the text Italic. Declaration public bool IsItalic { get; } Property Value Type Description System.Boolean IsSerif Is the text Serif (like Times-New Roman). Declaration public bool IsSerif { get; } Property Value Type Description System.Boolean IsSmallCaps Is the text in \"Small Caps\" (half height capital letters). Declaration public bool IsSmallCaps { get; } Property Value Type Description System.Boolean IsUnderlined Is the text Underlined. Declaration public bool IsUnderlined { get; } Property Value Type Description System.Boolean"
  },
  "api/IronOcr.OcrResult.OcrResultElement.html": {
    "href": "api/IronOcr.OcrResult.OcrResultElement.html",
    "title": "Class OcrResult.OcrResultElement | C# OCR & Tesseract API | IronOCR",
    "keywords": "Class OcrResult.OcrResultElement Lowest level of abstract OcrResult DOM element. All result objects extend from this including OcrResult.Barcode , OcrResult.Character , OcrResult.Word , OcrResult.Line , OcrResult.Paragraph ... Inheritance System.Object OcrResult.OcrResultElement OcrResult.Barcode OcrResult.OcrResultTextElement Namespace : IronOcr Assembly : IronOcr.dll Syntax public abstract class OcrResultElement : Object Constructors OcrResultElement() Declaration protected OcrResultElement() Properties Height Height in Pixels Declaration public int Height { get; } Property Value Type Description System.Int32 Location Returns a System.Drawing.Rectangle of the location and size of this element within an OCR page. Units are pixels and reference locations on the source image. Declaration public Rectangle Location { get; } Property Value Type Description System.Drawing.Rectangle Width Width in Pixels Declaration public int Width { get; } Property Value Type Description System.Int32 X Position of this OCR Results object on the source image (page) in pixels counted from the left edge. Declaration public int X { get; } Property Value Type Description System.Int32 Y Position of this OCR Results object on the source image (page) in pixels counted down from the top edge. Declaration public int Y { get; } Property Value Type Description System.Int32 Methods ToBitmap(OcrInput) Returns an image of this element. Declaration public Bitmap ToBitmap(OcrInput Input) Parameters Type Name Description OcrInput Input The OcrInput document that was read by IronTesseract Returns Type Description System.Drawing.Bitmap A System.Drawing.Bitmap which should be disposed."
  },
  "api/IronOcr.OcrResult.OcrResultTextElement.html": {
    "href": "api/IronOcr.OcrResult.OcrResultTextElement.html",
    "title": "Class OcrResult.OcrResultTextElement | C# OCR & Tesseract API | IronOCR",
    "keywords": "Class OcrResult.OcrResultTextElement An abstract class representing discovered OCR DOM text elements such as OcrResult.Character , OcrResult.Word , OcrResult.Line , OcrResult.Paragraph ... Inheritance System.Object OcrResult.OcrResultElement OcrResult.OcrResultTextElement OcrResult.Block OcrResult.Character OcrResult.Line OcrResult.Page OcrResult.Paragraph OcrResult.Word Inherited Members OcrResult.OcrResultElement.ToBitmap(OcrInput) OcrResult.OcrResultElement.Width OcrResult.OcrResultElement.Height OcrResult.OcrResultElement.X OcrResult.OcrResultElement.Y OcrResult.OcrResultElement.Location Namespace : IronOcr Assembly : IronOcr.dll Syntax public abstract class OcrResultTextElement : OcrResult.OcrResultElement Constructors OcrResultTextElement() Declaration protected OcrResultTextElement() Properties Confidence OCR statistical accuracy confidence as an average of every character within this object. 1 = 100%, 0 = 0% Declaration public virtual double Confidence { get; } Property Value Type Description System.Double Text The full text of this OcrResultElement as a string. Declaration public string Text { get; } Property Value Type Description System.String TextDirection The direction text was read in: such as 'Left to Right' or 'Top to Bottom'. Declaration public OcrResult.TextFlow TextDirection { get; } Property Value Type Description OcrResult.TextFlow Methods ToString() Full OCR text discovered within this object. A synonym of Text . Declaration public override string ToString() Returns Type Description System.String Inherited members ToBitmap(OcrInput) Width Height X Y Location"
  },
  "api/IronOcr.OcrResult.Page.html": {
    "href": "api/IronOcr.OcrResult.Page.html",
    "title": "Class OcrResult.Page | C# OCR & Tesseract API | IronOCR",
    "keywords": "Class OcrResult.Page Represents a single page within an OcrResult object. Inheritance System.Object OcrResult.OcrResultElement OcrResult.OcrResultTextElement OcrResult.Page Inherited Members OcrResult.OcrResultTextElement.ToString() OcrResult.OcrResultTextElement.TextDirection OcrResult.OcrResultTextElement.Text OcrResult.OcrResultElement.ToBitmap(OcrInput) OcrResult.OcrResultElement.Width OcrResult.OcrResultElement.Height OcrResult.OcrResultElement.X OcrResult.OcrResultElement.Y OcrResult.OcrResultElement.Location Namespace : IronOcr Assembly : IronOcr.dll Syntax public class Page : OcrResult.OcrResultTextElement Fields PdfExtractedText When Reading PDFs. Gives an alternative value to Text which comes from machine decoding PDF document strings only. Can not read text from images. Declaration public string PdfExtractedText Field Value Type Description System.String Properties Barcodes Represents every barcode discovered in this Page. Developers must set ReadBarCodes = True for this feature to be active. Declaration public OcrResult.Barcode[] Barcodes { get; } Property Value Type Description OcrResult.Barcode [] Blocks Represents every block of text discovered within this OcrResult.Page in order of appearance. Declaration public OcrResult.Block[] Blocks { get; } Property Value Type Description OcrResult.Block [] Characters Represents every symbol (char) discovered within this OcrResult.Page in order of appearance. Declaration public OcrResult.Character[] Characters { get; } Property Value Type Description OcrResult.Character [] Confidence OCR statistical accuracy confidence as an average of every character. 1 = 100%, 0 = 0% Declaration public override double Confidence { get; } Property Value Type Description System.Double Overrides OcrResult.OcrResultTextElement.Confidence ContentArea Represents the rectangular area of this OcrResult.Page page on which OCR has been applied. Dimensions are in Pixels. Default value is the entire size of the Page. Relates to Declaration public Rectangle ContentArea { get; set; } Property Value Type Description System.Drawing.Rectangle Lines Represents every line of text discovered within this OcrResult.Page in order of appearance. Declaration public OcrResult.Line[] Lines { get; } Property Value Type Description OcrResult.Line [] PageNumber A 1 based unique identifier for this page within an OcrResult object. The first page is number 1. Declaration public int PageNumber { get; } Property Value Type Description System.Int32 Paragraphs Represents every paragraph of text discovered within this OcrResult.Page in order of appearance. Declaration public OcrResult.Paragraph[] Paragraphs { get; } Property Value Type Description OcrResult.Paragraph [] Rotation The number of degrees the original page has been rotated to produce this result. Declaration public double Rotation { get; } Property Value Type Description System.Double WordCount The number of words on this page. Declaration public int WordCount { get; } Property Value Type Description System.Int32 Words Represents every word discovered within this OcrResult.Page in order of appearance. Declaration public OcrResult.Word[] Words { get; } Property Value Type Description OcrResult.Word [] Methods ContentAreaToBitmap(OcrInput) Returns an image of the ContentArea of this OcrResult.Page . Declaration public Bitmap ContentAreaToBitmap(OcrInput Input) Parameters Type Name Description OcrInput Input The OcrInput document that was read by IronTesseract Returns Type Description System.Drawing.Bitmap A System.Drawing.Bitmap which should be correctly disposed. Inherited members ToString() TextDirection Text ToBitmap(OcrInput) Width Height X Y Location"
  },
  "api/IronOcr.OcrResult.Paragraph.html": {
    "href": "api/IronOcr.OcrResult.Paragraph.html",
    "title": "Class OcrResult.Paragraph | C# OCR & Tesseract API | IronOCR",
    "keywords": "Class OcrResult.Paragraph Represents a paragraph of text with an OcrResult object. Inheritance System.Object OcrResult.OcrResultElement OcrResult.OcrResultTextElement OcrResult.Paragraph Inherited Members OcrResult.OcrResultTextElement.ToString() OcrResult.OcrResultTextElement.TextDirection OcrResult.OcrResultTextElement.Text OcrResult.OcrResultTextElement.Confidence OcrResult.OcrResultElement.ToBitmap(OcrInput) OcrResult.OcrResultElement.Width OcrResult.OcrResultElement.Height OcrResult.OcrResultElement.X OcrResult.OcrResultElement.Y OcrResult.OcrResultElement.Location Namespace : IronOcr Assembly : IronOcr.dll Syntax public class Paragraph : OcrResult.OcrResultTextElement Fields Block Represents the Block of text that contains this paragraph. Declaration public OcrResult.Block Block Field Value Type Description OcrResult.Block Properties Characters Represents every character in this paragraph, in order of appearance. Declaration public OcrResult.Character[] Characters { get; } Property Value Type Description OcrResult.Character [] Lines Represents every line of text in this paragraph. Declaration public OcrResult.Line[] Lines { get; } Property Value Type Description OcrResult.Line [] ParagraphNumber 1 based unique numerical identifier for this paragraph within the OcrResult document. Declaration public int ParagraphNumber { get; } Property Value Type Description System.Int32 Words Represents every word in this paragraph, in order of appearance. Declaration public OcrResult.Word[] Words { get; } Property Value Type Description OcrResult.Word [] Inherited members ToString() TextDirection Text Confidence ToBitmap(OcrInput) Width Height X Y Location"
  },
  "api/IronOcr.OcrResult.TextFlow.html": {
    "href": "api/IronOcr.OcrResult.TextFlow.html",
    "title": "Class OcrResult.TextFlow | C# OCR & Tesseract API | IronOCR",
    "keywords": "Class OcrResult.TextFlow Describes text direction Inheritance System.Object OcrResult.TextFlow Namespace : IronOcr Assembly : IronOcr.dll Syntax public sealed class TextFlow : Enum Fields LeftToRight LTR Languages such as English. Declaration public const OcrResult.TextFlow LeftToRight Field Value Type Description OcrResult.TextFlow RightToLeft RTL Languages such as Arabic. Declaration public const OcrResult.TextFlow RightToLeft Field Value Type Description OcrResult.TextFlow TopToBottom Vertical languages such as found in some forms of East Asian script. Declaration public const OcrResult.TextFlow TopToBottom Field Value Type Description OcrResult.TextFlow value__ Declaration public int value__ Field Value Type Description System.Int32"
  },
  "api/IronOcr.OcrResult.Word.html": {
    "href": "api/IronOcr.OcrResult.Word.html",
    "title": "Class OcrResult.Word | C# OCR & Tesseract API | IronOCR",
    "keywords": "Class OcrResult.Word Represents a Word discovered during OCR. Inheritance System.Object OcrResult.OcrResultElement OcrResult.OcrResultTextElement OcrResult.Word Inherited Members OcrResult.OcrResultTextElement.ToString() OcrResult.OcrResultTextElement.TextDirection OcrResult.OcrResultTextElement.Text OcrResult.OcrResultTextElement.Confidence OcrResult.OcrResultElement.ToBitmap(OcrInput) OcrResult.OcrResultElement.Width OcrResult.OcrResultElement.Height OcrResult.OcrResultElement.X OcrResult.OcrResultElement.Y OcrResult.OcrResultElement.Location Namespace : IronOcr Assembly : IronOcr.dll Syntax public class Word : OcrResult.OcrResultTextElement Fields Block The Block containing this Word. Declaration public OcrResult.Block Block Field Value Type Description OcrResult.Block Line The Line containing this Word. Declaration public OcrResult.Line Line Field Value Type Description OcrResult.Line Paragraph The Paragraph containing this Word. Declaration public OcrResult.Paragraph Paragraph Field Value Type Description OcrResult.Paragraph Properties Characters A list of every symbol (char) within this word in order. Declaration public OcrResult.Character[] Characters { get; } Property Value Type Description OcrResult.Character [] Font Legacy. Null unless the Tesseract 3 Engine Mode \"TesseractMode\" is used. Declaration public OcrResult.OcrFont Font { get; } Property Value Type Description OcrResult.OcrFont WordNumber 1 based number to identify this word within the OcrResult Declaration public int WordNumber { get; } Property Value Type Description System.Int32 Inherited members ToString() TextDirection Text Confidence ToBitmap(OcrInput) Width Height X Y Location See Also OcrResult"
  },
  "api/IronOcr.OpenCvClient.html": {
    "href": "api/IronOcr.OpenCvClient.html",
    "title": "Class OpenCvClient | C# OCR & Tesseract API | IronOCR",
    "keywords": "Class OpenCvClient Inheritance System.Object OpenCvClient Namespace : IronOcr Assembly : IronOcr.dll Syntax public class OpenCvClient : Object Properties Instance Declaration public static OpenCvClient Instance { get; } Property Value Type Description OpenCvClient Methods Dispose() Declaration public virtual void Dispose() Finalize() Declaration protected override void Finalize() FindTextRegion(Bitmap, Double, Int32, Boolean, Boolean) Declaration public Rectangle FindTextRegion(Bitmap bitmap, double scale, int dilation_amount, bool binarize, bool invert) Parameters Type Name Description System.Drawing.Bitmap bitmap System.Double scale System.Int32 dilation_amount System.Boolean binarize System.Boolean invert Returns Type Description System.Drawing.Rectangle FindTextRegions(Bitmap, Double, Int32, Boolean, Boolean) Declaration public List<Rectangle> FindTextRegions(Bitmap bitmap, double scale, int dilation_amount, bool binarize, bool invert) Parameters Type Name Description System.Drawing.Bitmap bitmap System.Double scale System.Int32 dilation_amount System.Boolean binarize System.Boolean invert Returns Type Description System.Collections.Generic.List < System.Drawing.Rectangle > OpenCvClientInit() Declaration protected virtual void OpenCvClientInit()"
  },
  "api/IronOcr.OrientationConfidence.html": {
    "href": "api/IronOcr.OrientationConfidence.html",
    "title": "Class OrientationConfidence | C# OCR & Tesseract API | IronOCR",
    "keywords": "Class OrientationConfidence Inheritance System.Object OrientationConfidence Namespace : IronOcr Assembly : IronOcr.dll Syntax public class OrientationConfidence : Object Constructors OrientationConfidence() Declaration public OrientationConfidence() Properties ActualConfidence An array of the actual Teseract OSD confidences returned, one per page. If these values are lower than MinConfidence , then the page will not be rotated. Declaration public float[] ActualConfidence { get; } Property Value Type Description System.Single [] MinConfidence A confidence threshold. If this criteria is not met, pages will not be rotated by OSD. MinConfidence of zero means OSD id full automatic and trusted. Declaration public float MinConfidence { get; set; } Property Value Type Description System.Single"
  },
  "api/IronOcr.TesseractConfiguration.html": {
    "href": "api/IronOcr.TesseractConfiguration.html",
    "title": "Class TesseractConfiguration | C# OCR & Tesseract API | IronOCR",
    "keywords": "Class TesseractConfiguration A configuration object that fine-tunes Tesseract behavior at an Instance level. Gives access to every option available to tesseract command line or C++ API users. Inheritance System.Object TesseractConfiguration Implements System.ICloneable Namespace : IronOcr Assembly : IronOcr.dll Syntax public class TesseractConfiguration : Object Constructors TesseractConfiguration() Declaration public TesseractConfiguration() Fields _blacklist Declaration protected string _blacklist Field Value Type Description System.String _whitelist Declaration protected string _whitelist Field Value Type Description System.String EngineMode Allows the developer to choose the algorithm Tesseract will use for OCR. TesseractAndLstm is the recommended behavior for IronOCR. Declaration public TesseractEngineMode EngineMode Field Value Type Description TesseractEngineMode PageSegmentationMode Determines how a page is scanned to find potential blocks of text. Best documented in Tesseract developer websites. AutoOsd is a safe default. Declaration public TesseractPageSegmentationMode PageSegmentationMode Field Value Type Description TesseractPageSegmentationMode ReadBarCodes Optionally turns on Barcode reading alongside OCR. Declaration public bool ReadBarCodes Field Value Type Description System.Boolean RenderSearchablePdfsAndHocr Prerenders searchable PDF documents and HOCR files during Tesseract read operations. Required True to use SaveAsHocrFile(String) and SaveAsSearchablePdf(String) methods. Declaration public bool RenderSearchablePdfsAndHocr Field Value Type Description System.Boolean TesseractVariables Add Tesseract configuration variables of type bool, int, double or string. Gives access to all Tesseract command-line and config file options. To learn how to use this, Tesseract documentation is very sparse. Please use TrySaveAllTesseractVariablesToFile(String) to output all available tesseract variables for your installation of Tesseract. Declaration public Dictionary<string, object> TesseractVariables Field Value Type Description System.Collections.Generic.Dictionary < System.String , System.Object > TesseractVersion IronOcr supports Tesseract 5.1 Declaration public TesseractVersion TesseractVersion Field Value Type Description TesseractVersion Properties BlackListCharacters If set, any characters in this string will not be recognized by IronTesseract OCR. An example use-case is to remove characters with accents. BlackListCharacters and WhiteListCharacters can positively impact speed and accuracy if set thoughtfully. Declaration public string BlackListCharacters { get; set; } Property Value Type Description System.String See Also WhiteListCharacters WhiteListCharacters If set, only characters in this string will be read by IronTesseract. Remember to include punctuation marks and space characters. If know, WhiteListCharacters can dramatically increase performance and accuracy. Also very useful if we expect only numbers or only letters. Declaration public string WhiteListCharacters { get; set; } Property Value Type Description System.String Methods Clone() Clone this See TesseractConfiguration Declaration public object Clone() Returns Type Description System.Object A copy of this TesseractConfiguration as an object. TrySaveAllTesseractVariablesToFile(String) Saves all Tesseract internal settings for this Configuration to a plain text file. Declaration public bool TrySaveAllTesseractVariablesToFile(string Path) Parameters Type Name Description System.String Path A valid file path. Recommended file extension is .txt Returns Type Description System.Boolean True if file successfully saved Implements System.ICloneable"
  },
  "api/IronOcr.TesseractEngineMode.html": {
    "href": "api/IronOcr.TesseractEngineMode.html",
    "title": "Class TesseractEngineMode | C# OCR & Tesseract API | IronOCR",
    "keywords": "Class TesseractEngineMode Allows the developer to choose the algorithm Tesseract will use for OCR. TesseractAndLstm is the recommended behavior for IronOCR. Inheritance System.Object TesseractEngineMode Namespace : IronOcr Assembly : IronOcr.dll Syntax public sealed class TesseractEngineMode : Enum Fields Default The default OCR engine is used (currently LSTM-based OCR engine). Declaration public const TesseractEngineMode Default Field Value Type Description TesseractEngineMode LstmOnly Only the new LSTM-based OCR engine is used. Uses a pre programmed neural net. (Tesseract 4 + 5 Mode) Declaration public const TesseractEngineMode LstmOnly Field Value Type Description TesseractEngineMode TesseractAndLstm Both the legacy and new LSTM based OCR engine is used. (Recommended for a good balance of speed and performance) Declaration public const TesseractEngineMode TesseractAndLstm Field Value Type Description TesseractEngineMode TesseractOnly Only the legacy tesseract OCR engine is used. (Tesseract 3 OEM Mode) Declaration public const TesseractEngineMode TesseractOnly Field Value Type Description TesseractEngineMode value__ Declaration public int value__ Field Value Type Description System.Int32"
  },
  "api/IronOcr.TesseractPageSegmentationMode.html": {
    "href": "api/IronOcr.TesseractPageSegmentationMode.html",
    "title": "Class TesseractPageSegmentationMode | C# OCR & Tesseract API | IronOCR",
    "keywords": "Class TesseractPageSegmentationMode Page segmentation mode defines how your text will be searched for by Tesseract. Inheritance System.Object TesseractPageSegmentationMode Namespace : IronOcr Assembly : IronOcr.dll Syntax public sealed class TesseractPageSegmentationMode : Enum Fields Auto Fully automatic page segmentation, but no OSD. Declaration public const TesseractPageSegmentationMode Auto Field Value Type Description TesseractPageSegmentationMode AutoOnly Automatic page segmentation, but no OSD, or OCR. Declaration public const TesseractPageSegmentationMode AutoOnly Field Value Type Description TesseractPageSegmentationMode AutoOsd Automatic page segmentation with orientation and script detection (OSD). Declaration public const TesseractPageSegmentationMode AutoOsd Field Value Type Description TesseractPageSegmentationMode CircleWord Treat the image as a single word in a circle. Declaration public const TesseractPageSegmentationMode CircleWord Field Value Type Description TesseractPageSegmentationMode OsdOnly Orientation and script detection (OSD) only. Declaration public const TesseractPageSegmentationMode OsdOnly Field Value Type Description TesseractPageSegmentationMode RawLine Treat the image as a single text line, bypassing hacks that are specific to Tesseract. Declaration public const TesseractPageSegmentationMode RawLine Field Value Type Description TesseractPageSegmentationMode SingleBlock Assume a single uniform block of text. Declaration public const TesseractPageSegmentationMode SingleBlock Field Value Type Description TesseractPageSegmentationMode SingleBlockVertText Assume a single uniform block of vertically aligned text. Declaration public const TesseractPageSegmentationMode SingleBlockVertText Field Value Type Description TesseractPageSegmentationMode SingleChar Treat the image as a single character. Declaration public const TesseractPageSegmentationMode SingleChar Field Value Type Description TesseractPageSegmentationMode SingleColumn Assume a single column of text of variable sizes. Declaration public const TesseractPageSegmentationMode SingleColumn Field Value Type Description TesseractPageSegmentationMode SingleLine Treat the image as a single text line. Declaration public const TesseractPageSegmentationMode SingleLine Field Value Type Description TesseractPageSegmentationMode SingleWord Treat the image as a single word. Declaration public const TesseractPageSegmentationMode SingleWord Field Value Type Description TesseractPageSegmentationMode SparseText Find as much text as possible in no particular order. Declaration public const TesseractPageSegmentationMode SparseText Field Value Type Description TesseractPageSegmentationMode SparseTextOsd Sparse text with orientation and script detection. Declaration public const TesseractPageSegmentationMode SparseTextOsd Field Value Type Description TesseractPageSegmentationMode value__ Declaration public int value__ Field Value Type Description System.Int32"
  },
  "api/IronOcr.TesseractVersion.html": {
    "href": "api/IronOcr.TesseractVersion.html",
    "title": "Class TesseractVersion | C# OCR & Tesseract API | IronOCR",
    "keywords": "Class TesseractVersion Selects between different binary versions of Tesseract. Inheritance System.Object TesseractVersion Namespace : IronOcr Assembly : IronOcr.dll Syntax public sealed class TesseractVersion : Enum Fields Tesseract5 Tesseract 5.1 Declaration public const TesseractVersion Tesseract5 Field Value Type Description TesseractVersion value__ Declaration public int value__ Field Value Type Description System.Int32"
  },
  "api/IronSoftware.Deployment.html": {
    "href": "api/IronSoftware.Deployment.html",
    "title": "Namespace IronSoftware.Deployment | C# OCR & Tesseract API | IronOCR",
    "keywords": "Namespace IronSoftware.Deployment Classes NativeLibraryLoader"
  },
  "api/IronSoftware.Deployment.NativeLibraryLoader.html": {
    "href": "api/IronSoftware.Deployment.NativeLibraryLoader.html",
    "title": "Class NativeLibraryLoader | C# OCR & Tesseract API | IronOCR",
    "keywords": "Class NativeLibraryLoader Inheritance System.Object NativeLibraryLoader Namespace : IronSoftware.Deployment Assembly : IronOcr.dll Syntax public class NativeLibraryLoader : Object Constructors NativeLibraryLoader() Declaration public NativeLibraryLoader() Methods GetFileExtension() Declaration public string GetFileExtension() Returns Type Description System.String LoadNativeLibrary(String, String) Declaration public NativeLibrary LoadNativeLibrary(string name, string directory = null) Parameters Type Name Description System.String name System.String directory Returns Type Description NativeLibrary"
  },
  "api/IronSoftware.html": {
    "href": "api/IronSoftware.html",
    "title": "Namespace IronSoftware | C# OCR & Tesseract API | IronOCR",
    "keywords": "Namespace IronSoftware Classes Logger Logger.LoggingModes"
  },
  "api/IronSoftware.Logger.html": {
    "href": "api/IronSoftware.Logger.html",
    "title": "Class Logger | C# OCR & Tesseract API | IronOCR",
    "keywords": "Class Logger Inheritance System.Object Logger Namespace : IronSoftware Assembly : IronOcr.dll Syntax public static class Logger : Object Properties CustomLogger Declaration public static ILogger CustomLogger { get; set; } Property Value Type Description Microsoft.Extensions.Logging.ILogger LogFilePath Declaration public static string LogFilePath { get; set; } Property Value Type Description System.String LoggingMode Declaration public static Logger.LoggingModes LoggingMode { get; set; } Property Value Type Description Logger.LoggingModes Methods ClearLogs() Declaration public static void ClearLogs() Log(Exception, ConsoleColor) Declaration public static void Log(Exception exception, ConsoleColor color) Parameters Type Name Description System.Exception exception System.ConsoleColor color Log(String, ConsoleColor) Declaration public static void Log(string message, ConsoleColor color) Parameters Type Name Description System.String message System.ConsoleColor color Log(String, Exception, ConsoleColor) Declaration public static void Log(string message, Exception exception, ConsoleColor color) Parameters Type Name Description System.String message System.Exception exception System.ConsoleColor color LogAndThrow(Exception) Declaration public static Exception LogAndThrow(this Exception exception) Parameters Type Name Description System.Exception exception Returns Type Description System.Exception Events MessageLogged Declaration public static event Action<string> MessageLogged Event Type Type Description System.Action < System.String >"
  },
  "api/IronSoftware.Logger.LoggingModes.html": {
    "href": "api/IronSoftware.Logger.LoggingModes.html",
    "title": "Class Logger.LoggingModes | C# OCR & Tesseract API | IronOCR",
    "keywords": "Class Logger.LoggingModes Inheritance System.Object Logger.LoggingModes Namespace : IronSoftware Assembly : IronOcr.dll Syntax public sealed class LoggingModes : Enum Fields All Declaration public const Logger.LoggingModes All Field Value Type Description Logger.LoggingModes Console Declaration public const Logger.LoggingModes Console Field Value Type Description Logger.LoggingModes Custom Declaration public const Logger.LoggingModes Custom Field Value Type Description Logger.LoggingModes DebugOutputWindow Declaration public const Logger.LoggingModes DebugOutputWindow Field Value Type Description Logger.LoggingModes File Declaration public const Logger.LoggingModes File Field Value Type Description Logger.LoggingModes None Declaration public const Logger.LoggingModes None Field Value Type Description Logger.LoggingModes value__ Declaration public int value__ Field Value Type Description System.Int32"
  },
  "api/NativeLibraryLoader.html": {
    "href": "api/NativeLibraryLoader.html",
    "title": "Namespace NativeLibraryLoader | C# OCR & Tesseract API | IronOCR",
    "keywords": "Namespace NativeLibraryLoader Classes LibraryLoader NativeLibrary"
  },
  "api/NativeLibraryLoader.LibraryLoader.html": {
    "href": "api/NativeLibraryLoader.LibraryLoader.html",
    "title": "Class LibraryLoader | C# OCR & Tesseract API | IronOCR",
    "keywords": "Class LibraryLoader Inheritance System.Object LibraryLoader Namespace : NativeLibraryLoader Assembly : IronOcr.dll Syntax public abstract class LibraryLoader : Object Constructors LibraryLoader() Declaration protected LibraryLoader() Methods CoreFreeNativeLibrary(IntPtr) Declaration protected abstract void CoreFreeNativeLibrary(IntPtr handle) Parameters Type Name Description System.IntPtr handle CoreLoadFunctionPointer(IntPtr, String) Declaration protected abstract IntPtr CoreLoadFunctionPointer(IntPtr handle, string functionName) Parameters Type Name Description System.IntPtr handle System.String functionName Returns Type Description System.IntPtr CoreLoadNativeLibrary(String) Declaration protected abstract IntPtr CoreLoadNativeLibrary(string name) Parameters Type Name Description System.String name Returns Type Description System.IntPtr FreeNativeLibrary(IntPtr) Declaration public void FreeNativeLibrary(IntPtr handle) Parameters Type Name Description System.IntPtr handle GetErrorMessage() Declaration public abstract string GetErrorMessage() Returns Type Description System.String GetPlatformDefaultLoader() Declaration public static LibraryLoader GetPlatformDefaultLoader() Returns Type Description LibraryLoader LoadFunctionPointer(IntPtr, String) Declaration public IntPtr LoadFunctionPointer(IntPtr handle, string functionName) Parameters Type Name Description System.IntPtr handle System.String functionName Returns Type Description System.IntPtr LoadNativeLibrary(String) Declaration public IntPtr LoadNativeLibrary(string name) Parameters Type Name Description System.String name Returns Type Description System.IntPtr"
  },
  "api/NativeLibraryLoader.NativeLibrary.html": {
    "href": "api/NativeLibraryLoader.NativeLibrary.html",
    "title": "Class NativeLibrary | C# OCR & Tesseract API | IronOCR",
    "keywords": "Class NativeLibrary Inheritance System.Object NativeLibrary Implements System.IDisposable Namespace : NativeLibraryLoader Assembly : IronOcr.dll Syntax public class NativeLibrary : Object Constructors NativeLibrary(String) Declaration public NativeLibrary(string name) Parameters Type Name Description System.String name Properties Handle Declaration public IntPtr Handle { get; } Property Value Type Description System.IntPtr Methods Dispose() Declaration public void Dispose() LoadFunction(String) Declaration public IntPtr LoadFunction(string name) Parameters Type Name Description System.String name Returns Type Description System.IntPtr LoadFunction<T>() Declaration public T LoadFunction<T>() Returns Type Description T Type Parameters Name Description T LoadFunction<T>(String) Declaration public T LoadFunction<T>(string name) Parameters Type Name Description System.String name Returns Type Description T Type Parameters Name Description T Implements System.IDisposable"
  },
  "api/System.Drawing.Dimension.html": {
    "href": "api/System.Drawing.Dimension.html",
    "title": "Class Dimension | C# OCR & Tesseract API | IronOCR",
    "keywords": "Class Dimension The Dimension class encapsulates the width and height of a component (in int precision) in a single object. Inheritance System.Object Dimension2D Dimension Implements System.ICloneable Inherited Members Dimension2D.Clone() Namespace : System.Drawing Assembly : IronOcr.dll Syntax public class Dimension : Dimension2D Remarks The class is associated with certain properties of components. Several methods defined by the Component class and the LayoutManager interface return a Dimension object. Normally the values of width and height are non-negative ints. The constructors that allow you to create a dimension do not prevent you from setting a negative value for these properties. If the value of width or height is negative, the behavior of some methods defined by other objects is undefined. Constructors Dimension() Creates an instance of Dimension with a width of zero and a height of zero. Declaration public Dimension() Dimension(Dimension) Creates an instance of Dimension whose width and height are the same as for the specified dimension. Declaration public Dimension(Dimension d) Parameters Type Name Description Dimension d the specified dimension for the width and height values. Dimension(Int32, Int32) Constructs a Dimension and initializes it to the specified width and specified height. Declaration public Dimension(int width, int height) Parameters Type Name Description System.Int32 width the specified width dimension System.Int32 height the specified height dimension Properties height Returns the height of this dimension in double precision. Declaration public int height { get; set; } Property Value Type Description System.Int32 the height Height Declaration public override double Height { get; } Property Value Type Description System.Double Overrides Dimension2D.Height Size Get/set the size of this Dimension object. Declaration public Dimension Size { get; set; } Property Value Type Description Dimension the size width Returns the width of this dimension in double precision. Declaration public int width { get; set; } Property Value Type Description System.Int32 the width Width Declaration public override double Width { get; } Property Value Type Description System.Double Overrides Dimension2D.Width Methods Equals(Object) Checks whether two dimension objects have equal values. Declaration public override bool Equals(object obj) Parameters Type Name Description System.Object obj Returns Type Description System.Boolean GetHashCode() Returns the hash code for this Dimension. Declaration public override int GetHashCode() Returns Type Description System.Int32 a hash code SetSize(Double, Double) Set the size of this Dimension object to the specified width and height in double precision. Declaration public override void SetSize(double width, double height) Parameters Type Name Description System.Double width the new width for the Dimension object System.Double height the new height for the Dimension object Overrides Dimension2D.SetSize(Double, Double) SetSize(Int32, Int32) Set the size of this Dimension object to the specified width and height. Declaration public void SetSize(int width, int height) Parameters Type Name Description System.Int32 width the new width for this Dimension object. System.Int32 height the new height for this Dimension object. ToString() Returns a string representation of the values of this Dimension object's height and width fields. Declaration public override string ToString() Returns Type Description System.String a string representation of this Dimension object. Remarks This method is intended to be used only for debugging purposes, and the content and format of the returned string may vary between implementations. The returned string may be empty but may not be null . Implements System.ICloneable Inherited members Clone()"
  },
  "api/System.Drawing.Dimension2D.html": {
    "href": "api/System.Drawing.Dimension2D.html",
    "title": "Class Dimension2D | C# OCR & Tesseract API | IronOCR",
    "keywords": "Class Dimension2D The Dimension2D class is to encapsulate a width and a height dimension. Inheritance System.Object Dimension2D Dimension Implements System.ICloneable Namespace : System.Drawing Assembly : IronOcr.dll Syntax public abstract class Dimension2D : Object Remarks This class is only the abstract baseclass for all objects that store a 2D dimension. The actual storage representation of the sizes is left to the subclass. Constructors Dimension2D() Declaration protected Dimension2D() Properties Height Returns the height of this Dimension in double precision. Declaration public abstract double Height { get; } Property Value Type Description System.Double the height Size Sets the size of this Dimension2D object to match the specified size. Declaration public Dimension2D Size { set; } Property Value Type Description Dimension2D the size Width Returns the width of this Dimension in double precision. Declaration public abstract double Width { get; } Property Value Type Description System.Double the width Methods Clone() Creates a new object of the same class as this object. Declaration public object Clone() Returns Type Description System.Object a clone of this instance SetSize(Double, Double) Sets the size of this Dimension object to the specified width and height. Declaration public abstract void SetSize(double width, double height) Parameters Type Name Description System.Double width the new width for the Dimension object System.Double height the new height for the Dimension object Implements System.ICloneable"
  },
  "api/System.Drawing.html": {
    "href": "api/System.Drawing.html",
    "title": "Namespace System.Drawing | C# OCR & Tesseract API | IronOCR",
    "keywords": "Namespace System.Drawing Classes Dimension The Dimension class encapsulates the width and height of a component (in int precision) in a single object. Dimension2D The Dimension2D class is to encapsulate a width and a height dimension."
  },
  "api/System.Drawing.Printing.html": {
    "href": "api/System.Drawing.Printing.html",
    "title": "Namespace System.Drawing.Printing | C# OCR & Tesseract API | IronOCR",
    "keywords": "Namespace System.Drawing.Printing Classes PrintingPermission PrintingPermissionAttribute PrintingPermissionLevel"
  },
  "api/System.Drawing.Printing.PrintingPermission.html": {
    "href": "api/System.Drawing.Printing.PrintingPermission.html",
    "title": "Class PrintingPermission | C# OCR & Tesseract API | IronOCR",
    "keywords": "Class PrintingPermission Inheritance System.Object System.Security.CodeAccessPermission PrintingPermission Implements System.Security.IPermission System.Security.ISecurityEncodable Namespace : System.Drawing.Printing Assembly : IronOcr.dll Syntax public sealed class PrintingPermission : CodeAccessPermission Constructors PrintingPermission(PrintingPermissionLevel) Declaration public PrintingPermission(PrintingPermissionLevel printingLevel) Parameters Type Name Description PrintingPermissionLevel printingLevel PrintingPermission(PermissionState) Declaration public PrintingPermission(PermissionState state) Parameters Type Name Description System.Security.Permissions.PermissionState state Properties Level Declaration public PrintingPermissionLevel Level { get; set; } Property Value Type Description PrintingPermissionLevel Methods Copy() Declaration public override IPermission Copy() Returns Type Description System.Security.IPermission Overrides System.Security.CodeAccessPermission.Copy() FromXml(SecurityElement) Declaration public override void FromXml(SecurityElement element) Parameters Type Name Description System.Security.SecurityElement element Overrides System.Security.CodeAccessPermission.FromXml(System.Security.SecurityElement) Intersect(IPermission) Declaration public override IPermission Intersect(IPermission target) Parameters Type Name Description System.Security.IPermission target Returns Type Description System.Security.IPermission Overrides System.Security.CodeAccessPermission.Intersect(System.Security.IPermission) IsSubsetOf(IPermission) Declaration public override bool IsSubsetOf(IPermission target) Parameters Type Name Description System.Security.IPermission target Returns Type Description System.Boolean Overrides System.Security.CodeAccessPermission.IsSubsetOf(System.Security.IPermission) IsUnrestricted() Declaration public bool IsUnrestricted() Returns Type Description System.Boolean ToXml() Declaration public override SecurityElement ToXml() Returns Type Description System.Security.SecurityElement Overrides System.Security.CodeAccessPermission.ToXml() Union(IPermission) Declaration public override IPermission Union(IPermission target) Parameters Type Name Description System.Security.IPermission target Returns Type Description System.Security.IPermission Overrides System.Security.CodeAccessPermission.Union(System.Security.IPermission) Implements System.Security.IPermission System.Security.ISecurityEncodable"
  },
  "api/System.Drawing.Printing.PrintingPermissionAttribute.html": {
    "href": "api/System.Drawing.Printing.PrintingPermissionAttribute.html",
    "title": "Class PrintingPermissionAttribute | C# OCR & Tesseract API | IronOCR",
    "keywords": "Class PrintingPermissionAttribute Inheritance System.Object PrintingPermissionAttribute Namespace : System.Drawing.Printing Assembly : IronOcr.dll Syntax public sealed class PrintingPermissionAttribute : CodeAccessSecurityAttribute Constructors PrintingPermissionAttribute(SecurityAction) Declaration public PrintingPermissionAttribute(SecurityAction action) Parameters Type Name Description System.Security.Permissions.SecurityAction action Properties Level Declaration public PrintingPermissionLevel Level { get; set; } Property Value Type Description PrintingPermissionLevel Methods CreatePermission() Declaration public override IPermission CreatePermission() Returns Type Description System.Security.IPermission"
  },
  "api/System.Drawing.Printing.PrintingPermissionLevel.html": {
    "href": "api/System.Drawing.Printing.PrintingPermissionLevel.html",
    "title": "Class PrintingPermissionLevel | C# OCR & Tesseract API | IronOCR",
    "keywords": "Class PrintingPermissionLevel Inheritance System.Object PrintingPermissionLevel Namespace : System.Drawing.Printing Assembly : IronOcr.dll Syntax public sealed class PrintingPermissionLevel : Enum Fields AllPrinting Declaration public const PrintingPermissionLevel AllPrinting Field Value Type Description PrintingPermissionLevel DefaultPrinting Declaration public const PrintingPermissionLevel DefaultPrinting Field Value Type Description PrintingPermissionLevel NoPrinting Declaration public const PrintingPermissionLevel NoPrinting Field Value Type Description PrintingPermissionLevel SafePrinting Declaration public const PrintingPermissionLevel SafePrinting Field Value Type Description PrintingPermissionLevel value__ Declaration public int value__ Field Value Type Description System.Int32"
  }
}
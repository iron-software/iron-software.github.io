{
  "api/index.html": {
    "href": "api/index.html",
    "title": "IronWord: Word Document Library for .NET | C# Word API | IronWord",
    "keywords": "IronWord: Word Document Library for .NET IronWord is a Word document library developed by Iron Software. IronWord excels in providing robust functionality for working with Word documents in .NET applications. Features of IronWord Load, Manipulate, and Save Word and Docx Document. PageSetup: Configuring paper size, page orientation, margins, and background color. TextRun: Handling text content, styles, splitting, appending text, and adding images. TextStyle: Managing font family, size, color, bold, italic, strikethrough, underline, superscript, and subscript. Paragraph: Adding text runs, images, shapes, setting styles, alignments, bullets, and numbering lists. Table: Manipulating table structure, including adding rows, getting and setting cell values, removing rows, merging cells, and more. Image: Loading images from files or streams, setting wrap text, position offset, width, height, and other properties. Shape: Setting wrap text, position offset, width, height, shape type, and rotation. Get Started Quickstart Guide: https://ironsoftware.com/csharp/word/docs/ Install with NuGet: https://www.nuget.org/packages/IronWord/ C# Code Examples Add Image using IronWord; using IronWord.Models; // Load docx WordDocument doc = new WordDocument(\"document.docx\"); // Configure image IronWord.Models.Image image = new IronWord.Models.Image(\"image.jpg\"); image.Width = 200; // In unit pixel image.Height = 200; // In unit pixel Paragraph paragraph = new Paragraph(); // Add image paragraph.AddImage(image); // Add paragraph doc.AddParagraph(paragraph); // Export docx doc.SaveAs(\"save_document.docx\"); Add Table using IronWord; using IronWord.Models; // Create table cell TableCell cell = new TableCell(); TextRun textRun = new TextRun(); textRun.Text = \"Sample text\"; // Add textrun to the cell cell.AddContent(new Paragraph(textRun)); // Configure border style BorderStyle borderStyle = new BorderStyle(); borderStyle.BorderColor = new IronColor(IronSoftware.Drawing.Color.Black); borderStyle.BorderValue = IronWord.Models.Enums.BorderValues.Thick; borderStyle.BorderSize = 5; // Configure table border TableBorders tableBorders = new TableBorders() { TopBorder = borderStyle, RightBorder = borderStyle, BottomBorder = borderStyle, LeftBorder = borderStyle, }; cell.Borders = tableBorders; // Create row and add cell TableRow row = new TableRow(); row.AddCell(cell); row.AddCell(cell); // Create table and add row Table table = new Table(); table.AddRow(row); // Create new Word document from the table WordDocument doc = new WordDocument(table); // Export Word document doc.SaveAs(\"Document.docx\"); Documentation More Code Samples : https://ironsoftware.com/csharp/word/examples/create-empty-word/ API Reference : https://ironsoftware.com/csharp/word/object-reference/api/ Tutorials : https://ironsoftware.com/csharp/word/tutorials/document-element/ Support : developers@ironsoftware.com"
  },
  "api/IronWord.html": {
    "href": "api/IronWord.html",
    "title": "Namespace IronWord | C# Word API | IronWord",
    "keywords": "Namespace IronWord Classes License StartUp WordDocument"
  },
  "api/IronWord.License.html": {
    "href": "api/IronWord.License.html",
    "title": "Class License | C# Word API | IronWord",
    "keywords": "Class License Inheritance System.Object License Namespace : IronWord Assembly : IronWord.dll Syntax public static class License : Object Properties IsLicensed Declaration public static bool IsLicensed { get; } Property Value Type Description System.Boolean LicenseKey Declaration public static string LicenseKey { get; set; } Property Value Type Description System.String Methods IsValidLicense(String) Declaration public static bool IsValidLicense(string licenseKey) Parameters Type Name Description System.String licenseKey Returns Type Description System.Boolean"
  },
  "api/IronWord.Models.Abstract.ContentElement.html": {
    "href": "api/IronWord.Models.Abstract.ContentElement.html",
    "title": "Class ContentElement | C# Word API | IronWord",
    "keywords": "Class ContentElement Inheritance System.Object ContentElement TableElements TextContentElement Chart Image ListLevel Shape Namespace : IronWord.Models.Abstract Assembly : IronWord.dll Syntax public abstract class ContentElement : Object Constructors ContentElement() Declaration protected ContentElement() ContentElement(ContentElement[]) Declaration public ContentElement(params ContentElement[] children) Parameters Type Name Description ContentElement [] children Fields Status Declaration public ElementStatus Status Field Value Type Description ElementStatus Properties Children Declaration public List<ContentElement> Children { get; set; } Property Value Type Description System.Collections.Generic.List < ContentElement > Parent Declaration public ContentElement Parent { get; } Property Value Type Description ContentElement Range Declaration public ContentRange Range { get; } Property Value Type Description ContentRange Methods AddChild(ContentElement[]) Declaration public void AddChild(params ContentElement[] children) Parameters Type Name Description ContentElement [] children ExtractElements<T>() Declaration public List<T> ExtractElements<T>() where T : ContentElement Returns Type Description System.Collections.Generic.List <T> Type Parameters Name Description T GetChildByIndex<T>(Int32) Declaration public ContentElement GetChildByIndex<T>(int index) where T : ContentElement Parameters Type Name Description System.Int32 index Returns Type Description ContentElement Type Parameters Name Description T GetIndex<T>() Declaration protected int GetIndex<T>() where T : ContentElement Returns Type Description System.Int32 Type Parameters Name Description T InsertChildToIndex(Int32, ContentElement[]) Declaration public void InsertChildToIndex(int index, params ContentElement[] children) Parameters Type Name Description System.Int32 index ContentElement [] children Remove() Declaration public void Remove() RemoveAllChildren() Declaration public void RemoveAllChildren() RemoveChildren(ContentElement[]) Declaration public void RemoveChildren(params ContentElement[] children) Parameters Type Name Description ContentElement [] children RemoveRange(ContentRange) Declaration public void RemoveRange(ContentRange range) Parameters Type Name Description ContentRange range"
  },
  "api/IronWord.Models.Abstract.FormElement.html": {
    "href": "api/IronWord.Models.Abstract.FormElement.html",
    "title": "Class FormElement | C# Word API | IronWord",
    "keywords": "Class FormElement Inheritance System.Object FormElement RadioButton TextInput Namespace : IronWord.Models.Abstract Assembly : IronWord.dll Syntax public abstract class FormElement : Object Constructors FormElement() Declaration protected FormElement()"
  },
  "api/IronWord.Models.Abstract.html": {
    "href": "api/IronWord.Models.Abstract.html",
    "title": "Namespace IronWord.Models.Abstract | C# Word API | IronWord",
    "keywords": "Namespace IronWord.Models.Abstract Classes ContentElement FormElement TableElements TextContentElement"
  },
  "api/IronWord.Models.Abstract.TableElements.html": {
    "href": "api/IronWord.Models.Abstract.TableElements.html",
    "title": "Class TableElements | C# Word API | IronWord",
    "keywords": "Class TableElements Inheritance System.Object ContentElement TableElements Table TableCell TableRow Inherited Members ContentElement.Status ContentElement.AddChild(ContentElement[]) ContentElement.InsertChildToIndex(Int32, ContentElement[]) ContentElement.RemoveChildren(ContentElement[]) ContentElement.RemoveAllChildren() ContentElement.Remove() ContentElement.RemoveRange(ContentRange) ContentElement.ExtractElements<T>() ContentElement.GetIndex<T>() ContentElement.GetChildByIndex<T>(Int32) ContentElement.Range ContentElement.Parent ContentElement.Children Namespace : IronWord.Models.Abstract Assembly : IronWord.dll Syntax public abstract class TableElements : ContentElement Constructors TableElements() Declaration protected TableElements() Properties BackgroundColor Declaration public IronColor BackgroundColor { get; set; } Property Value Type Description IronColor Borders Declaration public TableBorders Borders { get; set; } Property Value Type Description TableBorders Methods SetBorders(TableBorders) Declaration public void SetBorders(TableBorders borders) Parameters Type Name Description TableBorders borders Inherited members Status AddChild(ContentElement[]) InsertChildToIndex(Int32, ContentElement[]) RemoveChildren(ContentElement[]) RemoveAllChildren() Remove() RemoveRange(ContentRange) ExtractElements<T>() GetIndex<T>() GetChildByIndex<T>(Int32) Range Parent Children"
  },
  "api/IronWord.Models.Abstract.TextContentElement.html": {
    "href": "api/IronWord.Models.Abstract.TextContentElement.html",
    "title": "Class TextContentElement | C# Word API | IronWord",
    "keywords": "Class TextContentElement Inheritance System.Object ContentElement TextContentElement Container DocumentSection Paragraph TextRun Inherited Members ContentElement.Status ContentElement.AddChild(ContentElement[]) ContentElement.InsertChildToIndex(Int32, ContentElement[]) ContentElement.RemoveChildren(ContentElement[]) ContentElement.RemoveAllChildren() ContentElement.Remove() ContentElement.RemoveRange(ContentRange) ContentElement.ExtractElements<T>() ContentElement.GetIndex<T>() ContentElement.GetChildByIndex<T>(Int32) ContentElement.Range ContentElement.Parent ContentElement.Children Namespace : IronWord.Models.Abstract Assembly : IronWord.dll Syntax public abstract class TextContentElement : ContentElement Constructors TextContentElement(ContentElement[]) Declaration protected TextContentElement(params ContentElement[] children) Parameters Type Name Description ContentElement [] children Properties CurrentStyle Declaration public TextStyle CurrentStyle { get; set; } Property Value Type Description TextStyle TextRuns Declaration public List<TextRun> TextRuns { get; set; } Property Value Type Description System.Collections.Generic.List < TextRun > Methods AddText(String) Declaration public TextContentElement AddText(string text) Parameters Type Name Description System.String text Returns Type Description TextContentElement AddText(String, TextStyle) Declaration public TextContentElement AddText(string text, TextStyle style) Parameters Type Name Description System.String text TextStyle style Returns Type Description TextContentElement ConcatenateTextRuns() Declaration public void ConcatenateTextRuns() FindAndReplace(String, String, Nullable<RegexOptions>, Boolean, Boolean) Declaration public void FindAndReplace(string searchText, string replaceText, Nullable<RegexOptions> regexOption = null, bool wholeWordOnly = false, bool caseSensitive = false) Parameters Type Name Description System.String searchText System.String replaceText System.Nullable < System.Text.RegularExpressions.RegexOptions > regexOption System.Boolean wholeWordOnly System.Boolean caseSensitive SplitTextRun(String) Declaration public void SplitTextRun(string delimiter) Parameters Type Name Description System.String delimiter ToString() Declaration public override string ToString() Returns Type Description System.String Inherited members Status AddChild(ContentElement[]) InsertChildToIndex(Int32, ContentElement[]) RemoveChildren(ContentElement[]) RemoveAllChildren() Remove() RemoveRange(ContentRange) ExtractElements<T>() GetIndex<T>() GetChildByIndex<T>(Int32) Range Parent Children"
  },
  "api/IronWord.Models.AxisConfiguration.html": {
    "href": "api/IronWord.Models.AxisConfiguration.html",
    "title": "Class AxisConfiguration | C# Word API | IronWord",
    "keywords": "Class AxisConfiguration Inheritance System.Object AxisConfiguration Namespace : IronWord.Models Assembly : IronWord.dll Syntax public class AxisConfiguration : Object Constructors AxisConfiguration() Declaration public AxisConfiguration()"
  },
  "api/IronWord.Models.Borders.html": {
    "href": "api/IronWord.Models.Borders.html",
    "title": "Class Borders | C# Word API | IronWord",
    "keywords": "Class Borders Inheritance System.Object Borders Namespace : IronWord.Models Assembly : IronWord.dll Syntax public class Borders : Object Constructors Borders() Declaration public Borders() Properties BottomBorder Declaration public BorderStyle BottomBorder { get; set; } Property Value Type Description BorderStyle LeftBorder Declaration public BorderStyle LeftBorder { get; set; } Property Value Type Description BorderStyle RightBorder Declaration public BorderStyle RightBorder { get; set; } Property Value Type Description BorderStyle TopBorder Declaration public BorderStyle TopBorder { get; set; } Property Value Type Description BorderStyle"
  },
  "api/IronWord.Models.BorderStyle.html": {
    "href": "api/IronWord.Models.BorderStyle.html",
    "title": "Class BorderStyle | C# Word API | IronWord",
    "keywords": "Class BorderStyle Inheritance System.Object BorderStyle Namespace : IronWord.Models Assembly : IronWord.dll Syntax public class BorderStyle : Object Constructors BorderStyle() Declaration public BorderStyle() Properties BorderColor Declaration public IronColor BorderColor { get; set; } Property Value Type Description IronColor BorderSize Declaration public uint BorderSize { get; set; } Property Value Type Description System.UInt32 BorderSpace Declaration public uint BorderSpace { get; set; } Property Value Type Description System.UInt32 BorderValue Declaration public BorderValues BorderValue { get; set; } Property Value Type Description BorderValues"
  },
  "api/IronWord.Models.Chart.html": {
    "href": "api/IronWord.Models.Chart.html",
    "title": "Class Chart | C# Word API | IronWord",
    "keywords": "Class Chart Inheritance System.Object ContentElement Chart Inherited Members ContentElement.Status ContentElement.AddChild(ContentElement[]) ContentElement.InsertChildToIndex(Int32, ContentElement[]) ContentElement.RemoveChildren(ContentElement[]) ContentElement.RemoveAllChildren() ContentElement.Remove() ContentElement.RemoveRange(ContentRange) ContentElement.ExtractElements<T>() ContentElement.GetIndex<T>() ContentElement.GetChildByIndex<T>(Int32) ContentElement.Range ContentElement.Parent ContentElement.Children Namespace : IronWord.Models Assembly : IronWord.dll Syntax public class Chart : ContentElement Constructors Chart() Declaration public Chart() Chart(ChartType, String) Declaration public Chart(ChartType chartType, string title = null) Parameters Type Name Description ChartType chartType System.String title Properties AxisConfig Declaration public AxisConfiguration AxisConfig { get; set; } Property Value Type Description AxisConfiguration DataSource Declaration public ChartDataSource DataSource { get; set; } Property Value Type Description ChartDataSource HasLegend Declaration public bool HasLegend { get; set; } Property Value Type Description System.Boolean Style Declaration public ChartStyle Style { get; set; } Property Value Type Description ChartStyle Title Declaration public string Title { get; set; } Property Value Type Description System.String Type Declaration public ChartType Type { get; set; } Property Value Type Description ChartType Methods UpdateChart() Declaration public void UpdateChart() Inherited members Status AddChild(ContentElement[]) InsertChildToIndex(Int32, ContentElement[]) RemoveChildren(ContentElement[]) RemoveAllChildren() Remove() RemoveRange(ContentRange) ExtractElements<T>() GetIndex<T>() GetChildByIndex<T>(Int32) Range Parent Children"
  },
  "api/IronWord.Models.ChartDataSource.html": {
    "href": "api/IronWord.Models.ChartDataSource.html",
    "title": "Class ChartDataSource | C# Word API | IronWord",
    "keywords": "Class ChartDataSource Inheritance System.Object ChartDataSource Namespace : IronWord.Models Assembly : IronWord.dll Syntax public class ChartDataSource : Object Constructors ChartDataSource() Declaration public ChartDataSource()"
  },
  "api/IronWord.Models.ChartStyle.html": {
    "href": "api/IronWord.Models.ChartStyle.html",
    "title": "Class ChartStyle | C# Word API | IronWord",
    "keywords": "Class ChartStyle Inheritance System.Object ChartStyle Namespace : IronWord.Models Assembly : IronWord.dll Syntax public class ChartStyle : Object Constructors ChartStyle() Declaration public ChartStyle()"
  },
  "api/IronWord.Models.Common.Constants.html": {
    "href": "api/IronWord.Models.Common.Constants.html",
    "title": "Class Constants | C# Word API | IronWord",
    "keywords": "Class Constants Inheritance System.Object Constants Namespace : IronWord.Models.Common Assembly : IronWord.dll Syntax public static class Constants : Object Fields DefaultTextColor Declaration public const string DefaultTextColor = \"0015ef\" Field Value Type Description System.String"
  },
  "api/IronWord.Models.Common.html": {
    "href": "api/IronWord.Models.Common.html",
    "title": "Namespace IronWord.Models.Common | C# Word API | IronWord",
    "keywords": "Namespace IronWord.Models.Common Classes Constants"
  },
  "api/IronWord.Models.Container.html": {
    "href": "api/IronWord.Models.Container.html",
    "title": "Class Container | C# Word API | IronWord",
    "keywords": "Class Container Inheritance System.Object ContentElement TextContentElement Container Inherited Members TextContentElement.AddText(String) TextContentElement.AddText(String, TextStyle) TextContentElement.FindAndReplace(String, String, Nullable<RegexOptions>, Boolean, Boolean) TextContentElement.SplitTextRun(String) TextContentElement.ConcatenateTextRuns() TextContentElement.ToString() TextContentElement.TextRuns TextContentElement.CurrentStyle ContentElement.Status ContentElement.AddChild(ContentElement[]) ContentElement.InsertChildToIndex(Int32, ContentElement[]) ContentElement.RemoveChildren(ContentElement[]) ContentElement.RemoveAllChildren() ContentElement.Remove() ContentElement.RemoveRange(ContentRange) ContentElement.ExtractElements<T>() ContentElement.GetIndex<T>() ContentElement.GetChildByIndex<T>(Int32) ContentElement.Range ContentElement.Parent ContentElement.Children Namespace : IronWord.Models Assembly : IronWord.dll Syntax public class Container : TextContentElement Constructors Container() Declaration public Container() Container(ContentElement[]) Declaration public Container(params ContentElement[] children) Parameters Type Name Description ContentElement [] children Inherited members AddText(String) AddText(String, TextStyle) FindAndReplace(String, String, Nullable<RegexOptions>, Boolean, Boolean) SplitTextRun(String) ConcatenateTextRuns() ToString() TextRuns CurrentStyle Status AddChild(ContentElement[]) InsertChildToIndex(Int32, ContentElement[]) RemoveChildren(ContentElement[]) RemoveAllChildren() Remove() RemoveRange(ContentRange) ExtractElements<T>() GetIndex<T>() GetChildByIndex<T>(Int32) Range Parent Children"
  },
  "api/IronWord.Models.ContentRange.html": {
    "href": "api/IronWord.Models.ContentRange.html",
    "title": "Class ContentRange | C# Word API | IronWord",
    "keywords": "Class ContentRange Inheritance System.Object ContentRange Namespace : IronWord.Models Assembly : IronWord.dll Syntax public class ContentRange : Object Constructors ContentRange(Int32, Int32, Boolean) Declaration public ContentRange(int startPosition, int endPosition, bool isSinglePoint = false) Parameters Type Name Description System.Int32 startPosition System.Int32 endPosition System.Boolean isSinglePoint Properties Charts Declaration public IEnumerable<Chart> Charts { get; } Property Value Type Description System.Collections.Generic.IEnumerable < Chart > CoveredElements Declaration public ContentElement[] CoveredElements { get; } Property Value Type Description ContentElement [] EndPosition Declaration public int EndPosition { get; } Property Value Type Description System.Int32 Images Declaration public IEnumerable<Image> Images { get; } Property Value Type Description System.Collections.Generic.IEnumerable < Image > IsSinglePoint Declaration public bool IsSinglePoint { get; set; } Property Value Type Description System.Boolean Paragraphs Declaration public IEnumerable<Paragraph> Paragraphs { get; } Property Value Type Description System.Collections.Generic.IEnumerable < Paragraph > Sections Declaration public IEnumerable<BitVector32.Section> Sections { get; } Property Value Type Description System.Collections.Generic.IEnumerable < System.Collections.Specialized.BitVector32.Section > StartPosition Declaration public int StartPosition { get; } Property Value Type Description System.Int32 TextRuns Declaration public IEnumerable<TextRun> TextRuns { get; } Property Value Type Description System.Collections.Generic.IEnumerable < TextRun > Methods GetCoveredElements() Declaration public ContentElement[] GetCoveredElements() Returns Type Description ContentElement [] Intersects(ContentRange) Declaration public bool Intersects(ContentRange other) Parameters Type Name Description ContentRange other Returns Type Description System.Boolean SetEndPosition(Int32) Declaration public ContentRange SetEndPosition(int position) Parameters Type Name Description System.Int32 position Returns Type Description ContentRange SetStartPosition(Int32) Declaration public ContentRange SetStartPosition(int position) Parameters Type Name Description System.Int32 position Returns Type Description ContentRange"
  },
  "api/IronWord.Models.DocumentSection.html": {
    "href": "api/IronWord.Models.DocumentSection.html",
    "title": "Class DocumentSection | C# Word API | IronWord",
    "keywords": "Class DocumentSection Inheritance System.Object ContentElement TextContentElement DocumentSection Inherited Members TextContentElement.AddText(String) TextContentElement.AddText(String, TextStyle) TextContentElement.FindAndReplace(String, String, Nullable<RegexOptions>, Boolean, Boolean) TextContentElement.SplitTextRun(String) TextContentElement.ConcatenateTextRuns() TextContentElement.ToString() TextContentElement.CurrentStyle ContentElement.Status ContentElement.AddChild(ContentElement[]) ContentElement.InsertChildToIndex(Int32, ContentElement[]) ContentElement.RemoveChildren(ContentElement[]) ContentElement.RemoveAllChildren() ContentElement.Remove() ContentElement.RemoveRange(ContentRange) ContentElement.ExtractElements<T>() ContentElement.GetIndex<T>() ContentElement.GetChildByIndex<T>(Int32) ContentElement.Range ContentElement.Parent ContentElement.Children Namespace : IronWord.Models Assembly : IronWord.dll Syntax public class DocumentSection : TextContentElement Constructors DocumentSection() Declaration public DocumentSection() DocumentSection(DocumentSectionType) Declaration public DocumentSection(DocumentSectionType type) Parameters Type Name Description DocumentSectionType type Properties Forms Declaration public List<Form> Forms { get; set; } Property Value Type Description System.Collections.Generic.List < Form > PageSetup Declaration public PageSetup PageSetup { get; set; } Property Value Type Description PageSetup Paragraphs Declaration public List<Paragraph> Paragraphs { get; } Property Value Type Description System.Collections.Generic.List < Paragraph > SectionType Declaration public DocumentSectionType SectionType { get; set; } Property Value Type Description DocumentSectionType TextRuns Declaration public List<TextRun> TextRuns { get; } Property Value Type Description System.Collections.Generic.List < TextRun > Methods AddForm(Form) Declaration public void AddForm(Form form) Parameters Type Name Description Form form AddImage(Image) Declaration public void AddImage(Image image) Parameters Type Name Description Image image AddParagraph(Paragraph) Declaration public void AddParagraph(Paragraph paragraph) Parameters Type Name Description Paragraph paragraph AddShape(Shape) Declaration public void AddShape(Shape shape) Parameters Type Name Description Shape shape AddTable(Table) Declaration public void AddTable(Table table) Parameters Type Name Description Table table AddTextRun(TextRun) Declaration public void AddTextRun(TextRun textRun) Parameters Type Name Description TextRun textRun Inherited members AddText(String) AddText(String, TextStyle) FindAndReplace(String, String, Nullable<RegexOptions>, Boolean, Boolean) SplitTextRun(String) ConcatenateTextRuns() ToString() CurrentStyle Status AddChild(ContentElement[]) InsertChildToIndex(Int32, ContentElement[]) RemoveChildren(ContentElement[]) RemoveAllChildren() Remove() RemoveRange(ContentRange) ExtractElements<T>() GetIndex<T>() GetChildByIndex<T>(Int32) Range Parent Children"
  },
  "api/IronWord.Models.ElementPosition.html": {
    "href": "api/IronWord.Models.ElementPosition.html",
    "title": "Class ElementPosition | C# Word API | IronWord",
    "keywords": "Class ElementPosition Inheritance System.Object ElementPosition Namespace : IronWord.Models Assembly : IronWord.dll Syntax public class ElementPosition : Object Constructors ElementPosition() Declaration public ElementPosition() Properties X Declaration public int X { get; set; } Property Value Type Description System.Int32 Y Declaration public int Y { get; set; } Property Value Type Description System.Int32 Methods GetXPositionEMU() Declaration public long GetXPositionEMU() Returns Type Description System.Int64 GetYPositionEMU() Declaration public long GetYPositionEMU() Returns Type Description System.Int64 SetXPositionEMU(Int64) Declaration public void SetXPositionEMU(long x) Parameters Type Name Description System.Int64 x SetYPositionEMU(Int64) Declaration public void SetYPositionEMU(long y) Parameters Type Name Description System.Int64 y"
  },
  "api/IronWord.Models.Enums.BorderValues.html": {
    "href": "api/IronWord.Models.Enums.BorderValues.html",
    "title": "Class BorderValues | C# Word API | IronWord",
    "keywords": "Class BorderValues Inheritance System.Object BorderValues Namespace : IronWord.Models.Enums Assembly : IronWord.dll Syntax public sealed class BorderValues : Enum Fields DashDotStroked Declaration public const BorderValues DashDotStroked Field Value Type Description BorderValues Dashed Declaration public const BorderValues Dashed Field Value Type Description BorderValues DashSmallGap Declaration public const BorderValues DashSmallGap Field Value Type Description BorderValues DotDash Declaration public const BorderValues DotDash Field Value Type Description BorderValues DotDotDash Declaration public const BorderValues DotDotDash Field Value Type Description BorderValues Dotted Declaration public const BorderValues Dotted Field Value Type Description BorderValues Double Declaration public const BorderValues Double Field Value Type Description BorderValues DoubleWave Declaration public const BorderValues DoubleWave Field Value Type Description BorderValues Nil Declaration public const BorderValues Nil Field Value Type Description BorderValues None Declaration public const BorderValues None Field Value Type Description BorderValues Single Declaration public const BorderValues Single Field Value Type Description BorderValues Thick Declaration public const BorderValues Thick Field Value Type Description BorderValues ThickThinLargeGap Declaration public const BorderValues ThickThinLargeGap Field Value Type Description BorderValues ThickThinMediumGap Declaration public const BorderValues ThickThinMediumGap Field Value Type Description BorderValues ThickThinSmallGap Declaration public const BorderValues ThickThinSmallGap Field Value Type Description BorderValues ThinThickLargeGap Declaration public const BorderValues ThinThickLargeGap Field Value Type Description BorderValues ThinThickMediumGap Declaration public const BorderValues ThinThickMediumGap Field Value Type Description BorderValues ThinThickSmallGap Declaration public const BorderValues ThinThickSmallGap Field Value Type Description BorderValues ThinThickThinLargeGap Declaration public const BorderValues ThinThickThinLargeGap Field Value Type Description BorderValues ThinThickThinMediumGap Declaration public const BorderValues ThinThickThinMediumGap Field Value Type Description BorderValues ThinThickThinSmallGap Declaration public const BorderValues ThinThickThinSmallGap Field Value Type Description BorderValues ThreeDEmboss Declaration public const BorderValues ThreeDEmboss Field Value Type Description BorderValues ThreeDEngrave Declaration public const BorderValues ThreeDEngrave Field Value Type Description BorderValues Triple Declaration public const BorderValues Triple Field Value Type Description BorderValues value__ Declaration public int value__ Field Value Type Description System.Int32 Wave Declaration public const BorderValues Wave Field Value Type Description BorderValues"
  },
  "api/IronWord.Models.Enums.ChartType.html": {
    "href": "api/IronWord.Models.Enums.ChartType.html",
    "title": "Class ChartType | C# Word API | IronWord",
    "keywords": "Class ChartType Inheritance System.Object ChartType Namespace : IronWord.Models.Enums Assembly : IronWord.dll Syntax public sealed class ChartType : Enum Fields Bar Declaration public const ChartType Bar Field Value Type Description ChartType Line Declaration public const ChartType Line Field Value Type Description ChartType Pie Declaration public const ChartType Pie Field Value Type Description ChartType value__ Declaration public int value__ Field Value Type Description System.Int32"
  },
  "api/IronWord.Models.Enums.DocumentSectionType.html": {
    "href": "api/IronWord.Models.Enums.DocumentSectionType.html",
    "title": "Class DocumentSectionType | C# Word API | IronWord",
    "keywords": "Class DocumentSectionType Inheritance System.Object DocumentSectionType Namespace : IronWord.Models.Enums Assembly : IronWord.dll Syntax public sealed class DocumentSectionType : Enum Fields Appendix Declaration public const DocumentSectionType Appendix Field Value Type Description DocumentSectionType Default Declaration public const DocumentSectionType Default Field Value Type Description DocumentSectionType Index Declaration public const DocumentSectionType Index Field Value Type Description DocumentSectionType TitlePage Declaration public const DocumentSectionType TitlePage Field Value Type Description DocumentSectionType value__ Declaration public int value__ Field Value Type Description System.Int32"
  },
  "api/IronWord.Models.Enums.ElementStatus.html": {
    "href": "api/IronWord.Models.Enums.ElementStatus.html",
    "title": "Class ElementStatus | C# Word API | IronWord",
    "keywords": "Class ElementStatus Inheritance System.Object ElementStatus Namespace : IronWord.Models.Enums Assembly : IronWord.dll Syntax public sealed class ElementStatus : Enum Fields Deleted Declaration public const ElementStatus Deleted Field Value Type Description ElementStatus New Declaration public const ElementStatus New Field Value Type Description ElementStatus NoChange Declaration public const ElementStatus NoChange Field Value Type Description ElementStatus Updated Declaration public const ElementStatus Updated Field Value Type Description ElementStatus value__ Declaration public int value__ Field Value Type Description System.Int32"
  },
  "api/IronWord.Models.Enums.HorizontalAlignment.html": {
    "href": "api/IronWord.Models.Enums.HorizontalAlignment.html",
    "title": "Class HorizontalAlignment | C# Word API | IronWord",
    "keywords": "Class HorizontalAlignment Inheritance System.Object HorizontalAlignment Namespace : IronWord.Models.Enums Assembly : IronWord.dll Syntax public sealed class HorizontalAlignment : Enum Fields Center Declaration public const HorizontalAlignment Center Field Value Type Description HorizontalAlignment Left Declaration public const HorizontalAlignment Left Field Value Type Description HorizontalAlignment Right Declaration public const HorizontalAlignment Right Field Value Type Description HorizontalAlignment value__ Declaration public int value__ Field Value Type Description System.Int32"
  },
  "api/IronWord.Models.Enums.html": {
    "href": "api/IronWord.Models.Enums.html",
    "title": "Namespace IronWord.Models.Enums | C# Word API | IronWord",
    "keywords": "Namespace IronWord.Models.Enums Classes BorderValues ChartType DocumentSectionType ElementStatus HorizontalAlignment ImageType JustificationValues ListType PageNumberStyle PageOrientation PaperSize ProtectionType ShapeType TextAlignment TextWrap TextWrapStyle VerticalAlign VerticalAlignment WrapText"
  },
  "api/IronWord.Models.Enums.ImageType.html": {
    "href": "api/IronWord.Models.Enums.ImageType.html",
    "title": "Class ImageType | C# Word API | IronWord",
    "keywords": "Class ImageType Inheritance System.Object ImageType Namespace : IronWord.Models.Enums Assembly : IronWord.dll Syntax public sealed class ImageType : Enum Fields Bmp Declaration public const ImageType Bmp Field Value Type Description ImageType Emf Declaration public const ImageType Emf Field Value Type Description ImageType Gif Declaration public const ImageType Gif Field Value Type Description ImageType Icon Declaration public const ImageType Icon Field Value Type Description ImageType Jpeg Declaration public const ImageType Jpeg Field Value Type Description ImageType Pcx Declaration public const ImageType Pcx Field Value Type Description ImageType Png Declaration public const ImageType Png Field Value Type Description ImageType Svg Declaration public const ImageType Svg Field Value Type Description ImageType Tiff Declaration public const ImageType Tiff Field Value Type Description ImageType value__ Declaration public int value__ Field Value Type Description System.Int32 Wmf Declaration public const ImageType Wmf Field Value Type Description ImageType"
  },
  "api/IronWord.Models.Enums.JustificationValues.html": {
    "href": "api/IronWord.Models.Enums.JustificationValues.html",
    "title": "Class JustificationValues | C# Word API | IronWord",
    "keywords": "Class JustificationValues Inheritance System.Object JustificationValues Namespace : IronWord.Models.Enums Assembly : IronWord.dll Syntax public sealed class JustificationValues : Enum Fields Both Declaration public const JustificationValues Both Field Value Type Description JustificationValues Center Declaration public const JustificationValues Center Field Value Type Description JustificationValues Distribute Declaration public const JustificationValues Distribute Field Value Type Description JustificationValues End Declaration public const JustificationValues End Field Value Type Description JustificationValues HighKashida Declaration public const JustificationValues HighKashida Field Value Type Description JustificationValues Left Declaration public const JustificationValues Left Field Value Type Description JustificationValues LowKashida Declaration public const JustificationValues LowKashida Field Value Type Description JustificationValues MediumKashida Declaration public const JustificationValues MediumKashida Field Value Type Description JustificationValues NumTab Declaration public const JustificationValues NumTab Field Value Type Description JustificationValues Right Declaration public const JustificationValues Right Field Value Type Description JustificationValues Start Declaration public const JustificationValues Start Field Value Type Description JustificationValues ThaiDistribute Declaration public const JustificationValues ThaiDistribute Field Value Type Description JustificationValues value__ Declaration public int value__ Field Value Type Description System.Int32"
  },
  "api/IronWord.Models.Enums.ListType.html": {
    "href": "api/IronWord.Models.Enums.ListType.html",
    "title": "Class ListType | C# Word API | IronWord",
    "keywords": "Class ListType Inheritance System.Object ListType Namespace : IronWord.Models.Enums Assembly : IronWord.dll Syntax public sealed class ListType : Enum Fields Bullet Declaration public const ListType Bullet Field Value Type Description ListType Numbered Declaration public const ListType Numbered Field Value Type Description ListType value__ Declaration public int value__ Field Value Type Description System.Int32"
  },
  "api/IronWord.Models.Enums.PageNumberStyle.html": {
    "href": "api/IronWord.Models.Enums.PageNumberStyle.html",
    "title": "Class PageNumberStyle | C# Word API | IronWord",
    "keywords": "Class PageNumberStyle Inheritance System.Object PageNumberStyle Namespace : IronWord.Models.Enums Assembly : IronWord.dll Syntax public sealed class PageNumberStyle : Enum Fields Arabic Declaration public const PageNumberStyle Arabic Field Value Type Description PageNumberStyle None Declaration public const PageNumberStyle None Field Value Type Description PageNumberStyle Roman Declaration public const PageNumberStyle Roman Field Value Type Description PageNumberStyle value__ Declaration public int value__ Field Value Type Description System.Int32"
  },
  "api/IronWord.Models.Enums.PageOrientation.html": {
    "href": "api/IronWord.Models.Enums.PageOrientation.html",
    "title": "Class PageOrientation | C# Word API | IronWord",
    "keywords": "Class PageOrientation Inheritance System.Object PageOrientation Namespace : IronWord.Models.Enums Assembly : IronWord.dll Syntax public sealed class PageOrientation : Enum Fields Landscape Declaration public const PageOrientation Landscape Field Value Type Description PageOrientation Portrait Declaration public const PageOrientation Portrait Field Value Type Description PageOrientation value__ Declaration public int value__ Field Value Type Description System.Int32"
  },
  "api/IronWord.Models.Enums.PaperSize.html": {
    "href": "api/IronWord.Models.Enums.PaperSize.html",
    "title": "Class PaperSize | C# Word API | IronWord",
    "keywords": "Class PaperSize Inheritance System.Object PaperSize Namespace : IronWord.Models.Enums Assembly : IronWord.dll Syntax public sealed class PaperSize : Enum Fields A4 Declaration public const PaperSize A4 Field Value Type Description PaperSize A5 Declaration public const PaperSize A5 Field Value Type Description PaperSize Legal Declaration public const PaperSize Legal Field Value Type Description PaperSize Letter Declaration public const PaperSize Letter Field Value Type Description PaperSize value__ Declaration public int value__ Field Value Type Description System.Int32"
  },
  "api/IronWord.Models.Enums.ProtectionType.html": {
    "href": "api/IronWord.Models.Enums.ProtectionType.html",
    "title": "Class ProtectionType | C# Word API | IronWord",
    "keywords": "Class ProtectionType Inheritance System.Object ProtectionType Namespace : IronWord.Models.Enums Assembly : IronWord.dll Syntax public sealed class ProtectionType : Enum Fields CommentsOnly Declaration public const ProtectionType CommentsOnly Field Value Type Description ProtectionType FormFilling Declaration public const ProtectionType FormFilling Field Value Type Description ProtectionType None Declaration public const ProtectionType None Field Value Type Description ProtectionType ReadOnly Declaration public const ProtectionType ReadOnly Field Value Type Description ProtectionType TrackChanges Declaration public const ProtectionType TrackChanges Field Value Type Description ProtectionType value__ Declaration public int value__ Field Value Type Description System.Int32"
  },
  "api/IronWord.Models.Enums.ShapeType.html": {
    "href": "api/IronWord.Models.Enums.ShapeType.html",
    "title": "Class ShapeType | C# Word API | IronWord",
    "keywords": "Class ShapeType Inheritance System.Object ShapeType Namespace : IronWord.Models.Enums Assembly : IronWord.dll Syntax public sealed class ShapeType : Enum Fields AccentBorderCallout1 Declaration public const ShapeType AccentBorderCallout1 Field Value Type Description ShapeType AccentBorderCallout2 Declaration public const ShapeType AccentBorderCallout2 Field Value Type Description ShapeType AccentBorderCallout3 Declaration public const ShapeType AccentBorderCallout3 Field Value Type Description ShapeType AccentCallout1 Declaration public const ShapeType AccentCallout1 Field Value Type Description ShapeType AccentCallout2 Declaration public const ShapeType AccentCallout2 Field Value Type Description ShapeType AccentCallout3 Declaration public const ShapeType AccentCallout3 Field Value Type Description ShapeType ActionButtonBackPrevious Declaration public const ShapeType ActionButtonBackPrevious Field Value Type Description ShapeType ActionButtonBeginning Declaration public const ShapeType ActionButtonBeginning Field Value Type Description ShapeType ActionButtonBlank Declaration public const ShapeType ActionButtonBlank Field Value Type Description ShapeType ActionButtonDocument Declaration public const ShapeType ActionButtonDocument Field Value Type Description ShapeType ActionButtonEnd Declaration public const ShapeType ActionButtonEnd Field Value Type Description ShapeType ActionButtonForwardNext Declaration public const ShapeType ActionButtonForwardNext Field Value Type Description ShapeType ActionButtonHelp Declaration public const ShapeType ActionButtonHelp Field Value Type Description ShapeType ActionButtonHome Declaration public const ShapeType ActionButtonHome Field Value Type Description ShapeType ActionButtonInformation Declaration public const ShapeType ActionButtonInformation Field Value Type Description ShapeType ActionButtonMovie Declaration public const ShapeType ActionButtonMovie Field Value Type Description ShapeType ActionButtonReturn Declaration public const ShapeType ActionButtonReturn Field Value Type Description ShapeType ActionButtonSound Declaration public const ShapeType ActionButtonSound Field Value Type Description ShapeType Arc Declaration public const ShapeType Arc Field Value Type Description ShapeType BentArrow Declaration public const ShapeType BentArrow Field Value Type Description ShapeType BentConnector2 Declaration public const ShapeType BentConnector2 Field Value Type Description ShapeType BentConnector3 Declaration public const ShapeType BentConnector3 Field Value Type Description ShapeType BentConnector4 Declaration public const ShapeType BentConnector4 Field Value Type Description ShapeType BentConnector5 Declaration public const ShapeType BentConnector5 Field Value Type Description ShapeType BentUpArrow Declaration public const ShapeType BentUpArrow Field Value Type Description ShapeType Bevel Declaration public const ShapeType Bevel Field Value Type Description ShapeType BlockArc Declaration public const ShapeType BlockArc Field Value Type Description ShapeType BorderCallout1 Declaration public const ShapeType BorderCallout1 Field Value Type Description ShapeType BorderCallout2 Declaration public const ShapeType BorderCallout2 Field Value Type Description ShapeType BorderCallout3 Declaration public const ShapeType BorderCallout3 Field Value Type Description ShapeType BracePair Declaration public const ShapeType BracePair Field Value Type Description ShapeType BracketPair Declaration public const ShapeType BracketPair Field Value Type Description ShapeType Callout1 Declaration public const ShapeType Callout1 Field Value Type Description ShapeType Callout2 Declaration public const ShapeType Callout2 Field Value Type Description ShapeType Callout3 Declaration public const ShapeType Callout3 Field Value Type Description ShapeType Can Declaration public const ShapeType Can Field Value Type Description ShapeType ChartPlus Declaration public const ShapeType ChartPlus Field Value Type Description ShapeType ChartStar Declaration public const ShapeType ChartStar Field Value Type Description ShapeType ChartX Declaration public const ShapeType ChartX Field Value Type Description ShapeType Chevron Declaration public const ShapeType Chevron Field Value Type Description ShapeType Chord Declaration public const ShapeType Chord Field Value Type Description ShapeType CircularArrow Declaration public const ShapeType CircularArrow Field Value Type Description ShapeType Cloud Declaration public const ShapeType Cloud Field Value Type Description ShapeType CloudCallout Declaration public const ShapeType CloudCallout Field Value Type Description ShapeType Corner Declaration public const ShapeType Corner Field Value Type Description ShapeType CornerTabs Declaration public const ShapeType CornerTabs Field Value Type Description ShapeType Cube Declaration public const ShapeType Cube Field Value Type Description ShapeType CurvedConnector2 Declaration public const ShapeType CurvedConnector2 Field Value Type Description ShapeType CurvedConnector3 Declaration public const ShapeType CurvedConnector3 Field Value Type Description ShapeType CurvedConnector4 Declaration public const ShapeType CurvedConnector4 Field Value Type Description ShapeType CurvedConnector5 Declaration public const ShapeType CurvedConnector5 Field Value Type Description ShapeType CurvedDownArrow Declaration public const ShapeType CurvedDownArrow Field Value Type Description ShapeType CurvedLeftArrow Declaration public const ShapeType CurvedLeftArrow Field Value Type Description ShapeType CurvedRightArrow Declaration public const ShapeType CurvedRightArrow Field Value Type Description ShapeType CurvedUpArrow Declaration public const ShapeType CurvedUpArrow Field Value Type Description ShapeType Decagon Declaration public const ShapeType Decagon Field Value Type Description ShapeType DiagonalStripe Declaration public const ShapeType DiagonalStripe Field Value Type Description ShapeType Diamond Declaration public const ShapeType Diamond Field Value Type Description ShapeType Dodecagon Declaration public const ShapeType Dodecagon Field Value Type Description ShapeType Donut Declaration public const ShapeType Donut Field Value Type Description ShapeType DoubleWave Declaration public const ShapeType DoubleWave Field Value Type Description ShapeType DownArrow Declaration public const ShapeType DownArrow Field Value Type Description ShapeType DownArrowCallout Declaration public const ShapeType DownArrowCallout Field Value Type Description ShapeType Ellipse Declaration public const ShapeType Ellipse Field Value Type Description ShapeType EllipseRibbon Declaration public const ShapeType EllipseRibbon Field Value Type Description ShapeType EllipseRibbon2 Declaration public const ShapeType EllipseRibbon2 Field Value Type Description ShapeType FlowChartAlternateProcess Declaration public const ShapeType FlowChartAlternateProcess Field Value Type Description ShapeType FlowChartCollate Declaration public const ShapeType FlowChartCollate Field Value Type Description ShapeType FlowChartConnector Declaration public const ShapeType FlowChartConnector Field Value Type Description ShapeType FlowChartDecision Declaration public const ShapeType FlowChartDecision Field Value Type Description ShapeType FlowChartDelay Declaration public const ShapeType FlowChartDelay Field Value Type Description ShapeType FlowChartDisplay Declaration public const ShapeType FlowChartDisplay Field Value Type Description ShapeType FlowChartDocument Declaration public const ShapeType FlowChartDocument Field Value Type Description ShapeType FlowChartExtract Declaration public const ShapeType FlowChartExtract Field Value Type Description ShapeType FlowChartInputOutput Declaration public const ShapeType FlowChartInputOutput Field Value Type Description ShapeType FlowChartInternalStorage Declaration public const ShapeType FlowChartInternalStorage Field Value Type Description ShapeType FlowChartMagneticDisk Declaration public const ShapeType FlowChartMagneticDisk Field Value Type Description ShapeType FlowChartMagneticDrum Declaration public const ShapeType FlowChartMagneticDrum Field Value Type Description ShapeType FlowChartMagneticTape Declaration public const ShapeType FlowChartMagneticTape Field Value Type Description ShapeType FlowChartManualInput Declaration public const ShapeType FlowChartManualInput Field Value Type Description ShapeType FlowChartManualOperation Declaration public const ShapeType FlowChartManualOperation Field Value Type Description ShapeType FlowChartMerge Declaration public const ShapeType FlowChartMerge Field Value Type Description ShapeType FlowChartMultidocument Declaration public const ShapeType FlowChartMultidocument Field Value Type Description ShapeType FlowChartOfflineStorage Declaration public const ShapeType FlowChartOfflineStorage Field Value Type Description ShapeType FlowChartOffpageConnector Declaration public const ShapeType FlowChartOffpageConnector Field Value Type Description ShapeType FlowChartOnlineStorage Declaration public const ShapeType FlowChartOnlineStorage Field Value Type Description ShapeType FlowChartOr Declaration public const ShapeType FlowChartOr Field Value Type Description ShapeType FlowChartPredefinedProcess Declaration public const ShapeType FlowChartPredefinedProcess Field Value Type Description ShapeType FlowChartPreparation Declaration public const ShapeType FlowChartPreparation Field Value Type Description ShapeType FlowChartProcess Declaration public const ShapeType FlowChartProcess Field Value Type Description ShapeType FlowChartPunchedCard Declaration public const ShapeType FlowChartPunchedCard Field Value Type Description ShapeType FlowChartPunchedTape Declaration public const ShapeType FlowChartPunchedTape Field Value Type Description ShapeType FlowChartSort Declaration public const ShapeType FlowChartSort Field Value Type Description ShapeType FlowChartSummingJunction Declaration public const ShapeType FlowChartSummingJunction Field Value Type Description ShapeType FlowChartTerminator Declaration public const ShapeType FlowChartTerminator Field Value Type Description ShapeType FoldedCorner Declaration public const ShapeType FoldedCorner Field Value Type Description ShapeType Frame Declaration public const ShapeType Frame Field Value Type Description ShapeType Funnel Declaration public const ShapeType Funnel Field Value Type Description ShapeType Gear6 Declaration public const ShapeType Gear6 Field Value Type Description ShapeType Gear9 Declaration public const ShapeType Gear9 Field Value Type Description ShapeType HalfFrame Declaration public const ShapeType HalfFrame Field Value Type Description ShapeType Heart Declaration public const ShapeType Heart Field Value Type Description ShapeType Heptagon Declaration public const ShapeType Heptagon Field Value Type Description ShapeType Hexagon Declaration public const ShapeType Hexagon Field Value Type Description ShapeType HomePlate Declaration public const ShapeType HomePlate Field Value Type Description ShapeType HorizontalScroll Declaration public const ShapeType HorizontalScroll Field Value Type Description ShapeType IrregularSeal1 Declaration public const ShapeType IrregularSeal1 Field Value Type Description ShapeType IrregularSeal2 Declaration public const ShapeType IrregularSeal2 Field Value Type Description ShapeType LeftArrow Declaration public const ShapeType LeftArrow Field Value Type Description ShapeType LeftArrowCallout Declaration public const ShapeType LeftArrowCallout Field Value Type Description ShapeType LeftBrace Declaration public const ShapeType LeftBrace Field Value Type Description ShapeType LeftBracket Declaration public const ShapeType LeftBracket Field Value Type Description ShapeType LeftCircularArrow Declaration public const ShapeType LeftCircularArrow Field Value Type Description ShapeType LeftRightArrow Declaration public const ShapeType LeftRightArrow Field Value Type Description ShapeType LeftRightArrowCallout Declaration public const ShapeType LeftRightArrowCallout Field Value Type Description ShapeType LeftRightCircularArrow Declaration public const ShapeType LeftRightCircularArrow Field Value Type Description ShapeType LeftRightRibbon Declaration public const ShapeType LeftRightRibbon Field Value Type Description ShapeType LeftRightUpArrow Declaration public const ShapeType LeftRightUpArrow Field Value Type Description ShapeType LeftUpArrow Declaration public const ShapeType LeftUpArrow Field Value Type Description ShapeType LightningBolt Declaration public const ShapeType LightningBolt Field Value Type Description ShapeType Line Declaration public const ShapeType Line Field Value Type Description ShapeType LineInverse Declaration public const ShapeType LineInverse Field Value Type Description ShapeType MathDivide Declaration public const ShapeType MathDivide Field Value Type Description ShapeType MathEqual Declaration public const ShapeType MathEqual Field Value Type Description ShapeType MathMinus Declaration public const ShapeType MathMinus Field Value Type Description ShapeType MathMultiply Declaration public const ShapeType MathMultiply Field Value Type Description ShapeType MathNotEqual Declaration public const ShapeType MathNotEqual Field Value Type Description ShapeType MathPlus Declaration public const ShapeType MathPlus Field Value Type Description ShapeType Moon Declaration public const ShapeType Moon Field Value Type Description ShapeType NonIsoscelesTrapezoid Declaration public const ShapeType NonIsoscelesTrapezoid Field Value Type Description ShapeType NoSmoking Declaration public const ShapeType NoSmoking Field Value Type Description ShapeType NotchedRightArrow Declaration public const ShapeType NotchedRightArrow Field Value Type Description ShapeType Octagon Declaration public const ShapeType Octagon Field Value Type Description ShapeType Parallelogram Declaration public const ShapeType Parallelogram Field Value Type Description ShapeType Pentagon Declaration public const ShapeType Pentagon Field Value Type Description ShapeType Pie Declaration public const ShapeType Pie Field Value Type Description ShapeType PieWedge Declaration public const ShapeType PieWedge Field Value Type Description ShapeType Plaque Declaration public const ShapeType Plaque Field Value Type Description ShapeType PlaqueTabs Declaration public const ShapeType PlaqueTabs Field Value Type Description ShapeType Plus Declaration public const ShapeType Plus Field Value Type Description ShapeType QuadArrow Declaration public const ShapeType QuadArrow Field Value Type Description ShapeType QuadArrowCallout Declaration public const ShapeType QuadArrowCallout Field Value Type Description ShapeType Rectangle Declaration public const ShapeType Rectangle Field Value Type Description ShapeType Ribbon Declaration public const ShapeType Ribbon Field Value Type Description ShapeType Ribbon2 Declaration public const ShapeType Ribbon2 Field Value Type Description ShapeType RightArrow Declaration public const ShapeType RightArrow Field Value Type Description ShapeType RightArrowCallout Declaration public const ShapeType RightArrowCallout Field Value Type Description ShapeType RightBrace Declaration public const ShapeType RightBrace Field Value Type Description ShapeType RightBracket Declaration public const ShapeType RightBracket Field Value Type Description ShapeType RightTriangle Declaration public const ShapeType RightTriangle Field Value Type Description ShapeType Round1Rectangle Declaration public const ShapeType Round1Rectangle Field Value Type Description ShapeType Round2DiagonalRectangle Declaration public const ShapeType Round2DiagonalRectangle Field Value Type Description ShapeType Round2SameRectangle Declaration public const ShapeType Round2SameRectangle Field Value Type Description ShapeType RoundRectangle Declaration public const ShapeType RoundRectangle Field Value Type Description ShapeType SmileyFace Declaration public const ShapeType SmileyFace Field Value Type Description ShapeType Snip1Rectangle Declaration public const ShapeType Snip1Rectangle Field Value Type Description ShapeType Snip2DiagonalRectangle Declaration public const ShapeType Snip2DiagonalRectangle Field Value Type Description ShapeType Snip2SameRectangle Declaration public const ShapeType Snip2SameRectangle Field Value Type Description ShapeType SnipRoundRectangle Declaration public const ShapeType SnipRoundRectangle Field Value Type Description ShapeType SquareTabs Declaration public const ShapeType SquareTabs Field Value Type Description ShapeType Star10 Declaration public const ShapeType Star10 Field Value Type Description ShapeType Star12 Declaration public const ShapeType Star12 Field Value Type Description ShapeType Star16 Declaration public const ShapeType Star16 Field Value Type Description ShapeType Star24 Declaration public const ShapeType Star24 Field Value Type Description ShapeType Star32 Declaration public const ShapeType Star32 Field Value Type Description ShapeType Star4 Declaration public const ShapeType Star4 Field Value Type Description ShapeType Star5 Declaration public const ShapeType Star5 Field Value Type Description ShapeType Star6 Declaration public const ShapeType Star6 Field Value Type Description ShapeType Star7 Declaration public const ShapeType Star7 Field Value Type Description ShapeType Star8 Declaration public const ShapeType Star8 Field Value Type Description ShapeType StraightConnector1 Declaration public const ShapeType StraightConnector1 Field Value Type Description ShapeType StripedRightArrow Declaration public const ShapeType StripedRightArrow Field Value Type Description ShapeType Sun Declaration public const ShapeType Sun Field Value Type Description ShapeType SwooshArrow Declaration public const ShapeType SwooshArrow Field Value Type Description ShapeType Teardrop Declaration public const ShapeType Teardrop Field Value Type Description ShapeType Trapezoid Declaration public const ShapeType Trapezoid Field Value Type Description ShapeType Triangle Declaration public const ShapeType Triangle Field Value Type Description ShapeType UpArrow Declaration public const ShapeType UpArrow Field Value Type Description ShapeType UpArrowCallout Declaration public const ShapeType UpArrowCallout Field Value Type Description ShapeType UpDownArrow Declaration public const ShapeType UpDownArrow Field Value Type Description ShapeType UpDownArrowCallout Declaration public const ShapeType UpDownArrowCallout Field Value Type Description ShapeType UTurnArrow Declaration public const ShapeType UTurnArrow Field Value Type Description ShapeType value__ Declaration public int value__ Field Value Type Description System.Int32 VerticalScroll Declaration public const ShapeType VerticalScroll Field Value Type Description ShapeType Wave Declaration public const ShapeType Wave Field Value Type Description ShapeType WedgeEllipseCallout Declaration public const ShapeType WedgeEllipseCallout Field Value Type Description ShapeType WedgeRectangleCallout Declaration public const ShapeType WedgeRectangleCallout Field Value Type Description ShapeType WedgeRoundRectangleCallout Declaration public const ShapeType WedgeRoundRectangleCallout Field Value Type Description ShapeType"
  },
  "api/IronWord.Models.Enums.TextAlignment.html": {
    "href": "api/IronWord.Models.Enums.TextAlignment.html",
    "title": "Class TextAlignment | C# Word API | IronWord",
    "keywords": "Class TextAlignment Inheritance System.Object TextAlignment Namespace : IronWord.Models.Enums Assembly : IronWord.dll Syntax public sealed class TextAlignment : Enum Fields Center Declaration public const TextAlignment Center Field Value Type Description TextAlignment Justified Declaration public const TextAlignment Justified Field Value Type Description TextAlignment Left Declaration public const TextAlignment Left Field Value Type Description TextAlignment Right Declaration public const TextAlignment Right Field Value Type Description TextAlignment value__ Declaration public int value__ Field Value Type Description System.Int32"
  },
  "api/IronWord.Models.Enums.TextWrap.html": {
    "href": "api/IronWord.Models.Enums.TextWrap.html",
    "title": "Class TextWrap | C# Word API | IronWord",
    "keywords": "Class TextWrap Inheritance System.Object TextWrap Namespace : IronWord.Models.Enums Assembly : IronWord.dll Syntax public sealed class TextWrap : Enum Fields None Declaration public const TextWrap None Field Value Type Description TextWrap Square Declaration public const TextWrap Square Field Value Type Description TextWrap Tight Declaration public const TextWrap Tight Field Value Type Description TextWrap value__ Declaration public int value__ Field Value Type Description System.Int32"
  },
  "api/IronWord.Models.Enums.TextWrapStyle.html": {
    "href": "api/IronWord.Models.Enums.TextWrapStyle.html",
    "title": "Class TextWrapStyle | C# Word API | IronWord",
    "keywords": "Class TextWrapStyle Inheritance System.Object TextWrapStyle Namespace : IronWord.Models.Enums Assembly : IronWord.dll Syntax public sealed class TextWrapStyle : Enum Fields Behind Declaration public const TextWrapStyle Behind Field Value Type Description TextWrapStyle InFront Declaration public const TextWrapStyle InFront Field Value Type Description TextWrapStyle Inline Declaration public const TextWrapStyle Inline Field Value Type Description TextWrapStyle Square Declaration public const TextWrapStyle Square Field Value Type Description TextWrapStyle Tight Declaration public const TextWrapStyle Tight Field Value Type Description TextWrapStyle value__ Declaration public int value__ Field Value Type Description System.Int32"
  },
  "api/IronWord.Models.Enums.VerticalAlign.html": {
    "href": "api/IronWord.Models.Enums.VerticalAlign.html",
    "title": "Class VerticalAlign | C# Word API | IronWord",
    "keywords": "Class VerticalAlign Inheritance System.Object VerticalAlign Namespace : IronWord.Models.Enums Assembly : IronWord.dll Syntax public sealed class VerticalAlign : Enum Fields Bottom Declaration public const VerticalAlign Bottom Field Value Type Description VerticalAlign Middle Declaration public const VerticalAlign Middle Field Value Type Description VerticalAlign Top Declaration public const VerticalAlign Top Field Value Type Description VerticalAlign value__ Declaration public int value__ Field Value Type Description System.Int32"
  },
  "api/IronWord.Models.Enums.VerticalAlignment.html": {
    "href": "api/IronWord.Models.Enums.VerticalAlignment.html",
    "title": "Class VerticalAlignment | C# Word API | IronWord",
    "keywords": "Class VerticalAlignment Inheritance System.Object VerticalAlignment Namespace : IronWord.Models.Enums Assembly : IronWord.dll Syntax public sealed class VerticalAlignment : Enum Fields Bottom Declaration public const VerticalAlignment Bottom Field Value Type Description VerticalAlignment Middle Declaration public const VerticalAlignment Middle Field Value Type Description VerticalAlignment Top Declaration public const VerticalAlignment Top Field Value Type Description VerticalAlignment value__ Declaration public int value__ Field Value Type Description System.Int32"
  },
  "api/IronWord.Models.Enums.WrapText.html": {
    "href": "api/IronWord.Models.Enums.WrapText.html",
    "title": "Class WrapText | C# Word API | IronWord",
    "keywords": "Class WrapText Inheritance System.Object WrapText Namespace : IronWord.Models.Enums Assembly : IronWord.dll Syntax public sealed class WrapText : Enum Fields BehindText Declaration public const WrapText BehindText Field Value Type Description WrapText InFrontOfText Declaration public const WrapText InFrontOfText Field Value Type Description WrapText InLineWithText Declaration public const WrapText InLineWithText Field Value Type Description WrapText None Declaration public const WrapText None Field Value Type Description WrapText Square Declaration public const WrapText Square Field Value Type Description WrapText Through Declaration public const WrapText Through Field Value Type Description WrapText Tight Declaration public const WrapText Tight Field Value Type Description WrapText TopAndBottom Declaration public const WrapText TopAndBottom Field Value Type Description WrapText value__ Declaration public int value__ Field Value Type Description System.Int32"
  },
  "api/IronWord.Models.Extensions.ColorHelper.html": {
    "href": "api/IronWord.Models.Extensions.ColorHelper.html",
    "title": "Class ColorHelper | C# Word API | IronWord",
    "keywords": "Class ColorHelper Inheritance System.Object ColorHelper Namespace : IronWord.Models.Extensions Assembly : IronWord.dll Syntax public static class ColorHelper : Object Methods ToHex(Color) Declaration public static string ToHex(this Color c) Parameters Type Name Description IronSoftware.Drawing.Color c Returns Type Description System.String"
  },
  "api/IronWord.Models.Extensions.html": {
    "href": "api/IronWord.Models.Extensions.html",
    "title": "Namespace IronWord.Models.Extensions | C# Word API | IronWord",
    "keywords": "Namespace IronWord.Models.Extensions Classes ColorHelper StreamHelper"
  },
  "api/IronWord.Models.Extensions.StreamHelper.html": {
    "href": "api/IronWord.Models.Extensions.StreamHelper.html",
    "title": "Class StreamHelper | C# Word API | IronWord",
    "keywords": "Class StreamHelper Inheritance System.Object StreamHelper Namespace : IronWord.Models.Extensions Assembly : IronWord.dll Syntax public static class StreamHelper : Object Methods GetImageType(FileStream) Declaration public static ImageType GetImageType(this FileStream stream) Parameters Type Name Description System.IO.FileStream stream Returns Type Description ImageType GetImageType(MemoryStream) Declaration public static ImageType GetImageType(this MemoryStream stream) Parameters Type Name Description System.IO.MemoryStream stream Returns Type Description ImageType GetImageType(Stream) Declaration public static ImageType GetImageType(this Stream stream) Parameters Type Name Description System.IO.Stream stream Returns Type Description ImageType ToBase64(FileStream) Declaration public static string ToBase64(this FileStream stream) Parameters Type Name Description System.IO.FileStream stream Returns Type Description System.String ToBase64(Stream) Declaration public static string ToBase64(this Stream stream) Parameters Type Name Description System.IO.Stream stream Returns Type Description System.String"
  },
  "api/IronWord.Models.Form.html": {
    "href": "api/IronWord.Models.Form.html",
    "title": "Class Form | C# Word API | IronWord",
    "keywords": "Class Form Inheritance System.Object Form Namespace : IronWord.Models Assembly : IronWord.dll Syntax public class Form : Object Constructors Form() Declaration public Form() Properties Elements Declaration public List<FormElement> Elements { get; set; } Property Value Type Description System.Collections.Generic.List < FormElement >"
  },
  "api/IronWord.Models.html": {
    "href": "api/IronWord.Models.html",
    "title": "Namespace IronWord.Models | C# Word API | IronWord",
    "keywords": "Namespace IronWord.Models Classes AxisConfiguration Borders BorderStyle Chart ChartDataSource ChartStyle Container ContentRange DocumentSection ElementPosition Form Image IronColor MergeCell Metadata PageSetup Paragraph RadioButton Shape Style Table TableBorders TableCell TableLayout TableRow TextInput TextRun TextStyle"
  },
  "api/IronWord.Models.Image.html": {
    "href": "api/IronWord.Models.Image.html",
    "title": "Class Image | C# Word API | IronWord",
    "keywords": "Class Image Inheritance System.Object ContentElement Image Inherited Members ContentElement.Status ContentElement.AddChild(ContentElement[]) ContentElement.InsertChildToIndex(Int32, ContentElement[]) ContentElement.RemoveChildren(ContentElement[]) ContentElement.RemoveAllChildren() ContentElement.Remove() ContentElement.RemoveRange(ContentRange) ContentElement.ExtractElements<T>() ContentElement.GetIndex<T>() ContentElement.GetChildByIndex<T>(Int32) ContentElement.Range ContentElement.Parent ContentElement.Children Namespace : IronWord.Models Assembly : IronWord.dll Syntax public class Image : ContentElement Constructors Image() Declaration public Image() Image(Stream) Declaration public Image(Stream imageStream) Parameters Type Name Description System.IO.Stream imageStream Image(String) Declaration public Image(string imagePath) Parameters Type Name Description System.String imagePath Properties DistanceFromBottom Declaration public int DistanceFromBottom { get; set; } Property Value Type Description System.Int32 DistanceFromLeft Declaration public int DistanceFromLeft { get; set; } Property Value Type Description System.Int32 DistanceFromRight Declaration public int DistanceFromRight { get; set; } Property Value Type Description System.Int32 DistanceFromTop Declaration public int DistanceFromTop { get; set; } Property Value Type Description System.Int32 Height Declaration public int Height { get; set; } Property Value Type Description System.Int32 Id Declaration public uint Id { get; set; } Property Value Type Description System.UInt32 ImageData Declaration public string ImageData { get; set; } Property Value Type Description System.String Index Declaration public int Index { get; set; } Property Value Type Description System.Int32 Name Declaration public string Name { get; set; } Property Value Type Description System.String Position Declaration public ElementPosition Position { get; set; } Property Value Type Description ElementPosition Type Declaration public ImageType Type { get; set; } Property Value Type Description ImageType Width Declaration public int Width { get; set; } Property Value Type Description System.Int32 WrapText Declaration public WrapText WrapText { get; set; } Property Value Type Description WrapText Methods GetDistanceFromBottomEMU() Declaration public uint GetDistanceFromBottomEMU() Returns Type Description System.UInt32 GetDistanceFromLeftEMU() Declaration public uint GetDistanceFromLeftEMU() Returns Type Description System.UInt32 GetDistanceFromRightEMU() Declaration public uint GetDistanceFromRightEMU() Returns Type Description System.UInt32 GetDistanceFromTopEMU() Declaration public uint GetDistanceFromTopEMU() Returns Type Description System.UInt32 GetHeightEMU() Declaration public long GetHeightEMU() Returns Type Description System.Int64 GetWidthEMU() Declaration public long GetWidthEMU() Returns Type Description System.Int64 LoadFromFile(String) Declaration public bool LoadFromFile(string imagePath) Parameters Type Name Description System.String imagePath Returns Type Description System.Boolean SetDistanceFromBottomEMU(UInt32) Declaration public void SetDistanceFromBottomEMU(uint distanceFromBottom) Parameters Type Name Description System.UInt32 distanceFromBottom SetDistanceFromLeftEMU(UInt32) Declaration public void SetDistanceFromLeftEMU(uint distanceFromLeft) Parameters Type Name Description System.UInt32 distanceFromLeft SetDistanceFromRightEMU(UInt32) Declaration public void SetDistanceFromRightEMU(uint distanceFromRight) Parameters Type Name Description System.UInt32 distanceFromRight SetDistanceFromTopEMU(UInt32) Declaration public void SetDistanceFromTopEMU(uint distanceFromTop) Parameters Type Name Description System.UInt32 distanceFromTop SetHeightEMU(Int64) Declaration public void SetHeightEMU(long height) Parameters Type Name Description System.Int64 height SetWidthEMU(Int64) Declaration public void SetWidthEMU(long width) Parameters Type Name Description System.Int64 width Inherited members Status AddChild(ContentElement[]) InsertChildToIndex(Int32, ContentElement[]) RemoveChildren(ContentElement[]) RemoveAllChildren() Remove() RemoveRange(ContentRange) ExtractElements<T>() GetIndex<T>() GetChildByIndex<T>(Int32) Range Parent Children"
  },
  "api/IronWord.Models.IronColor.html": {
    "href": "api/IronWord.Models.IronColor.html",
    "title": "Class IronColor | C# Word API | IronWord",
    "keywords": "Class IronColor Inheritance System.Object IronColor Namespace : IronWord.Models Assembly : IronWord.dll Syntax public class IronColor : Object Constructors IronColor() Declaration public IronColor() IronColor(Color) Declaration public IronColor(Color color) Parameters Type Name Description IronSoftware.Drawing.Color color IronColor(String) Declaration public IronColor(string color) Parameters Type Name Description System.String color Properties ColorValue Declaration public string ColorValue { get; set; } Property Value Type Description System.String Methods GetColor() Declaration public Color GetColor() Returns Type Description IronSoftware.Drawing.Color"
  },
  "api/IronWord.Models.List.html": {
    "href": "api/IronWord.Models.List.html",
    "title": "Namespace IronWord.Models.List | C# Word API | IronWord",
    "keywords": "Namespace IronWord.Models.List Classes ListLevel"
  },
  "api/IronWord.Models.List.ListLevel.html": {
    "href": "api/IronWord.Models.List.ListLevel.html",
    "title": "Class ListLevel | C# Word API | IronWord",
    "keywords": "Class ListLevel Inheritance System.Object ContentElement ListLevel Inherited Members ContentElement.Status ContentElement.AddChild(ContentElement[]) ContentElement.InsertChildToIndex(Int32, ContentElement[]) ContentElement.RemoveChildren(ContentElement[]) ContentElement.RemoveAllChildren() ContentElement.Remove() ContentElement.RemoveRange(ContentRange) ContentElement.ExtractElements<T>() ContentElement.GetIndex<T>() ContentElement.GetChildByIndex<T>(Int32) ContentElement.Range ContentElement.Parent ContentElement.Children Namespace : IronWord.Models.List Assembly : IronWord.dll Syntax public class ListLevel : ContentElement Constructors ListLevel() Declaration public ListLevel() Properties IsLegalNumberingStyle Declaration public string IsLegalNumberingStyle { get; set; } Property Value Type Description System.String LegacyNumbering Declaration public string LegacyNumbering { get; set; } Property Value Type Description System.String LevelJustification Declaration public string LevelJustification { get; set; } Property Value Type Description System.String LevelPictureBulletId Declaration public string LevelPictureBulletId { get; set; } Property Value Type Description System.String LevelRestart Declaration public string LevelRestart { get; set; } Property Value Type Description System.String LevelSuffix Declaration public string LevelSuffix { get; set; } Property Value Type Description System.String LevelText Declaration public string LevelText { get; set; } Property Value Type Description System.String NumberingFormat Declaration public string NumberingFormat { get; set; } Property Value Type Description System.String NumberingSymbolRunProperties Declaration public string NumberingSymbolRunProperties { get; set; } Property Value Type Description System.String ParagraphStyleIdInLevel Declaration public string ParagraphStyleIdInLevel { get; set; } Property Value Type Description System.String PreviousParagraphProperties Declaration public string PreviousParagraphProperties { get; set; } Property Value Type Description System.String StartNumberingValue Declaration public string StartNumberingValue { get; set; } Property Value Type Description System.String Inherited members Status AddChild(ContentElement[]) InsertChildToIndex(Int32, ContentElement[]) RemoveChildren(ContentElement[]) RemoveAllChildren() Remove() RemoveRange(ContentRange) ExtractElements<T>() GetIndex<T>() GetChildByIndex<T>(Int32) Range Parent Children"
  },
  "api/IronWord.Models.MergeCell.html": {
    "href": "api/IronWord.Models.MergeCell.html",
    "title": "Class MergeCell | C# Word API | IronWord",
    "keywords": "Class MergeCell Inheritance System.Object MergeCell Namespace : IronWord.Models Assembly : IronWord.dll Syntax public class MergeCell : Object Constructors MergeCell() Declaration public MergeCell() Properties EndColumn Declaration public int EndColumn { get; set; } Property Value Type Description System.Int32 EndRow Declaration public int EndRow { get; set; } Property Value Type Description System.Int32 StartColumn Declaration public int StartColumn { get; set; } Property Value Type Description System.Int32 StartRow Declaration public int StartRow { get; set; } Property Value Type Description System.Int32"
  },
  "api/IronWord.Models.Metadata.html": {
    "href": "api/IronWord.Models.Metadata.html",
    "title": "Class Metadata | C# Word API | IronWord",
    "keywords": "Class Metadata Inheritance System.Object Metadata Namespace : IronWord.Models Assembly : IronWord.dll Syntax public class Metadata : Object Constructors Metadata() Declaration public Metadata() Properties Author Declaration public string Author { get; set; } Property Value Type Description System.String CreatedDate Declaration public DateTime CreatedDate { get; set; } Property Value Type Description System.DateTime CustomMetadata Declaration public Dictionary<string, string> CustomMetadata { get; set; } Property Value Type Description System.Collections.Generic.Dictionary < System.String , System.String > Description Declaration public string Description { get; set; } Property Value Type Description System.String Keywords Declaration public string[] Keywords { get; set; } Property Value Type Description System.String [] LastModifiedDate Declaration public DateTime LastModifiedDate { get; set; } Property Value Type Description System.DateTime Subject Declaration public string Subject { get; set; } Property Value Type Description System.String Title Declaration public string Title { get; set; } Property Value Type Description System.String Methods FromJson(String) Declaration public void FromJson(string json) Parameters Type Name Description System.String json ToJson() Declaration public string ToJson() Returns Type Description System.String Validate() Declaration public bool Validate() Returns Type Description System.Boolean"
  },
  "api/IronWord.Models.PageSetup.html": {
    "href": "api/IronWord.Models.PageSetup.html",
    "title": "Class PageSetup | C# Word API | IronWord",
    "keywords": "Class PageSetup Inheritance System.Object PageSetup Namespace : IronWord.Models Assembly : IronWord.dll Syntax public class PageSetup : Object Constructors PageSetup() Declaration public PageSetup() Properties BackgroundColor Declaration public string BackgroundColor { get; set; } Property Value Type Description System.String BottomMargin Declaration public double BottomMargin { get; set; } Property Value Type Description System.Double DifferentFirstPage Declaration public bool DifferentFirstPage { get; set; } Property Value Type Description System.Boolean IncludeFooter Declaration public bool IncludeFooter { get; set; } Property Value Type Description System.Boolean IncludeHeader Declaration public bool IncludeHeader { get; set; } Property Value Type Description System.Boolean LeftMargin Declaration public double LeftMargin { get; set; } Property Value Type Description System.Double Orientation Declaration public PageOrientation Orientation { get; set; } Property Value Type Description PageOrientation PageNumberStyle Declaration public PageNumberStyle PageNumberStyle { get; set; } Property Value Type Description PageNumberStyle PaperSize Declaration public PaperSize PaperSize { get; set; } Property Value Type Description PaperSize RightMargin Declaration public double RightMargin { get; set; } Property Value Type Description System.Double TopMargin Declaration public double TopMargin { get; set; } Property Value Type Description System.Double"
  },
  "api/IronWord.Models.Paragraph.html": {
    "href": "api/IronWord.Models.Paragraph.html",
    "title": "Class Paragraph | C# Word API | IronWord",
    "keywords": "Class Paragraph Inheritance System.Object ContentElement TextContentElement Paragraph Inherited Members TextContentElement.AddText(String) TextContentElement.AddText(String, TextStyle) TextContentElement.FindAndReplace(String, String, Nullable<RegexOptions>, Boolean, Boolean) TextContentElement.SplitTextRun(String) TextContentElement.ConcatenateTextRuns() TextContentElement.ToString() TextContentElement.CurrentStyle ContentElement.Status ContentElement.AddChild(ContentElement[]) ContentElement.InsertChildToIndex(Int32, ContentElement[]) ContentElement.RemoveChildren(ContentElement[]) ContentElement.RemoveAllChildren() ContentElement.Remove() ContentElement.RemoveRange(ContentRange) ContentElement.ExtractElements<T>() ContentElement.GetIndex<T>() ContentElement.GetChildByIndex<T>(Int32) ContentElement.Range ContentElement.Parent ContentElement.Children Namespace : IronWord.Models Assembly : IronWord.dll Syntax public class Paragraph : TextContentElement Constructors Paragraph() Declaration public Paragraph() Paragraph(ContentElement[]) Declaration public Paragraph(params ContentElement[] children) Parameters Type Name Description ContentElement [] children Properties Alignment Declaration public TextAlignment Alignment { get; set; } Property Value Type Description TextAlignment CurrentTextRun Declaration public TextRun CurrentTextRun { get; } Property Value Type Description TextRun FirstTextRun Declaration public TextRun FirstTextRun { get; } Property Value Type Description TextRun Images Declaration public List<Image> Images { get; } Property Value Type Description System.Collections.Generic.List < Image > Index Declaration public int Index { get; set; } Property Value Type Description System.Int32 Style Declaration public TextStyle Style { get; set; } Property Value Type Description TextStyle TextRuns Declaration public List<TextRun> TextRuns { get; } Property Value Type Description System.Collections.Generic.List < TextRun > Methods AddImage(Image) Declaration public void AddImage(Image image) Parameters Type Name Description Image image AddImage(Stream) Declaration public void AddImage(Stream imageStream) Parameters Type Name Description System.IO.Stream imageStream AddImage(String) Declaration public void AddImage(string imagePath) Parameters Type Name Description System.String imagePath AddList(ListType, String) Declaration public void AddList(ListType listType, string text) Parameters Type Name Description ListType listType System.String text AddTextRun(TextRun) Declaration public void AddTextRun(TextRun textRun) Parameters Type Name Description TextRun textRun RemoveTextRun(TextRun) Declaration public void RemoveTextRun(TextRun textRun) Parameters Type Name Description TextRun textRun SetAlignment(TextAlignment) Declaration public void SetAlignment(TextAlignment alignment) Parameters Type Name Description TextAlignment alignment SetStyle(TextStyle) Declaration public void SetStyle(TextStyle style) Parameters Type Name Description TextStyle style Inherited members AddText(String) AddText(String, TextStyle) FindAndReplace(String, String, Nullable<RegexOptions>, Boolean, Boolean) SplitTextRun(String) ConcatenateTextRuns() ToString() CurrentStyle Status AddChild(ContentElement[]) InsertChildToIndex(Int32, ContentElement[]) RemoveChildren(ContentElement[]) RemoveAllChildren() Remove() RemoveRange(ContentRange) ExtractElements<T>() GetIndex<T>() GetChildByIndex<T>(Int32) Range Parent Children"
  },
  "api/IronWord.Models.RadioButton.html": {
    "href": "api/IronWord.Models.RadioButton.html",
    "title": "Class RadioButton | C# Word API | IronWord",
    "keywords": "Class RadioButton Inheritance System.Object FormElement RadioButton Namespace : IronWord.Models Assembly : IronWord.dll Syntax public class RadioButton : FormElement Constructors RadioButton() Declaration public RadioButton()"
  },
  "api/IronWord.Models.Shape.html": {
    "href": "api/IronWord.Models.Shape.html",
    "title": "Class Shape | C# Word API | IronWord",
    "keywords": "Class Shape Inheritance System.Object ContentElement Shape Inherited Members ContentElement.Status ContentElement.AddChild(ContentElement[]) ContentElement.InsertChildToIndex(Int32, ContentElement[]) ContentElement.RemoveChildren(ContentElement[]) ContentElement.RemoveAllChildren() ContentElement.Remove() ContentElement.RemoveRange(ContentRange) ContentElement.ExtractElements<T>() ContentElement.GetIndex<T>() ContentElement.GetChildByIndex<T>(Int32) ContentElement.Range ContentElement.Parent ContentElement.Children Namespace : IronWord.Models Assembly : IronWord.dll Syntax public class Shape : ContentElement Constructors Shape() Declaration public Shape() Shape(Uri) Declaration public Shape(Uri uri) Parameters Type Name Description System.Uri uri Properties Angle Declaration public double Angle { get; set; } Property Value Type Description System.Double DistanceFromBottom Declaration public int DistanceFromBottom { get; set; } Property Value Type Description System.Int32 DistanceFromLeft Declaration public int DistanceFromLeft { get; set; } Property Value Type Description System.Int32 DistanceFromRight Declaration public int DistanceFromRight { get; set; } Property Value Type Description System.Int32 DistanceFromTop Declaration public int DistanceFromTop { get; set; } Property Value Type Description System.Int32 FillColor Declaration public IronColor FillColor { get; set; } Property Value Type Description IronColor Height Declaration public int Height { get; set; } Property Value Type Description System.Int32 HorizontalAlignment Declaration public HorizontalAlignment HorizontalAlignment { get; set; } Property Value Type Description HorizontalAlignment Id Declaration public uint Id { get; set; } Property Value Type Description System.UInt32 Index Declaration public int Index { get; set; } Property Value Type Description System.Int32 Name Declaration public string Name { get; set; } Property Value Type Description System.String StrokeColor Declaration public IronColor StrokeColor { get; set; } Property Value Type Description IronColor StrokeWeight Declaration public int StrokeWeight { get; set; } Property Value Type Description System.Int32 SvgData Declaration public string SvgData { get; set; } Property Value Type Description System.String TextWrap Declaration public TextWrap TextWrap { get; set; } Property Value Type Description TextWrap Type Declaration public ShapeType Type { get; set; } Property Value Type Description ShapeType VerticalAlignment Declaration public VerticalAlignment VerticalAlignment { get; set; } Property Value Type Description VerticalAlignment Width Declaration public int Width { get; set; } Property Value Type Description System.Int32 Methods FlipHorizontal() Declaration public void FlipHorizontal() FlipVertical() Declaration public void FlipVertical() FromFile(String) Declaration public static Shape FromFile(string filePath) Parameters Type Name Description System.String filePath Returns Type Description Shape GetDistanceFromBottomEMU() Declaration public uint GetDistanceFromBottomEMU() Returns Type Description System.UInt32 GetDistanceFromLeftEMU() Declaration public uint GetDistanceFromLeftEMU() Returns Type Description System.UInt32 GetDistanceFromRightEMU() Declaration public uint GetDistanceFromRightEMU() Returns Type Description System.UInt32 GetDistanceFromTopEMU() Declaration public uint GetDistanceFromTopEMU() Returns Type Description System.UInt32 GetHeightEMU() Declaration public long GetHeightEMU() Returns Type Description System.Int64 GetWidthEMU() Declaration public long GetWidthEMU() Returns Type Description System.Int64 Resize(Int32, Int32) Declaration public void Resize(int width, int height) Parameters Type Name Description System.Int32 width System.Int32 height Rotate(Double) Declaration public void Rotate(double angle) Parameters Type Name Description System.Double angle SetDistanceFromBottomEMU(UInt32) Declaration public void SetDistanceFromBottomEMU(uint distanceFromBottom) Parameters Type Name Description System.UInt32 distanceFromBottom SetDistanceFromLeftEMU(UInt32) Declaration public void SetDistanceFromLeftEMU(uint distanceFromLeft) Parameters Type Name Description System.UInt32 distanceFromLeft SetDistanceFromRightEMU(UInt32) Declaration public void SetDistanceFromRightEMU(uint distanceFromRight) Parameters Type Name Description System.UInt32 distanceFromRight SetDistanceFromTopEMU(UInt32) Declaration public void SetDistanceFromTopEMU(uint distanceFromTop) Parameters Type Name Description System.UInt32 distanceFromTop SetHeightEMU(Int64) Declaration public void SetHeightEMU(long height) Parameters Type Name Description System.Int64 height SetWidthEMU(Int64) Declaration public void SetWidthEMU(long width) Parameters Type Name Description System.Int64 width Inherited members Status AddChild(ContentElement[]) InsertChildToIndex(Int32, ContentElement[]) RemoveChildren(ContentElement[]) RemoveAllChildren() Remove() RemoveRange(ContentRange) ExtractElements<T>() GetIndex<T>() GetChildByIndex<T>(Int32) Range Parent Children"
  },
  "api/IronWord.Models.Style.html": {
    "href": "api/IronWord.Models.Style.html",
    "title": "Class Style | C# Word API | IronWord",
    "keywords": "Class Style Inheritance System.Object TextStyle Style Implements System.ICloneable Inherited Members TextStyle.SetFontFamily(String) TextStyle.SetFontSize(Single) TextStyle.SetTextColor(Color) TextStyle.Reset() TextStyle.Clone() TextStyle.FontFamily TextStyle.FontSize TextStyle.TextColor TextStyle.IsBold TextStyle.IsItalic TextStyle.IsStrikethrough TextStyle.IsUnderline TextStyle.IsSuperscript TextStyle.IsSubscript Namespace : IronWord.Models Assembly : IronWord.dll Syntax public class Style : TextStyle Constructors Style() Declaration public Style() Implements System.ICloneable Inherited members SetFontFamily(String) SetFontSize(Single) SetTextColor(Color) Reset() Clone() FontFamily FontSize TextColor IsBold IsItalic IsStrikethrough IsUnderline IsSuperscript IsSubscript"
  },
  "api/IronWord.Models.Table.html": {
    "href": "api/IronWord.Models.Table.html",
    "title": "Class Table | C# Word API | IronWord",
    "keywords": "Class Table Inheritance System.Object ContentElement TableElements Table Inherited Members TableElements.SetBorders(TableBorders) TableElements.Borders TableElements.BackgroundColor ContentElement.Status ContentElement.AddChild(ContentElement[]) ContentElement.InsertChildToIndex(Int32, ContentElement[]) ContentElement.RemoveChildren(ContentElement[]) ContentElement.RemoveAllChildren() ContentElement.Remove() ContentElement.RemoveRange(ContentRange) ContentElement.ExtractElements<T>() ContentElement.GetIndex<T>() ContentElement.GetChildByIndex<T>(Int32) ContentElement.Range ContentElement.Parent ContentElement.Children Namespace : IronWord.Models Assembly : IronWord.dll Syntax public class Table : TableElements Constructors Table() Declaration public Table() Table(TableRow[]) Declaration public Table(params TableRow[] rows) Parameters Type Name Description TableRow [] rows Properties Index Declaration public int Index { get; set; } Property Value Type Description System.Int32 Layout Declaration public TableLayout Layout { get; set; } Property Value Type Description TableLayout MergedCells Declaration public List<MergeCell> MergedCells { get; set; } Property Value Type Description System.Collections.Generic.List < MergeCell > Rows Declaration public List<TableRow> Rows { get; } Property Value Type Description System.Collections.Generic.List < TableRow > Methods AddColumn() Declaration public void AddColumn() AddRow(TableRow) Declaration public void AddRow(TableRow row) Parameters Type Name Description TableRow row ApplyCellStyle(TextStyle, Int32, Int32, Int32, Int32) Declaration public void ApplyCellStyle(TextStyle style, int startRow, int startColumn, int endRow, int endColumn) Parameters Type Name Description TextStyle style System.Int32 startRow System.Int32 startColumn System.Int32 endRow System.Int32 endColumn ApplyZebraStriping(Color, Color) Declaration public void ApplyZebraStriping(Color color1, Color color2) Parameters Type Name Description IronSoftware.Drawing.Color color1 IronSoftware.Drawing.Color color2 GetCellValue(Int32, Int32) Declaration public List<ContentElement> GetCellValue(int row, int column) Parameters Type Name Description System.Int32 row System.Int32 column Returns Type Description System.Collections.Generic.List < ContentElement > MergeCells(Int32, Int32, Int32, Int32) Declaration public void MergeCells(int startRow, int startColumn, int endRow, int endColumn) Parameters Type Name Description System.Int32 startRow System.Int32 startColumn System.Int32 endRow System.Int32 endColumn RemoveColumn(Int32) Declaration public void RemoveColumn(int index) Parameters Type Name Description System.Int32 index RemoveRow(Int32) Declaration public void RemoveRow(int index) Parameters Type Name Description System.Int32 index SetCellValue(Int32, Int32, ContentElement) Declaration public void SetCellValue(int row, int column, ContentElement content) Parameters Type Name Description System.Int32 row System.Int32 column ContentElement content UnMergeCells(Int32, Int32) Declaration public void UnMergeCells(int row, int column) Parameters Type Name Description System.Int32 row System.Int32 column Inherited members SetBorders(TableBorders) Borders BackgroundColor Status AddChild(ContentElement[]) InsertChildToIndex(Int32, ContentElement[]) RemoveChildren(ContentElement[]) RemoveAllChildren() Remove() RemoveRange(ContentRange) ExtractElements<T>() GetIndex<T>() GetChildByIndex<T>(Int32) Range Parent Children"
  },
  "api/IronWord.Models.TableBorders.html": {
    "href": "api/IronWord.Models.TableBorders.html",
    "title": "Class TableBorders | C# Word API | IronWord",
    "keywords": "Class TableBorders Inheritance System.Object TableBorders Namespace : IronWord.Models Assembly : IronWord.dll Syntax public class TableBorders : Object Constructors TableBorders() Declaration public TableBorders() Properties BottomBorder Declaration public BorderStyle BottomBorder { get; set; } Property Value Type Description BorderStyle LeftBorder Declaration public BorderStyle LeftBorder { get; set; } Property Value Type Description BorderStyle RightBorder Declaration public BorderStyle RightBorder { get; set; } Property Value Type Description BorderStyle TopBorder Declaration public BorderStyle TopBorder { get; set; } Property Value Type Description BorderStyle"
  },
  "api/IronWord.Models.TableCell.html": {
    "href": "api/IronWord.Models.TableCell.html",
    "title": "Class TableCell | C# Word API | IronWord",
    "keywords": "Class TableCell Inheritance System.Object ContentElement TableElements TableCell Inherited Members TableElements.SetBorders(TableBorders) TableElements.Borders TableElements.BackgroundColor ContentElement.Status ContentElement.AddChild(ContentElement[]) ContentElement.InsertChildToIndex(Int32, ContentElement[]) ContentElement.RemoveChildren(ContentElement[]) ContentElement.RemoveAllChildren() ContentElement.Remove() ContentElement.RemoveRange(ContentRange) ContentElement.ExtractElements<T>() ContentElement.GetIndex<T>() ContentElement.GetChildByIndex<T>(Int32) ContentElement.Range ContentElement.Parent ContentElement.Children Namespace : IronWord.Models Assembly : IronWord.dll Syntax public class TableCell : TableElements Constructors TableCell() Declaration public TableCell() TableCell(ContentElement[]) Declaration public TableCell(params ContentElement[] contents) Parameters Type Name Description ContentElement [] contents Properties CellColor Declaration public IronColor CellColor { get; set; } Property Value Type Description IronColor Contents Declaration public List<ContentElement> Contents { get; } Property Value Type Description System.Collections.Generic.List < ContentElement > Index Declaration public int Index { get; set; } Property Value Type Description System.Int32 TextAlignment Declaration public JustificationValues TextAlignment { get; set; } Property Value Type Description JustificationValues VerticalAlignment Declaration public VerticalAlign VerticalAlignment { get; set; } Property Value Type Description VerticalAlign Methods AddContent(ContentElement) Declaration public void AddContent(ContentElement content) Parameters Type Name Description ContentElement content InsertCellAfterSelf(TableCell) Declaration public void InsertCellAfterSelf(TableCell cell) Parameters Type Name Description TableCell cell InsertCellBeforeSelf(TableCell) Declaration public void InsertCellBeforeSelf(TableCell cell) Parameters Type Name Description TableCell cell Inherited members SetBorders(TableBorders) Borders BackgroundColor Status AddChild(ContentElement[]) InsertChildToIndex(Int32, ContentElement[]) RemoveChildren(ContentElement[]) RemoveAllChildren() Remove() RemoveRange(ContentRange) ExtractElements<T>() GetIndex<T>() GetChildByIndex<T>(Int32) Range Parent Children"
  },
  "api/IronWord.Models.TableLayout.html": {
    "href": "api/IronWord.Models.TableLayout.html",
    "title": "Class TableLayout | C# Word API | IronWord",
    "keywords": "Class TableLayout Inheritance System.Object TableLayout Namespace : IronWord.Models Assembly : IronWord.dll Syntax public class TableLayout : Object Constructors TableLayout() Declaration public TableLayout() Properties Height Declaration public double Height { get; set; } Property Value Type Description System.Double Width Declaration public double Width { get; set; } Property Value Type Description System.Double"
  },
  "api/IronWord.Models.TableRow.html": {
    "href": "api/IronWord.Models.TableRow.html",
    "title": "Class TableRow | C# Word API | IronWord",
    "keywords": "Class TableRow Inheritance System.Object ContentElement TableElements TableRow Inherited Members TableElements.SetBorders(TableBorders) TableElements.Borders TableElements.BackgroundColor ContentElement.Status ContentElement.AddChild(ContentElement[]) ContentElement.InsertChildToIndex(Int32, ContentElement[]) ContentElement.RemoveChildren(ContentElement[]) ContentElement.RemoveAllChildren() ContentElement.Remove() ContentElement.RemoveRange(ContentRange) ContentElement.ExtractElements<T>() ContentElement.GetIndex<T>() ContentElement.GetChildByIndex<T>(Int32) ContentElement.Range ContentElement.Parent ContentElement.Children Namespace : IronWord.Models Assembly : IronWord.dll Syntax public class TableRow : TableElements Constructors TableRow() Declaration public TableRow() TableRow(TableCell[]) Declaration public TableRow(params TableCell[] cells) Parameters Type Name Description TableCell [] cells Properties Cells Declaration public List<TableCell> Cells { get; } Property Value Type Description System.Collections.Generic.List < TableCell > Index Declaration public int Index { get; set; } Property Value Type Description System.Int32 Methods AddCell(TableCell) Declaration public void AddCell(TableCell cell) Parameters Type Name Description TableCell cell InsertRowAfterSelf(TableRow) Declaration public void InsertRowAfterSelf(TableRow row) Parameters Type Name Description TableRow row InsertRowBeforeSelf(TableRow) Declaration public void InsertRowBeforeSelf(TableRow row) Parameters Type Name Description TableRow row Inherited members SetBorders(TableBorders) Borders BackgroundColor Status AddChild(ContentElement[]) InsertChildToIndex(Int32, ContentElement[]) RemoveChildren(ContentElement[]) RemoveAllChildren() Remove() RemoveRange(ContentRange) ExtractElements<T>() GetIndex<T>() GetChildByIndex<T>(Int32) Range Parent Children"
  },
  "api/IronWord.Models.TextInput.html": {
    "href": "api/IronWord.Models.TextInput.html",
    "title": "Class TextInput | C# Word API | IronWord",
    "keywords": "Class TextInput Inheritance System.Object FormElement TextInput Namespace : IronWord.Models Assembly : IronWord.dll Syntax public class TextInput : FormElement Constructors TextInput() Declaration public TextInput()"
  },
  "api/IronWord.Models.TextRun.html": {
    "href": "api/IronWord.Models.TextRun.html",
    "title": "Class TextRun | C# Word API | IronWord",
    "keywords": "Class TextRun Inheritance System.Object ContentElement TextContentElement TextRun Inherited Members TextContentElement.AddText(String) TextContentElement.AddText(String, TextStyle) TextContentElement.FindAndReplace(String, String, Nullable<RegexOptions>, Boolean, Boolean) TextContentElement.SplitTextRun(String) TextContentElement.ConcatenateTextRuns() TextContentElement.ToString() TextContentElement.TextRuns TextContentElement.CurrentStyle ContentElement.Status ContentElement.AddChild(ContentElement[]) ContentElement.InsertChildToIndex(Int32, ContentElement[]) ContentElement.RemoveChildren(ContentElement[]) ContentElement.RemoveAllChildren() ContentElement.Remove() ContentElement.RemoveRange(ContentRange) ContentElement.ExtractElements<T>() ContentElement.GetIndex<T>() ContentElement.GetChildByIndex<T>(Int32) ContentElement.Range ContentElement.Parent ContentElement.Children Namespace : IronWord.Models Assembly : IronWord.dll Syntax public class TextRun : TextContentElement Constructors TextRun() Declaration public TextRun() TextRun(ContentElement[]) Declaration public TextRun(params ContentElement[] children) Parameters Type Name Description ContentElement [] children TextRun(TextStyle) Declaration public TextRun(TextStyle style) Parameters Type Name Description TextStyle style TextRun(String) Declaration public TextRun(string text) Parameters Type Name Description System.String text TextRun(String, TextStyle) Declaration public TextRun(string text, TextStyle style) Parameters Type Name Description System.String text TextStyle style Properties Images Declaration public List<Image> Images { get; } Property Value Type Description System.Collections.Generic.List < Image > Index Declaration public int Index { get; set; } Property Value Type Description System.Int32 Style Declaration public TextStyle Style { get; set; } Property Value Type Description TextStyle Text Declaration public string Text { get; set; } Property Value Type Description System.String Methods AddImage(Image) Declaration public void AddImage(Image image) Parameters Type Name Description Image image AddImage(Stream) Declaration public void AddImage(Stream imageStream) Parameters Type Name Description System.IO.Stream imageStream AddImage(String) Declaration public void AddImage(string imagePath) Parameters Type Name Description System.String imagePath Append(TextRun) Declaration public void Append(TextRun textRun) Parameters Type Name Description TextRun textRun Split(String) Declaration public List<TextRun> Split(string delimiter) Parameters Type Name Description System.String delimiter Returns Type Description System.Collections.Generic.List < TextRun > Inherited members AddText(String) AddText(String, TextStyle) FindAndReplace(String, String, Nullable<RegexOptions>, Boolean, Boolean) SplitTextRun(String) ConcatenateTextRuns() ToString() TextRuns CurrentStyle Status AddChild(ContentElement[]) InsertChildToIndex(Int32, ContentElement[]) RemoveChildren(ContentElement[]) RemoveAllChildren() Remove() RemoveRange(ContentRange) ExtractElements<T>() GetIndex<T>() GetChildByIndex<T>(Int32) Range Parent Children"
  },
  "api/IronWord.Models.TextStyle.html": {
    "href": "api/IronWord.Models.TextStyle.html",
    "title": "Class TextStyle | C# Word API | IronWord",
    "keywords": "Class TextStyle Inheritance System.Object TextStyle Style Implements System.ICloneable Namespace : IronWord.Models Assembly : IronWord.dll Syntax public class TextStyle : Object Constructors TextStyle() Declaration public TextStyle() Properties FontFamily Declaration public string FontFamily { get; set; } Property Value Type Description System.String FontSize Declaration public float FontSize { get; set; } Property Value Type Description System.Single IsBold Declaration public bool IsBold { get; set; } Property Value Type Description System.Boolean IsItalic Declaration public bool IsItalic { get; set; } Property Value Type Description System.Boolean IsStrikethrough Declaration public bool IsStrikethrough { get; set; } Property Value Type Description System.Boolean IsSubscript Declaration public bool IsSubscript { get; set; } Property Value Type Description System.Boolean IsSuperscript Declaration public bool IsSuperscript { get; set; } Property Value Type Description System.Boolean IsUnderline Declaration public bool IsUnderline { get; set; } Property Value Type Description System.Boolean TextColor Declaration public IronColor TextColor { get; set; } Property Value Type Description IronColor Methods Clone() Declaration public object Clone() Returns Type Description System.Object Reset() Declaration public TextStyle Reset() Returns Type Description TextStyle SetFontFamily(String) Declaration public TextStyle SetFontFamily(string fontFamily) Parameters Type Name Description System.String fontFamily Returns Type Description TextStyle SetFontSize(Single) Declaration public TextStyle SetFontSize(float fontSize) Parameters Type Name Description System.Single fontSize Returns Type Description TextStyle SetTextColor(Color) Declaration public TextStyle SetTextColor(Color color) Parameters Type Name Description IronSoftware.Drawing.Color color Returns Type Description TextStyle Implements System.ICloneable"
  },
  "api/IronWord.StartUp.html": {
    "href": "api/IronWord.StartUp.html",
    "title": "Class StartUp | C# Word API | IronWord",
    "keywords": "Class StartUp Inheritance System.Object StartUp Namespace : IronWord Assembly : IronWord.dll Syntax public class StartUp : Object Constructors StartUp() Declaration public StartUp() Methods ConfigureServices(IServiceCollection) Declaration public void ConfigureServices(IServiceCollection services) Parameters Type Name Description Microsoft.Extensions.DependencyInjection.IServiceCollection services"
  },
  "api/IronWord.WordDocument.html": {
    "href": "api/IronWord.WordDocument.html",
    "title": "Class WordDocument | C# Word API | IronWord",
    "keywords": "Class WordDocument Inheritance System.Object WordDocument Implements IronSoftware.IDocumentPageContainer Namespace : IronWord Assembly : IronWord.dll Syntax public class WordDocument : Object Constructors WordDocument() Declaration public WordDocument() WordDocument(ContentElement[]) Declaration public WordDocument(params ContentElement[] children) Parameters Type Name Description ContentElement [] children WordDocument(String) Declaration public WordDocument(string filePath) Parameters Type Name Description System.String filePath Properties Charts Declaration public List<Chart> Charts { get; } Property Value Type Description System.Collections.Generic.List < Chart > Paragraphs Declaration public List<Paragraph> Paragraphs { get; } Property Value Type Description System.Collections.Generic.List < Paragraph > Tables Declaration public List<Table> Tables { get; } Property Value Type Description System.Collections.Generic.List < Table > Methods AddChart(Chart) Declaration public void AddChart(Chart chart) Parameters Type Name Description Chart chart AddChart(ChartType, String) Declaration public void AddChart(ChartType type, string title) Parameters Type Name Description ChartType type System.String title AddParagraph() Declaration public void AddParagraph() AddParagraph(Paragraph) Declaration public void AddParagraph(Paragraph paragraph) Parameters Type Name Description Paragraph paragraph AddSection(DocumentSection) Declaration public void AddSection(DocumentSection section) Parameters Type Name Description DocumentSection section AddSection(DocumentSectionType) Declaration public void AddSection(DocumentSectionType sectionType) Parameters Type Name Description DocumentSectionType sectionType AddTable(Table) Declaration public void AddTable(Table table) Parameters Type Name Description Table table AddText(String) Declaration public void AddText(string content) Parameters Type Name Description System.String content AddText(String, TextStyle) Declaration public void AddText(string content, TextStyle style) Parameters Type Name Description System.String content TextStyle style ExportToMarkdownFile(String) Declaration public void ExportToMarkdownFile(string filePath) Parameters Type Name Description System.String filePath ExportToPdf(String) Declaration public void ExportToPdf(string filePath) Parameters Type Name Description System.String filePath FromFile(String) Declaration public static WordDocument FromFile(string filePath) Parameters Type Name Description System.String filePath Returns Type Description WordDocument FromMarkdown(String) Declaration public WordDocument FromMarkdown(string markDown) Parameters Type Name Description System.String markDown Returns Type Description WordDocument FromMarkdownFile(String) Declaration public WordDocument FromMarkdownFile(string filePath) Parameters Type Name Description System.String filePath Returns Type Description WordDocument PerformMailMerge(Dictionary<String, String>) Declaration public void PerformMailMerge(Dictionary<string, string> dataSource) Parameters Type Name Description System.Collections.Generic.Dictionary < System.String , System.String > dataSource Save() Declaration public void Save() Save(String) Declaration public void Save(string filePath) Parameters Type Name Description System.String filePath SaveAs(String) Declaration public void SaveAs(string filePath) Parameters Type Name Description System.String filePath Implements IronSoftware.IDocumentPageContainer"
  }
}
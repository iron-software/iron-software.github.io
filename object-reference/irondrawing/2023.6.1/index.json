{
  "api/index.html": {
    "href": "api/index.html",
    "title": "IronSoftware.System.Drawing | C# IronDrawing API | IronDrawing",
    "keywords": "IronSoftware.System.Drawing IronSoftware.System.Drawing (henceforth referred to as \" IronSoftware.Drawing \" or \"IronDrawing\") is an open-source library originally developed by Iron Software that helps C# Software Engineers to replace `System.Drawing.Common in .NET projects on Windows, macOS and Linux platforms in .NET 5 and above. IronDrawing features an intdduuitive API for instances of and conversion of bitmaps (called AnyBitmap ), rectangles (called CropRectangle ), colors (called Color ), and fonts (called Fonts ). There is a quick-start guide at https://ironsoftware.com/open-source/csharp/drawing/docs/ Compatibility IronSoftware.Drawing has cross platform support compatibility with: .NET 7, .NET 6, .NET 5, .NET Core, .NET Standard, and .NET Framework 4.6.2+ Windows, macOS, Linux, Docker, Azure, and AWS Converts between all of the old and new graphics libraries. For Bitmap , Color , Rectangle , and Font Inputs and Outputs can be of only one type that supports ALL of the new standards. Internally, you can continue to do what you like. To Install Add IronSoftware.System.Drawing from the official NuGet website or use: # Package Manager Console Install-Package IronSoftware.System.Drawing # .NET Command Line Interface (CLI) dotnet add package IronSoftware.System.Drawing Documentation Links Company Information https://ironsoftware.com/ Support : developers@ironsoftware.com"
  },
  "api/IronSoftware.Drawing.AnyBitmap.FlipMode.html": {
    "href": "api/IronSoftware.Drawing.AnyBitmap.FlipMode.html",
    "title": "Class AnyBitmap.FlipMode | C# IronDrawing API | IronDrawing",
    "keywords": "Class AnyBitmap.FlipMode Provides enumeration over how a image should be flipped. Inheritance System.Object AnyBitmap.FlipMode Namespace : IronSoftware.Drawing Assembly : IronSoftware.Drawing.Common.dll Syntax public sealed class FlipMode : Enum Fields Horizontal Flip the image horizontally. Declaration public const AnyBitmap.FlipMode Horizontal Field Value Type Description AnyBitmap.FlipMode None Don't flip the image. Declaration public const AnyBitmap.FlipMode None Field Value Type Description AnyBitmap.FlipMode value__ Declaration public int value__ Field Value Type Description System.Int32 Vertical Flip the image vertically. Declaration public const AnyBitmap.FlipMode Vertical Field Value Type Description AnyBitmap.FlipMode"
  },
  "api/IronSoftware.Drawing.AnyBitmap.html": {
    "href": "api/IronSoftware.Drawing.AnyBitmap.html",
    "title": "Class AnyBitmap | C# IronDrawing API | IronDrawing",
    "keywords": "Class AnyBitmap A universally compatible Bitmap format for .NET 7, .NET 6, .NET 5, and .NET Core. As well as compatibility with Windows, NanoServer, IIS, macOS, Mobile, Xamarin, iOS, Android, Google Cloud, Azure, AWS, and Linux. Works nicely with popular Image and Bitmap formats such as System.Drawing.Bitmap, SkiaSharp, SixLabors.ImageSharp, Microsoft.Maui.Graphics. Implicit casting means that using this class to input and output Bitmap and image types from public API's gives full compatibility to all image type fully supported by Microsoft. Unlike System.Drawing.Bitmap this bitmap object is self-memory-managing and does not need to be explicitly 'used' or 'disposed'. Inheritance System.Object AnyBitmap Implements System.IDisposable Namespace : IronSoftware.Drawing Assembly : IronSoftware.Drawing.Common.dll Syntax public class AnyBitmap : Object Constructors AnyBitmap(AnyBitmap, Int32, Int32) Declaration public AnyBitmap(AnyBitmap original, int width, int height) Parameters Type Name Description AnyBitmap original The AnyBitmap from which to create the new AnyBitmap . System.Int32 width The width of the new AnyBitmap. System.Int32 height The height of the new AnyBitmap. AnyBitmap(Byte[]) Construct a new Bitmap from binary data (bytes). Declaration public AnyBitmap(byte[] bytes) Parameters Type Name Description System.Byte [] bytes A ByteArray of image data in any common format. See Also FromBytes(Byte[]) AnyBitmap AnyBitmap(MemoryStream) Construct a new Bitmap from a System.IO.Stream (bytes). Declaration public AnyBitmap(MemoryStream stream) Parameters Type Name Description System.IO.MemoryStream stream A System.IO.Stream of image data in any common format. See Also FromStream(Stream) AnyBitmap AnyBitmap(Stream) Construct a new Bitmap from a System.IO.Stream (bytes). Declaration public AnyBitmap(Stream stream) Parameters Type Name Description System.IO.Stream stream A System.IO.Stream of image data in any common format. See Also FromStream(MemoryStream) AnyBitmap AnyBitmap(String) Construct a new Bitmap from a file. Declaration public AnyBitmap(string file) Parameters Type Name Description System.String file A fully qualified file path./ See Also FromFile(String) AnyBitmap AnyBitmap(Uri) Construct a new Bitmap from a Uri Declaration public AnyBitmap(Uri uri) Parameters Type Name Description System.Uri uri The uri of the image. See Also FromUriAsync(Uri) AnyBitmap Properties BitsPerPixel Gets colors depth, in number of bits per pixel. Further Documentation: Code Example Declaration public int BitsPerPixel { get; } Property Value Type Description System.Int32 FrameCount Returns the number of frames in our loaded Image. Each “frame” is a page of an image such as Tiff or Gif. All other image formats return 1. Further Documentation: Code Example Declaration public int FrameCount { get; } Property Value Type Description System.Int32 See Also GetAllFrames GetAllFrames Returns all of the cloned frames in our loaded Image. Each \"frame\" is a page of an image such as Tiff or Gif. All other image formats return an IEnumerable of length 1. Further Documentation: Code Example Declaration public IEnumerable<AnyBitmap> GetAllFrames { get; } Property Value Type Description System.Collections.Generic.IEnumerable < AnyBitmap > See Also FrameCount System.Linq Height Height of the image. Declaration public int Height { get; } Property Value Type Description System.Int32 HorizontalResolution Gets the resolution of the image in x-direction. Declaration public Nullable<double> HorizontalResolution { get; } Property Value Type Description System.Nullable < System.Double > Length Number of raw image bytes stored Declaration public int Length { get; } Property Value Type Description System.Int32 MimeType Returns the HTTP MIME types of the image. must be one of the following: image/bmp, image/jpeg, image/png, image/gif, image/tiff, image/webp, or image/unknown. Declaration public string MimeType { get; } Property Value Type Description System.String Scan0 Gets the address of the first pixel data in the AnyBitmap . This can also be thought of as the first scan line in the AnyBitmap . Declaration public IntPtr Scan0 { get; } Property Value Type Description System.IntPtr The address of the first 32bpp BGRA pixel data in the AnyBitmap . Stride Gets the stride width (also called scan width) of the AnyBitmap object. Declaration public int Stride { get; } Property Value Type Description System.Int32 VerticalResolution Gets the resolution of the image in y-direction. Declaration public Nullable<double> VerticalResolution { get; } Property Value Type Description System.Nullable < System.Double > Width Width of the image. Declaration public int Width { get; } Property Value Type Description System.Int32 Methods Clone() Creates an exact duplicate AnyBitmap Further Documentation: Code Example Declaration public AnyBitmap Clone() Returns Type Description AnyBitmap Clone(CropRectangle) Creates an exact duplicate AnyBitmap of the cropped area. Further Documentation: Code Example Declaration public AnyBitmap Clone(CropRectangle rectangle) Parameters Type Name Description CropRectangle rectangle Defines the portion of this AnyBitmap to copy. Returns Type Description AnyBitmap CreateMultiFrameGif(IEnumerable<AnyBitmap>) Creates a multi-frame GIF image from multiple AnyBitmaps. All images should have the same dimension. If not dimension will be scaling to the largest width and height. The image dimension still the same with original dimension with background transparent. Declaration public static AnyBitmap CreateMultiFrameGif(IEnumerable<AnyBitmap> images) Parameters Type Name Description System.Collections.Generic.IEnumerable < AnyBitmap > images Array of AnyBitmap to merge into Gif image. Returns Type Description AnyBitmap CreateMultiFrameGif(IEnumerable<String>) Creates a multi-frame GIF image from multiple AnyBitmaps. All images should have the same dimension. If not dimension will be scaling to the largest width and height. The image dimension still the same with original dimension with background transparent. Declaration public static AnyBitmap CreateMultiFrameGif(IEnumerable<string> imagePaths) Parameters Type Name Description System.Collections.Generic.IEnumerable < System.String > imagePaths Array of fully qualified file path to merge into Gif image. Returns Type Description AnyBitmap CreateMultiFrameTiff(IEnumerable<AnyBitmap>) Creates a multi-frame TIFF image from multiple AnyBitmaps. All images should have the same dimension. If not dimension will be scaling to the largest width and height. The image dimension still the same with original dimension with black background. Declaration public static AnyBitmap CreateMultiFrameTiff(IEnumerable<AnyBitmap> images) Parameters Type Name Description System.Collections.Generic.IEnumerable < AnyBitmap > images Array of AnyBitmap to merge into Tiff image. Returns Type Description AnyBitmap CreateMultiFrameTiff(IEnumerable<String>) Creates a multi-frame TIFF image from multiple AnyBitmaps. All images should have the same dimension. If not dimension will be scaling to the largest width and height. The image dimension still the same with original dimension with black background. Declaration public static AnyBitmap CreateMultiFrameTiff(IEnumerable<string> imagePaths) Parameters Type Name Description System.Collections.Generic.IEnumerable < System.String > imagePaths Array of fully qualified file path to merge into Tiff image. Returns Type Description AnyBitmap Dispose() Releases all resources used by this AnyBitmap . Declaration public void Dispose() Dispose(Boolean) Releases all resources used by this AnyBitmap . Declaration protected virtual void Dispose(bool disposing) Parameters Type Name Description System.Boolean disposing ExportBytes(AnyBitmap.ImageFormat, Int32) Exports the Bitmap as bytes encoded in the AnyBitmap.ImageFormat of your choice. Add SkiaSharp, System.Drawing.Common, or SixLabors.ImageSharp to your project to enable this feature. Declaration public byte[] ExportBytes(AnyBitmap.ImageFormat format, int lossy = 100) Parameters Type Name Description AnyBitmap.ImageFormat format An image encoding format. System.Int32 lossy JPEG and WebP encoding quality (ignored for all other values of AnyBitmap.ImageFormat ). Higher values return larger file sizes. 0 is lowest quality , 100 is highest. Returns Type Description System.Byte [] Transcoded image bytes. ExportFile(String, AnyBitmap.ImageFormat, Int32) Exports the Bitmap as a file encoded in the AnyBitmap.ImageFormat of your choice. Add SkiaSharp, System.Drawing.Common, or SixLabors.ImageSharp to your project to enable the encoding feature. Further Documentation: Code Example Declaration public void ExportFile(string file, AnyBitmap.ImageFormat format, int lossy = 100) Parameters Type Name Description System.String file A fully qualified file path. AnyBitmap.ImageFormat format An image encoding format. System.Int32 lossy JPEG and WebP encoding quality (ignored for all other values of AnyBitmap.ImageFormat ). Higher values return larger file sizes. 0 is lowest quality, 100 is highest. ExportStream(Stream, AnyBitmap.ImageFormat, Int32) Saves the Bitmap to an existing System.IO.Stream encoded in the AnyBitmap.ImageFormat of your choice. Add SkiaSharp, System.Drawing.Common, or SixLabors.ImageSharp to your project to enable the encoding feature. Declaration public void ExportStream(Stream stream, AnyBitmap.ImageFormat format, int lossy = 100) Parameters Type Name Description System.IO.Stream stream An image encoding format. AnyBitmap.ImageFormat format An image encoding format. System.Int32 lossy JPEG and WebP encoding quality (ignored for all other values of AnyBitmap.ImageFormat ). Higher values return larger file sizes. 0 is lowest quality, 100 is highest. Finalize() AnyBitmap destructor Declaration protected override void Finalize() FromBitmap<T>(T) Generic method to convert popular image types to AnyBitmap . Support includes SixLabors.ImageSharp.Image, SkiaSharp.SKImage, SkiaSharp.SKBitmap, System.Drawing.Bitmap, System.Drawing.Image and Microsoft.Maui.Graphics formats. Syntax sugar. Explicit casts already also exist to and from AnyBitmap and all supported types. Declaration public static AnyBitmap FromBitmap<T>(T otherBitmapFormat) Parameters Type Name Description T otherBitmapFormat A bitmap or image format from another graphics library. Returns Type Description AnyBitmap A AnyBitmap Type Parameters Name Description T The Type to cast from. Support includes SixLabors.ImageSharp.Image, SkiaSharp.SKImage, SkiaSharp.SKBitmap, System.Drawing.Bitmap, System.Drawing.Image and Microsoft.Maui.Graphics formats. FromBytes(Byte[]) Create a new Bitmap from a a Byte Array. Declaration public static AnyBitmap FromBytes(byte[] bytes) Parameters Type Name Description System.Byte [] bytes A ByteArray of image data in any common format. Returns Type Description AnyBitmap See Also FromBytes(Byte[]) AnyBitmap(Byte[]) FromFile(String) Create a new Bitmap from a file. Declaration public static AnyBitmap FromFile(string file) Parameters Type Name Description System.String file A fully qualified file path. Returns Type Description AnyBitmap See Also FromFile(String) AnyBitmap FromStream(MemoryStream) Create a new Bitmap from a System.IO.Stream (bytes). Declaration public static AnyBitmap FromStream(MemoryStream stream) Parameters Type Name Description System.IO.MemoryStream stream A System.IO.Stream of image data in any common format. Returns Type Description AnyBitmap See Also FromStream(Stream) AnyBitmap FromStream(Stream) Create a new Bitmap from a System.IO.Stream (bytes). Declaration public static AnyBitmap FromStream(Stream stream) Parameters Type Name Description System.IO.Stream stream A System.IO.Stream of image data in any common format. Returns Type Description AnyBitmap See Also FromStream(MemoryStream) AnyBitmap FromUri(Uri) Construct a new Bitmap from a Uri Declaration public static AnyBitmap FromUri(Uri uri) Parameters Type Name Description System.Uri uri The uri of the image. Returns Type Description AnyBitmap See Also AnyBitmap FromUriAsync(Uri) FromUriAsync(Uri) Construct a new Bitmap from a Uri Declaration public static Task<AnyBitmap> FromUriAsync(Uri uri) Parameters Type Name Description System.Uri uri The uri of the image. Returns Type Description System.Threading.Tasks.Task < AnyBitmap > See Also AnyBitmap FromUri(Uri) FromUriAsync(Uri) GetBytes() The raw image data as byte[] (ByteArray)\"/> Declaration public byte[] GetBytes() Returns Type Description System.Byte [] A byte[] (ByteArray) GetHashCode() Hashing integer based on image raw binary data. Declaration public override int GetHashCode() Returns Type Description System.Int32 Int GetImageFormat() Image formats which AnyBitmap readed. Declaration public AnyBitmap.ImageFormat GetImageFormat() Returns Type Description AnyBitmap.ImageFormat AnyBitmap.ImageFormat GetPixel(Int32, Int32) Gets the Color of the specified pixel in this AnyBitmap This always return an Rgba32 color format. Declaration public Color GetPixel(int x, int y) Parameters Type Name Description System.Int32 x The x-coordinate of the pixel to retrieve. System.Int32 y The y-coordinate of the pixel to retrieve. Returns Type Description Color A Color structure that represents the color of the specified pixel. GetRGBBuffer() Retrieves the RGB buffer from the image at the specified path. Declaration public byte[] GetRGBBuffer() Returns Type Description System.Byte [] An array of bytes representing the RGB buffer of the image. Remarks Each pixel is represented by three bytes in the order: red, green, blue. The pixels are read from the image row by row, from top to bottom and left to right within each row. GetStream() The raw image data as a System.IO.MemoryStream Further Documentation: Code Example Declaration public MemoryStream GetStream() Returns Type Description System.IO.MemoryStream System.IO.MemoryStream LoadAnyBitmapFromRGBBuffer(Byte[], Int32, Int32) Creates an AnyBitmap object from a buffer of RGB pixel data. Declaration public static AnyBitmap LoadAnyBitmapFromRGBBuffer(byte[] buffer, int width, int height) Parameters Type Name Description System.Byte [] buffer An array of bytes representing the RGB pixel data. This should contain 3 bytes (one each for red, green, and blue) for each pixel in the image. System.Int32 width The width of the image, in pixels. System.Int32 height The height of the image, in pixels. Returns Type Description AnyBitmap An AnyBitmap object that represents the image defined by the provided pixel data, width, and height. Redact(AnyBitmap, CropRectangle, Color) Creates a new bitmap with the region defined by the specified crop rectangle in the specified bitmap redacted with the specified color. Declaration public static AnyBitmap Redact(AnyBitmap bitmap, CropRectangle cropRectangle, Color color) Parameters Type Name Description AnyBitmap bitmap The bitmap to redact. CropRectangle cropRectangle The crop rectangle defining the region to redact. Color color The color to use for redaction. Returns Type Description AnyBitmap A new bitmap with the specified region redacted. Redact(CropRectangle, Color) Creates a new bitmap with the region defined by the specified crop rectangle redacted with the specified color. Declaration public AnyBitmap Redact(CropRectangle cropRectangle, Color color) Parameters Type Name Description CropRectangle cropRectangle The crop rectangle defining the region to redact. Color color The color to use for redaction. Returns Type Description AnyBitmap A new bitmap with the specified region redacted. RotateFlip(AnyBitmap, AnyBitmap.RotateMode, AnyBitmap.FlipMode) Specifies how much an image is rotated and the axis used to flip the image. Declaration public static AnyBitmap RotateFlip(AnyBitmap bitmap, AnyBitmap.RotateMode rotateMode, AnyBitmap.FlipMode flipMode) Parameters Type Name Description AnyBitmap bitmap The AnyBitmap to perform the transformation on. AnyBitmap.RotateMode rotateMode Provides enumeration over how the image should be rotated. AnyBitmap.FlipMode flipMode Provides enumeration over how a image should be flipped. Returns Type Description AnyBitmap Transformed image RotateFlip(AnyBitmap.RotateFlipType) Specifies how much an AnyBitmap is rotated and the axis used to flip the image. Declaration public AnyBitmap RotateFlip(AnyBitmap.RotateFlipType rotateFlipType) Parameters Type Name Description AnyBitmap.RotateFlipType rotateFlipType Provides enumeration over how the image should be rotated. Returns Type Description AnyBitmap Transformed image RotateFlip(AnyBitmap.RotateMode, AnyBitmap.FlipMode) Specifies how much an AnyBitmap is rotated and the axis used to flip the image. Declaration public AnyBitmap RotateFlip(AnyBitmap.RotateMode rotateMode, AnyBitmap.FlipMode flipMode) Parameters Type Name Description AnyBitmap.RotateMode rotateMode Provides enumeration over how the image should be rotated. AnyBitmap.FlipMode flipMode Provides enumeration over how a image should be flipped. Returns Type Description AnyBitmap Transformed image SaveAs(String) Saves the raw image data to a file. Declaration public void SaveAs(string file) Parameters Type Name Description System.String file A fully qualified file path. See Also TrySaveAs(String) SaveAs(String, AnyBitmap.ImageFormat, Int32) Saves the image data to a file. Allows for the image to be transcoded to popular image formats. Add SkiaSharp, System.Drawing.Common, or SixLabors.ImageSharp to your project to enable the encoding feature. Declaration public void SaveAs(string file, AnyBitmap.ImageFormat format, int lossy = 100) Parameters Type Name Description System.String file A fully qualified file path. AnyBitmap.ImageFormat format An image encoding format. System.Int32 lossy JPEG and WebP encoding quality (ignored for all other values of AnyBitmap.ImageFormat ). Higher values return larger file sizes. 0 is lowest quality , 100 is highest. See Also TrySaveAs(String, AnyBitmap.ImageFormat, Int32) TrySaveAs(String) ToBitmap<T>() Generic method to convert AnyBitmap to popular image types. Support includes SixLabors.ImageSharp.Image, SkiaSharp.SKImage, SkiaSharp.SKBitmap, System.Drawing.Bitmap, System.Drawing.Image and Microsoft.Maui.Graphics formats. Syntax sugar. Explicit casts already also exist to and from AnyBitmap and all supported types. Declaration public T ToBitmap<T>() Returns Type Description T A AnyBitmap Type Parameters Name Description T The Type to cast to. Support includes SixLabors.ImageSharp.Image, SkiaSharp.SKImage, SkiaSharp.SKBitmap, System.Drawing.Bitmap, System.Drawing.Image and Microsoft.Maui.Graphics formats. ToStream(AnyBitmap.ImageFormat, Int32) Exports the Bitmap as a System.IO.MemoryStream encoded in the AnyBitmap.ImageFormat of your choice. Add SkiaSharp, System.Drawing.Common, or SixLabors.ImageSharp to your project to enable the encoding feature. Further Documentation: Code Example Declaration public MemoryStream ToStream(AnyBitmap.ImageFormat format, int lossy = 100) Parameters Type Name Description AnyBitmap.ImageFormat format An image encoding format. System.Int32 lossy JPEG and WebP encoding quality (ignored for all other values of AnyBitmap.ImageFormat ). Higher values return larger file sizes. 0 is lowest quality, 100 is highest. Returns Type Description System.IO.MemoryStream Transcoded image bytes in a System.IO.MemoryStream . ToStreamFn(AnyBitmap.ImageFormat, Int32) Exports the Bitmap as a Func System.IO.MemoryStream > encoded in the AnyBitmap.ImageFormat of your choice. Add SkiaSharp, System.Drawing.Common, or SixLabors.ImageSharp to your project to enable the encoding feature. Declaration public Func<Stream> ToStreamFn(AnyBitmap.ImageFormat format, int lossy = 100) Parameters Type Name Description AnyBitmap.ImageFormat format An image encoding format. System.Int32 lossy JPEG and WebP encoding quality (ignored for all other values of AnyBitmap.ImageFormat ). Higher values return larger file sizes. 0 is lowest quality, 100 is highest. Returns Type Description System.Func < System.IO.Stream > Transcoded image bytes in a Func System.IO.MemoryStream ToString() A Base64 encoded string representation of the raw image binary data. Further Documentation: Code Example Declaration public override string ToString() Returns Type Description System.String The bitmap data as a Base64 string. See Also System.Convert.ToBase64String(System.Byte[]) TrySaveAs(String) Tries to Save the raw image data to a file. returns true on success, false on failure. Declaration public bool TrySaveAs(string file) Parameters Type Name Description System.String file A fully qualified file path. Returns Type Description System.Boolean See Also SaveAs(String) TrySaveAs(String, AnyBitmap.ImageFormat, Int32) Tries to Save the image data to a file. Allows for the image to be transcoded to popular image formats. Add SkiaSharp, System.Drawing.Common, or SixLabors.ImageSharp to your project to enable the encoding feature. Declaration public bool TrySaveAs(string file, AnyBitmap.ImageFormat format, int lossy = 100) Parameters Type Name Description System.String file A fully qualified file path. AnyBitmap.ImageFormat format An image encoding format. System.Int32 lossy JPEG and WebP encoding quality (ignored for all other values of AnyBitmap.ImageFormat ). Higher values return larger file sizes. 0 is lowest quality , 100 is highest. Returns Type Description System.Boolean returns true on success, false on failure. See Also SaveAs(String, AnyBitmap.ImageFormat, Int32) Operators Implicit(AnyBitmap to PlatformImage) Implicitly casts to Microsoft.Maui.Graphics.Platform.PlatformImage objects from AnyBitmap . When your .NET Class methods use AnyBitmap as parameters or return types, you now automatically support Microsoft.Maui.Graphics as well. Declaration public static implicit operator PlatformImage(AnyBitmap bitmap) Parameters Type Name Description AnyBitmap bitmap AnyBitmap is implicitly cast to a Microsoft.Maui.Graphics.Platform.PlatformImage. Returns Type Description Microsoft.Maui.Graphics.Platform.PlatformImage Implicit(AnyBitmap to Image) Implicitly casts to SixLabors.ImageSharp.Image objects from AnyBitmap . When your .NET Class methods use AnyBitmap as parameters or return types, you now automatically support ImageSharp as well. Declaration public static implicit operator Image(AnyBitmap bitmap) Parameters Type Name Description AnyBitmap bitmap AnyBitmap is implicitly cast to a SixLabors.ImageSharp.Image. Returns Type Description SixLabors.ImageSharp.Image Implicit(AnyBitmap to Image<Rgb24>) Implicitly casts to SixLabors.ImageSharp.Image objects from AnyBitmap . When your .NET Class methods use AnyBitmap as parameters or return types, you now automatically support ImageSharp as well. Declaration public static implicit operator Image<Rgb24>(AnyBitmap bitmap) Parameters Type Name Description AnyBitmap bitmap AnyBitmap is implicitly cast to a SixLabors.ImageSharp.Image. Returns Type Description SixLabors.ImageSharp.Image < SixLabors.ImageSharp.PixelFormats.Rgb24 > Implicit(AnyBitmap to Image<Rgba32>) Implicitly casts to SixLabors.ImageSharp.Image objects from AnyBitmap . When your .NET Class methods use AnyBitmap as parameters or return types, you now automatically support ImageSharp as well. Declaration public static implicit operator Image<Rgba32>(AnyBitmap bitmap) Parameters Type Name Description AnyBitmap bitmap AnyBitmap is implicitly cast to a SixLabors.ImageSharp.Image. Returns Type Description SixLabors.ImageSharp.Image < SixLabors.ImageSharp.PixelFormats.Rgba32 > Implicit(AnyBitmap to SKBitmap) Implicitly casts to SkiaSharp.SKBitmap objects from AnyBitmap . When your .NET Class methods use AnyBitmap as parameters or return types, you now automatically support SkiaSharp.SKBitmap as well. Declaration public static implicit operator SKBitmap(AnyBitmap bitmap) Parameters Type Name Description AnyBitmap bitmap AnyBitmap is explicitly cast to a SkiaSharp.SKBitmap. Returns Type Description SkiaSharp.SKBitmap Implicit(AnyBitmap to SKImage) Implicitly casts to SkiaSharp.SKImage objects from AnyBitmap . When your .NET Class methods use AnyBitmap as parameters or return types, you now automatically support SkiaSharp.SKImage as well. Declaration public static implicit operator SKImage(AnyBitmap bitmap) Parameters Type Name Description AnyBitmap bitmap AnyBitmap is implicitly cast to a SkiaSharp.SKImage. Returns Type Description SkiaSharp.SKImage Implicit(AnyBitmap to Bitmap) Implicitly casts to System.Drawing.Bitmap objects from AnyBitmap . When your .NET Class methods use AnyBitmap as parameters or return types, you now automatically support System.Drawing.Common as well. Declaration public static implicit operator Bitmap(AnyBitmap bitmap) Parameters Type Name Description AnyBitmap bitmap AnyBitmap is implicitly cast to a System.Drawing.Bitmap. Returns Type Description System.Drawing.Bitmap Implicit(AnyBitmap to Image) Implicitly casts to System.Drawing.Image objects from AnyBitmap . When your .NET Class methods use AnyBitmap as parameters or return types, you now automatically support System.Drawing.Common as well. Declaration public static implicit operator Image(AnyBitmap bitmap) Parameters Type Name Description AnyBitmap bitmap AnyBitmap is implicitly cast to a System.Drawing.Image. Returns Type Description System.Drawing.Image Implicit(PlatformImage to AnyBitmap) Implicitly casts Microsoft.Maui.Graphics.Platform.PlatformImage objects to AnyBitmap . When your .NET Class methods use AnyBitmap as parameters or return types, you now automatically support Microsoft.Maui.Graphics as well. Declaration public static implicit operator AnyBitmap(PlatformImage image) Parameters Type Name Description Microsoft.Maui.Graphics.Platform.PlatformImage image Microsoft.Maui.Graphics.Platform.PlatformImage will automatically be cast to AnyBitmap . Returns Type Description AnyBitmap Implicit(Image to AnyBitmap) Implicitly casts SixLabors.ImageSharp.Image objects to AnyBitmap . When your .NET Class methods use AnyBitmap as parameters or return types, you now automatically support ImageSharp as well. Declaration public static implicit operator AnyBitmap(Image image) Parameters Type Name Description SixLabors.ImageSharp.Image image SixLabors.ImageSharp.Image will automatically be cast to AnyBitmap . Returns Type Description AnyBitmap Implicit(Image<Rgb24> to AnyBitmap) Implicitly casts SixLabors.ImageSharp.Image objects to AnyBitmap . When your .NET Class methods use AnyBitmap as parameters or return types, you now automatically support ImageSharp as well. Declaration public static implicit operator AnyBitmap(Image<Rgb24> image) Parameters Type Name Description SixLabors.ImageSharp.Image < SixLabors.ImageSharp.PixelFormats.Rgb24 > image SixLabors.ImageSharp.Image will automatically be cast to AnyBitmap . Returns Type Description AnyBitmap Implicit(Image<Rgba32> to AnyBitmap) Implicitly casts SixLabors.ImageSharp.Image objects to AnyBitmap . When your .NET Class methods use AnyBitmap as parameters or return types, you now automatically support ImageSharp as well. Declaration public static implicit operator AnyBitmap(Image<Rgba32> image) Parameters Type Name Description SixLabors.ImageSharp.Image < SixLabors.ImageSharp.PixelFormats.Rgba32 > image SixLabors.ImageSharp.Image will automatically be cast to AnyBitmap . Returns Type Description AnyBitmap Implicit(SKBitmap to AnyBitmap) Implicitly casts SkiaSharp.SKBitmap objects to AnyBitmap . When your .NET Class methods use AnyBitmap as parameters or return types, you now automatically support SkiaSharp as well. Declaration public static implicit operator AnyBitmap(SKBitmap image) Parameters Type Name Description SkiaSharp.SKBitmap image SkiaSharp.SKBitmap will automatically be cast to AnyBitmap . Returns Type Description AnyBitmap Implicit(SKImage to AnyBitmap) Implicitly casts SkiaSharp.SKImage objects to AnyBitmap . When your .NET Class methods use AnyBitmap as parameters or return types, you now automatically support SkiaSharp as well. Declaration public static implicit operator AnyBitmap(SKImage image) Parameters Type Name Description SkiaSharp.SKImage image SkiaSharp.SKImage will automatically be cast to AnyBitmap . Returns Type Description AnyBitmap Implicit(Bitmap to AnyBitmap) Implicitly casts System.Drawing.Bitmap objects to AnyBitmap . When your .NET Class methods use AnyBitmap as parameters or return types, you now automatically support System.Drawing.Common as well. Declaration public static implicit operator AnyBitmap(Bitmap image) Parameters Type Name Description System.Drawing.Bitmap image System.Drawing.Bitmap will automatically be cast to AnyBitmap Returns Type Description AnyBitmap Implicit(Image to AnyBitmap) Implicitly casts System.Drawing.Image objects to AnyBitmap . When your .NET Class methods use AnyBitmap as parameters or return types, you now automatically support System.Drawing.Common as well. Declaration public static implicit operator AnyBitmap(Image image) Parameters Type Name Description System.Drawing.Image image System.Drawing.Image will automatically be cast to AnyBitmap Returns Type Description AnyBitmap Implements System.IDisposable"
  },
  "api/IronSoftware.Drawing.AnyBitmap.ImageFormat.html": {
    "href": "api/IronSoftware.Drawing.AnyBitmap.ImageFormat.html",
    "title": "Class AnyBitmap.ImageFormat | C# IronDrawing API | IronDrawing",
    "keywords": "Class AnyBitmap.ImageFormat Popular image formats which AnyBitmap can read and export. Inheritance System.Object AnyBitmap.ImageFormat Namespace : IronSoftware.Drawing Assembly : IronSoftware.Drawing.Common.dll Syntax public sealed class ImageFormat : Enum Fields Bmp The Bitmap image format. Declaration public const AnyBitmap.ImageFormat Bmp Field Value Type Description AnyBitmap.ImageFormat Default The existing raw image format. Declaration public const AnyBitmap.ImageFormat Default Field Value Type Description AnyBitmap.ImageFormat Gif The Gif image format. Declaration public const AnyBitmap.ImageFormat Gif Field Value Type Description AnyBitmap.ImageFormat Icon The Icon image format. Declaration public const AnyBitmap.ImageFormat Icon Field Value Type Description AnyBitmap.ImageFormat Jpeg The Jpeg image format. Declaration public const AnyBitmap.ImageFormat Jpeg Field Value Type Description AnyBitmap.ImageFormat Png The PNG image format. Declaration public const AnyBitmap.ImageFormat Png Field Value Type Description AnyBitmap.ImageFormat RawFormat The Raw image format. Declaration public const AnyBitmap.ImageFormat RawFormat Field Value Type Description AnyBitmap.ImageFormat Tiff The Tiff image format. Declaration public const AnyBitmap.ImageFormat Tiff Field Value Type Description AnyBitmap.ImageFormat value__ Declaration public int value__ Field Value Type Description System.Int32 Wbmp The WBMP image format. Will default to BMP if not supported on the runtime platform. Declaration public const AnyBitmap.ImageFormat Wbmp Field Value Type Description AnyBitmap.ImageFormat Webp The new WebP image format. Declaration public const AnyBitmap.ImageFormat Webp Field Value Type Description AnyBitmap.ImageFormat Wmf The Wmf image format. Declaration public const AnyBitmap.ImageFormat Wmf Field Value Type Description AnyBitmap.ImageFormat See Also ExportFile(String, AnyBitmap.ImageFormat, Int32) ExportStream(Stream, AnyBitmap.ImageFormat, Int32) ExportBytes(AnyBitmap.ImageFormat, Int32)"
  },
  "api/IronSoftware.Drawing.AnyBitmap.RotateFlipType.html": {
    "href": "api/IronSoftware.Drawing.AnyBitmap.RotateFlipType.html",
    "title": "Class AnyBitmap.RotateFlipType | C# IronDrawing API | IronDrawing",
    "keywords": "Class AnyBitmap.RotateFlipType Specifies how much an image is rotated and the axis used to flip the image. This follows the legacy System.Drawing.RotateFlipType notation. Inheritance System.Object AnyBitmap.RotateFlipType Namespace : IronSoftware.Drawing Assembly : IronSoftware.Drawing.Common.dll Syntax public sealed class RotateFlipType : Enum Fields Rotate180FlipNone Specifies a 180-degree clockwise rotation without flipping. Declaration public const AnyBitmap.RotateFlipType Rotate180FlipNone Field Value Type Description AnyBitmap.RotateFlipType Rotate180FlipX Specifies a 180-degree clockwise rotation followed by a horizontal flip. Declaration public const AnyBitmap.RotateFlipType Rotate180FlipX Field Value Type Description AnyBitmap.RotateFlipType Rotate180FlipXY Specifies a 180-degree clockwise rotation followed by a horizontal and vertical flip. Declaration public const AnyBitmap.RotateFlipType Rotate180FlipXY Field Value Type Description AnyBitmap.RotateFlipType Rotate180FlipY Specifies a 180-degree clockwise rotation followed by a vertical flip. Declaration public const AnyBitmap.RotateFlipType Rotate180FlipY Field Value Type Description AnyBitmap.RotateFlipType Rotate270FlipNone Specifies a 270-degree clockwise rotation without flipping. Declaration public const AnyBitmap.RotateFlipType Rotate270FlipNone Field Value Type Description AnyBitmap.RotateFlipType Rotate270FlipX Specifies a 270-degree clockwise rotation followed by a horizontal flip. Declaration public const AnyBitmap.RotateFlipType Rotate270FlipX Field Value Type Description AnyBitmap.RotateFlipType Rotate270FlipXY Specifies a 270-degree clockwise rotation followed by a horizontal and vertical flip. Declaration public const AnyBitmap.RotateFlipType Rotate270FlipXY Field Value Type Description AnyBitmap.RotateFlipType Rotate270FlipY Specifies a 270-degree clockwise rotation followed by a vertical flip. Declaration public const AnyBitmap.RotateFlipType Rotate270FlipY Field Value Type Description AnyBitmap.RotateFlipType Rotate90FlipNone Specifies a 90-degree clockwise rotation without flipping. Declaration public const AnyBitmap.RotateFlipType Rotate90FlipNone Field Value Type Description AnyBitmap.RotateFlipType Rotate90FlipX Specifies a 90-degree clockwise rotation followed by a horizontal flip. Declaration public const AnyBitmap.RotateFlipType Rotate90FlipX Field Value Type Description AnyBitmap.RotateFlipType Rotate90FlipXY Specifies a 90-degree clockwise rotation followed by a horizontal and vertical flip. Declaration public const AnyBitmap.RotateFlipType Rotate90FlipXY Field Value Type Description AnyBitmap.RotateFlipType Rotate90FlipY Specifies a 90-degree clockwise rotation followed by a vertical flip. Declaration public const AnyBitmap.RotateFlipType Rotate90FlipY Field Value Type Description AnyBitmap.RotateFlipType RotateNoneFlipNone Specifies no clockwise rotation and no flipping. Declaration public const AnyBitmap.RotateFlipType RotateNoneFlipNone Field Value Type Description AnyBitmap.RotateFlipType RotateNoneFlipX Specifies no clockwise rotation followed by a horizontal flip. Declaration public const AnyBitmap.RotateFlipType RotateNoneFlipX Field Value Type Description AnyBitmap.RotateFlipType RotateNoneFlipXY Specifies no clockwise rotation followed by a horizontal and vertical flip. Declaration public const AnyBitmap.RotateFlipType RotateNoneFlipXY Field Value Type Description AnyBitmap.RotateFlipType RotateNoneFlipY Specifies no clockwise rotation followed by a vertical flip. Declaration public const AnyBitmap.RotateFlipType RotateNoneFlipY Field Value Type Description AnyBitmap.RotateFlipType value__ Declaration public int value__ Field Value Type Description System.Int32"
  },
  "api/IronSoftware.Drawing.AnyBitmap.RotateMode.html": {
    "href": "api/IronSoftware.Drawing.AnyBitmap.RotateMode.html",
    "title": "Class AnyBitmap.RotateMode | C# IronDrawing API | IronDrawing",
    "keywords": "Class AnyBitmap.RotateMode Provides enumeration over how the image should be rotated. Inheritance System.Object AnyBitmap.RotateMode Namespace : IronSoftware.Drawing Assembly : IronSoftware.Drawing.Common.dll Syntax public sealed class RotateMode : Enum Fields None Do not rotate the image. Declaration public const AnyBitmap.RotateMode None Field Value Type Description AnyBitmap.RotateMode Rotate180 Rotate the image by 180 degrees clockwise. Declaration public const AnyBitmap.RotateMode Rotate180 Field Value Type Description AnyBitmap.RotateMode Rotate270 Rotate the image by 270 degrees clockwise. Declaration public const AnyBitmap.RotateMode Rotate270 Field Value Type Description AnyBitmap.RotateMode Rotate90 Rotate the image by 90 degrees clockwise. Declaration public const AnyBitmap.RotateMode Rotate90 Field Value Type Description AnyBitmap.RotateMode value__ Declaration public int value__ Field Value Type Description System.Int32"
  },
  "api/IronSoftware.Drawing.Color.html": {
    "href": "api/IronSoftware.Drawing.Color.html",
    "title": "Class Color | C# IronDrawing API | IronDrawing",
    "keywords": "Class Color A universally compatible Color for .NET 7, .NET 6, .NET 5, and .NET Core. As well as compatiblity with Windows, NanoServer, IIS, macOS, Mobile, Xamarin, iOS, Android, Google Compute, Azure, AWS, and Linux. Works nicely with popular Image Color such as System.Drawing.Color , SkiaSharp.SKColor , SixLabors.ImageSharp.Color , Microsoft.Maui.Graphics.Color . Implicit casting means that using this class to input and output Color from public APIs gives full compatibility to all Color-types fully supported by Microsoft. Inheritance System.Object Color Namespace : IronSoftware.Drawing Assembly : IronSoftware.Drawing.Common.dll Syntax public class Color : Object Constructors Color(Int32, Int32, Int32) Construct a new Color . Further Documentation: Code Example Declaration public Color(int red, int green, int blue) Parameters Type Name Description System.Int32 red The red component. Valid values are 0 through 255. System.Int32 green The green component. Valid values are 0 through 255. System.Int32 blue The blue component. Valid values are 0 through 255. Color(Int32, Int32, Int32, Int32) Construct a new Color . Further Documentation: Code Example Declaration public Color(int alpha, int red, int green, int blue) Parameters Type Name Description System.Int32 alpha The alpha component. Valid values are 0 through 255. System.Int32 red The red component. Valid values are 0 through 255. System.Int32 green The green component. Valid values are 0 through 255. System.Int32 blue The blue component. Valid values are 0 through 255. Color(String) Construct a new Color . Further Documentation: Code Example Declaration public Color(string colorcode) Parameters Type Name Description System.String colorcode The hexadecimal representation of the combined color components arranged in rgb, argb, rrggbb, or aarrggbb format to match web syntax. Fields AliceBlue Gets a system-defined color that has an ARGB value of #F0F8FF. Declaration public static readonly Color AliceBlue Field Value Type Description Color AntiqueWhite Gets a system-defined color that has an ARGB value of #FAEBD7. Declaration public static readonly Color AntiqueWhite Field Value Type Description Color Aqua Gets a system-defined color that has an ARGB value of #00FFFF. Declaration public static readonly Color Aqua Field Value Type Description Color Aquamarine Gets a system-defined color that has an ARGB value of #7FFFD4. Declaration public static readonly Color Aquamarine Field Value Type Description Color Azure Gets a system-defined color that has an ARGB value of #F0FFFF. Declaration public static readonly Color Azure Field Value Type Description Color Beige Gets a system-defined color that has an ARGB value of #F5F5DC. Declaration public static readonly Color Beige Field Value Type Description Color Bisque Gets a system-defined color that has an ARGB value of #FFE4C4. Declaration public static readonly Color Bisque Field Value Type Description Color Black Gets a system-defined color that has an ARGB value of #000000. Declaration public static readonly Color Black Field Value Type Description Color BlanchedAlmond Gets a system-defined color that has an ARGB value of #FFEBCD. Declaration public static readonly Color BlanchedAlmond Field Value Type Description Color Blue Gets a system-defined color that has an ARGB value of #0000FF. Declaration public static readonly Color Blue Field Value Type Description Color BlueViolet Gets a system-defined color that has an ARGB value of #8A2BE2. Declaration public static readonly Color BlueViolet Field Value Type Description Color Brown Gets a system-defined color that has an ARGB value of #A52A2A. Declaration public static readonly Color Brown Field Value Type Description Color BurlyWood Gets a system-defined color that has an ARGB value of #DEB887. Declaration public static readonly Color BurlyWood Field Value Type Description Color CadetBlue Gets a system-defined color that has an ARGB value of #5F9EA0. Declaration public static readonly Color CadetBlue Field Value Type Description Color Chartreuse Gets a system-defined color that has an ARGB value of #7FFF00. Declaration public static readonly Color Chartreuse Field Value Type Description Color Chocolate Gets a system-defined color that has an ARGB value of #D2691E. Declaration public static readonly Color Chocolate Field Value Type Description Color Coral Gets a system-defined color that has an ARGB value of #FF7F50. Declaration public static readonly Color Coral Field Value Type Description Color CornflowerBlue Gets a system-defined color that has an ARGB value of #6495ED. Declaration public static readonly Color CornflowerBlue Field Value Type Description Color Cornsilk Gets a system-defined color that has an ARGB value of #FFF8DC. Declaration public static readonly Color Cornsilk Field Value Type Description Color Crimson Gets a system-defined color that has an ARGB value of #DC143C. Declaration public static readonly Color Crimson Field Value Type Description Color Cyan Gets a system-defined color that has an ARGB value of #00FFFF. Declaration public static readonly Color Cyan Field Value Type Description Color DarkBlue Gets a system-defined color that has an ARGB value of #00008B. Declaration public static readonly Color DarkBlue Field Value Type Description Color DarkCyan Gets a system-defined color that has an ARGB value of #008B8B. Declaration public static readonly Color DarkCyan Field Value Type Description Color DarkGoldenrod Gets a system-defined color that has an ARGB value of #B8860B. Declaration public static readonly Color DarkGoldenrod Field Value Type Description Color DarkGray Gets a system-defined color that has an ARGB value of #A9A9A9. Declaration public static readonly Color DarkGray Field Value Type Description Color DarkGreen Gets a system-defined color that has an ARGB value of #006400. Declaration public static readonly Color DarkGreen Field Value Type Description Color DarkKhaki Gets a system-defined color that has an ARGB value of #BDB76B. Declaration public static readonly Color DarkKhaki Field Value Type Description Color DarkMagenta Gets a system-defined color that has an ARGB value of #8B008B. Declaration public static readonly Color DarkMagenta Field Value Type Description Color DarkOliveGreen Gets a system-defined color that has an ARGB value of #556B2F. Declaration public static readonly Color DarkOliveGreen Field Value Type Description Color DarkOrange Gets a system-defined color that has an ARGB value of #FF8C00. Declaration public static readonly Color DarkOrange Field Value Type Description Color DarkOrchid Gets a system-defined color that has an ARGB value of #9932CC. Declaration public static readonly Color DarkOrchid Field Value Type Description Color DarkRed Gets a system-defined color that has an ARGB value of #8B0000. Declaration public static readonly Color DarkRed Field Value Type Description Color DarkSalmon Gets a system-defined color that has an ARGB value of #E9967A. Declaration public static readonly Color DarkSalmon Field Value Type Description Color DarkSeaGreen Gets a system-defined color that has an ARGB value of #8FBC8B. Declaration public static readonly Color DarkSeaGreen Field Value Type Description Color DarkSlateBlue Gets a system-defined color that has an ARGB value of #483D8B. Declaration public static readonly Color DarkSlateBlue Field Value Type Description Color DarkSlateGray Gets a system-defined color that has an ARGB value of #2F4F4F. Declaration public static readonly Color DarkSlateGray Field Value Type Description Color DarkTurquoise Gets a system-defined color that has an ARGB value of #00CED1. Declaration public static readonly Color DarkTurquoise Field Value Type Description Color DarkViolet Gets a system-defined color that has an ARGB value of #9400D3. Declaration public static readonly Color DarkViolet Field Value Type Description Color DeepPink Gets a system-defined color that has an ARGB value of #FF1493. Declaration public static readonly Color DeepPink Field Value Type Description Color DeepSkyBlue Gets a system-defined color that has an ARGB value of #00BFFF. Declaration public static readonly Color DeepSkyBlue Field Value Type Description Color DimGray Gets a system-defined color that has an ARGB value of #696969. Declaration public static readonly Color DimGray Field Value Type Description Color DodgerBlue Gets a system-defined color that has an ARGB value of #1E90FF. Declaration public static readonly Color DodgerBlue Field Value Type Description Color Empty Represents a color that is null. Declaration public static readonly Color Empty Field Value Type Description Color Firebrick Gets a system-defined color that has an ARGB value of #B22222. Declaration public static readonly Color Firebrick Field Value Type Description Color FloralWhite Gets a system-defined color that has an ARGB value of #FFFAF0. Declaration public static readonly Color FloralWhite Field Value Type Description Color ForestGreen Gets a system-defined color that has an ARGB value of #228B22. Declaration public static readonly Color ForestGreen Field Value Type Description Color Fuchsia Gets a system-defined color that has an ARGB value of #FF00FF. Declaration public static readonly Color Fuchsia Field Value Type Description Color Gainsboro Gets a system-defined color that has an ARGB value of #DCDCDC. Declaration public static readonly Color Gainsboro Field Value Type Description Color GhostWhite Gets a system-defined color that has an ARGB value of #F8F8FF. Declaration public static readonly Color GhostWhite Field Value Type Description Color Gold Gets a system-defined color that has an ARGB value of #FFD700. Declaration public static readonly Color Gold Field Value Type Description Color Goldenrod Gets a system-defined color that has an ARGB value of #DAA520. Declaration public static readonly Color Goldenrod Field Value Type Description Color Gray Gets a system-defined color that has an ARGB value of #808080. Declaration public static readonly Color Gray Field Value Type Description Color Green Gets a system-defined color that has an ARGB value of #008000. Declaration public static readonly Color Green Field Value Type Description Color GreenYellow Gets a system-defined color that has an ARGB value of #ADFF2F. Declaration public static readonly Color GreenYellow Field Value Type Description Color Honeydew Gets a system-defined color that has an ARGB value of #F0FFF0. Declaration public static readonly Color Honeydew Field Value Type Description Color HotPink Gets a system-defined color that has an ARGB value of #FF69B4. Declaration public static readonly Color HotPink Field Value Type Description Color IndianRed Gets a system-defined color that has an ARGB value of #CD5C5C. Declaration public static readonly Color IndianRed Field Value Type Description Color Indigo Gets a system-defined color that has an ARGB value of #4B0082. Declaration public static readonly Color Indigo Field Value Type Description Color Ivory Gets a system-defined color that has an ARGB value of #FFFFF0. Declaration public static readonly Color Ivory Field Value Type Description Color Khaki Gets a system-defined color that has an ARGB value of #F0E68C. Declaration public static readonly Color Khaki Field Value Type Description Color Lavender Gets a system-defined color that has an ARGB value of #E6E6FA. Declaration public static readonly Color Lavender Field Value Type Description Color LavenderBlush Gets a system-defined color that has an ARGB value of #FFF0F5. Declaration public static readonly Color LavenderBlush Field Value Type Description Color LawnGreen Gets a system-defined color that has an ARGB value of #7CFC00. Declaration public static readonly Color LawnGreen Field Value Type Description Color LemonChiffon Gets a system-defined color that has an ARGB value of #FFFACD. Declaration public static readonly Color LemonChiffon Field Value Type Description Color LightBlue Gets a system-defined color that has an ARGB value of #ADD8E6. Declaration public static readonly Color LightBlue Field Value Type Description Color LightCoral Gets a system-defined color that has an ARGB value of #F08080. Declaration public static readonly Color LightCoral Field Value Type Description Color LightCyan Gets a system-defined color that has an ARGB value of #E0FFFF. Declaration public static readonly Color LightCyan Field Value Type Description Color LightGoldenrodYellow Gets a system-defined color that has an ARGB value of #FAFAD2. Declaration public static readonly Color LightGoldenrodYellow Field Value Type Description Color LightGray Gets a system-defined color that has an ARGB value of #D3D3D3. Declaration public static readonly Color LightGray Field Value Type Description Color LightGreen Gets a system-defined color that has an ARGB value of #90EE90. Declaration public static readonly Color LightGreen Field Value Type Description Color LightPink Gets a system-defined color that has an ARGB value of #FFB6C1. Declaration public static readonly Color LightPink Field Value Type Description Color LightSalmon Gets a system-defined color that has an ARGB value of #FFA07A. Declaration public static readonly Color LightSalmon Field Value Type Description Color LightSeaGreen Gets a system-defined color that has an ARGB value of #20B2AA. Declaration public static readonly Color LightSeaGreen Field Value Type Description Color LightSkyBlue Gets a system-defined color that has an ARGB value of #87CEFA. Declaration public static readonly Color LightSkyBlue Field Value Type Description Color LightSlateGray Gets a system-defined color that has an ARGB value of #778899. Declaration public static readonly Color LightSlateGray Field Value Type Description Color LightSteelBlue Gets a system-defined color that has an ARGB value of #B0C4DE. Declaration public static readonly Color LightSteelBlue Field Value Type Description Color LightYellow Gets a system-defined color that has an ARGB value of #FFFFE0. Declaration public static readonly Color LightYellow Field Value Type Description Color Lime Gets a system-defined color that has an ARGB value of #00FF00. Declaration public static readonly Color Lime Field Value Type Description Color LimeGreen Gets a system-defined color that has an ARGB value of #32CD32. Declaration public static readonly Color LimeGreen Field Value Type Description Color Linen Gets a system-defined color that has an ARGB value of #FAF0E6. Declaration public static readonly Color Linen Field Value Type Description Color Magenta Gets a system-defined color that has an ARGB value of #FF00FF. Declaration public static readonly Color Magenta Field Value Type Description Color Maroon Gets a system-defined color that has an ARGB value of #800000. Declaration public static readonly Color Maroon Field Value Type Description Color MediumAquamarine Gets a system-defined color that has an ARGB value of #66CDAA. Declaration public static readonly Color MediumAquamarine Field Value Type Description Color MediumBlue Gets a system-defined color that has an ARGB value of #0000CD. Declaration public static readonly Color MediumBlue Field Value Type Description Color MediumOrchid Gets a system-defined color that has an ARGB value of #BA55D3. Declaration public static readonly Color MediumOrchid Field Value Type Description Color MediumPurple Gets a system-defined color that has an ARGB value of #9370DB. Declaration public static readonly Color MediumPurple Field Value Type Description Color MediumSeaGreen Gets a system-defined color that has an ARGB value of #3CB371. Declaration public static readonly Color MediumSeaGreen Field Value Type Description Color MediumSlateBlue Gets a system-defined color that has an ARGB value of #7B68EE. Declaration public static readonly Color MediumSlateBlue Field Value Type Description Color MediumSpringGreen Gets a system-defined color that has an ARGB value of #00FA9A. Declaration public static readonly Color MediumSpringGreen Field Value Type Description Color MediumTurquoise Gets a system-defined color that has an ARGB value of #48D1CC. Declaration public static readonly Color MediumTurquoise Field Value Type Description Color MediumVioletRed Gets a system-defined color that has an ARGB value of #C71585. Declaration public static readonly Color MediumVioletRed Field Value Type Description Color MidnightBlue Gets a system-defined color that has an ARGB value of #191970. Declaration public static readonly Color MidnightBlue Field Value Type Description Color MintCream Gets a system-defined color that has an ARGB value of #F5FFFA. Declaration public static readonly Color MintCream Field Value Type Description Color MistyRose Gets a system-defined color that has an ARGB value of #FFE4E1. Declaration public static readonly Color MistyRose Field Value Type Description Color Moccasin Gets a system-defined color that has an ARGB value of #FFE4B5. Declaration public static readonly Color Moccasin Field Value Type Description Color NavajoWhite Gets a system-defined color that has an ARGB value of #FFDEAD. Declaration public static readonly Color NavajoWhite Field Value Type Description Color Navy Gets a system-defined color that has an ARGB value of #000080. Declaration public static readonly Color Navy Field Value Type Description Color OldLace Gets a system-defined color that has an ARGB value of #FDF5E6. Declaration public static readonly Color OldLace Field Value Type Description Color Olive Gets a system-defined color that has an ARGB value of #808000. Declaration public static readonly Color Olive Field Value Type Description Color OliveDrab Gets a system-defined color that has an ARGB value of #6B8E23. Declaration public static readonly Color OliveDrab Field Value Type Description Color Orange Gets a system-defined color that has an ARGB value of #FFA500. Declaration public static readonly Color Orange Field Value Type Description Color OrangeRed Gets a system-defined color that has an ARGB value of #FF4500. Declaration public static readonly Color OrangeRed Field Value Type Description Color Orchid Gets a system-defined color that has an ARGB value of #DA70D6. Declaration public static readonly Color Orchid Field Value Type Description Color PaleGoldenrod Gets a system-defined color that has an ARGB value of #EEE8AA. Declaration public static readonly Color PaleGoldenrod Field Value Type Description Color PaleGreen Gets a system-defined color that has an ARGB value of #98FB98. Declaration public static readonly Color PaleGreen Field Value Type Description Color PaleTurquoise Gets a system-defined color that has an ARGB value of #AFEEEE. Declaration public static readonly Color PaleTurquoise Field Value Type Description Color PaleVioletRed Gets a system-defined color that has an ARGB value of #DB7093. Declaration public static readonly Color PaleVioletRed Field Value Type Description Color PapayaWhip Gets a system-defined color that has an ARGB value of #FFEFD5. Declaration public static readonly Color PapayaWhip Field Value Type Description Color PeachPuff Gets a system-defined color that has an ARGB value of #FFDAB9. Declaration public static readonly Color PeachPuff Field Value Type Description Color Peru Gets a system-defined color that has an ARGB value of #CD853F. Declaration public static readonly Color Peru Field Value Type Description Color Pink Gets a system-defined color that has an ARGB value of #FFC0CB. Declaration public static readonly Color Pink Field Value Type Description Color Plum Gets a system-defined color that has an ARGB value of #DDA0DD. Declaration public static readonly Color Plum Field Value Type Description Color PowderBlue Gets a system-defined color that has an ARGB value of #B0E0E6. Declaration public static readonly Color PowderBlue Field Value Type Description Color Purple Gets a system-defined color that has an ARGB value of #800080. Declaration public static readonly Color Purple Field Value Type Description Color RebeccaPurple Gets a system-defined color that has an ARGB value of #663399. Declaration public static readonly Color RebeccaPurple Field Value Type Description Color Red Gets a system-defined color that has an ARGB value of #FF0000. Declaration public static readonly Color Red Field Value Type Description Color RosyBrown Gets a system-defined color that has an ARGB value of #BC8F8F. Declaration public static readonly Color RosyBrown Field Value Type Description Color RoyalBlue Gets a system-defined color that has an ARGB value of #4169E1. Declaration public static readonly Color RoyalBlue Field Value Type Description Color SaddleBrown Gets a system-defined color that has an ARGB value of #8B4513. Declaration public static readonly Color SaddleBrown Field Value Type Description Color Salmon Gets a system-defined color that has an ARGB value of #FA8072. Declaration public static readonly Color Salmon Field Value Type Description Color SandyBrown Gets a system-defined color that has an ARGB value of #F4A460. Declaration public static readonly Color SandyBrown Field Value Type Description Color SeaGreen Gets a system-defined color that has an ARGB value of #2E8B57. Declaration public static readonly Color SeaGreen Field Value Type Description Color SeaShell Gets a system-defined color that has an ARGB value of #FFF5EE. Declaration public static readonly Color SeaShell Field Value Type Description Color Sienna Gets a system-defined color that has an ARGB value of #A0522D. Declaration public static readonly Color Sienna Field Value Type Description Color Silver Gets a system-defined color that has an ARGB value of #C0C0C0. Declaration public static readonly Color Silver Field Value Type Description Color SkyBlue Gets a system-defined color that has an ARGB value of #87CEEB. Declaration public static readonly Color SkyBlue Field Value Type Description Color SlateBlue Gets a system-defined color that has an ARGB value of #6A5ACD. Declaration public static readonly Color SlateBlue Field Value Type Description Color SlateGray Gets a system-defined color that has an ARGB value of #708090. Declaration public static readonly Color SlateGray Field Value Type Description Color Snow Gets a system-defined color that has an ARGB value of #FFFAFA. Declaration public static readonly Color Snow Field Value Type Description Color SpringGreen Gets a system-defined color that has an ARGB value of #00FF7F. Declaration public static readonly Color SpringGreen Field Value Type Description Color SteelBlue Gets a system-defined color that has an ARGB value of #4682B4. Declaration public static readonly Color SteelBlue Field Value Type Description Color Tan Gets a system-defined color that has an ARGB value of #D2B48C. Declaration public static readonly Color Tan Field Value Type Description Color Teal Gets a system-defined color that has an ARGB value of #008080. Declaration public static readonly Color Teal Field Value Type Description Color Thistle Gets a system-defined color that has an ARGB value of #D2B48C. Declaration public static readonly Color Thistle Field Value Type Description Color Tomato Gets a system-defined color that has an ARGB value of #FF6347. Declaration public static readonly Color Tomato Field Value Type Description Color Transparent Gets a system-defined color that has an ARGB value of #00FFFFFF. Declaration public static readonly Color Transparent Field Value Type Description Color Turquoise Gets a system-defined color that has an ARGB value of #40E0D0. Declaration public static readonly Color Turquoise Field Value Type Description Color Violet Gets a system-defined color that has an ARGB value of #EE82EE. Declaration public static readonly Color Violet Field Value Type Description Color Wheat Gets a system-defined color that has an ARGB value of #F5DEB3. Declaration public static readonly Color Wheat Field Value Type Description Color White Gets a system-defined color that has an ARGB value of #FFFFFF. Declaration public static readonly Color White Field Value Type Description Color WhiteSmoke Gets a system-defined color that has an ARGB value of #F5F5F5. Declaration public static readonly Color WhiteSmoke Field Value Type Description Color Yellow Gets a system-defined color that has an ARGB value of #FFFF00. Declaration public static readonly Color Yellow Field Value Type Description Color YellowGreen Gets a system-defined color that has an ARGB value of #9ACD32. Declaration public static readonly Color YellowGreen Field Value Type Description Color Properties A Gets the alpha component value of this Color structure. Declaration public byte A { get; } Property Value Type Description System.Byte B Gets the blue component value of this Color structure. Declaration public byte B { get; } Property Value Type Description System.Byte G Gets the green component value of this Color structure. Declaration public byte G { get; } Property Value Type Description System.Byte R Gets the red component value of this Color structure. Declaration public byte R { get; } Property Value Type Description System.Byte Methods Equals(Object) Indicates whether the current object is equal to another object of the same type. Declaration public override bool Equals(object other) Parameters Type Name Description System.Object other An object to compare with this object. Returns Type Description System.Boolean true if the current object is equal to other; otherwise, false. FromArgb(Int32) Creates a Color structure from a 32-bit ARGB value. Declaration public static Color FromArgb(int argb) Parameters Type Name Description System.Int32 argb A value specifying the 32-bit ARGB value. Returns Type Description Color Color See Also FromArgb(Int32, Color) FromArgb(Int32, Int32, Int32) FromArgb(Int32, Int32, Int32, Int32) FromArgb(Int32, Color) Creates a Color structure from the specified Color structure, but with the new specified alpha value. Although this method allows a 32-bit value to be passed for the alpha value, the value is limited to 8 bits. Declaration public static Color FromArgb(int alpha, Color baseColor) Parameters Type Name Description System.Int32 alpha The alpha value for the new Color . Valid values are 0 through 255. Color baseColor The Color from which to create the new Color . Returns Type Description Color Color See Also FromArgb(Int32) FromArgb(Int32, Int32, Int32) FromArgb(Int32, Int32, Int32, Int32) FromArgb(Int32, Int32, Int32) Creates a Color structure from the specified 8-bit color values (red, green, and blue). The alpha value is implicitly 255 (fully opaque). Although this method allows a 32-bit value to be passed for each color component, the value of each component is limited to 8 bits. Declaration public static Color FromArgb(int red, int green, int blue) Parameters Type Name Description System.Int32 red The red component value for the new Color . Valid values are 0 through 255. System.Int32 green The green component value for the new Color . Valid values are 0 through 255. System.Int32 blue The blue component value for the new Color . Valid values are 0 through 255. Returns Type Description Color Color See Also FromArgb(Int32) FromArgb(Int32, Color) FromArgb(Int32, Int32, Int32, Int32) FromArgb(Int32, Int32, Int32, Int32) Creates a Color structure from the specified 8-bit color values (alpha, red, green, and blue). Although this method allows a 32-bit value to be passed for each color component, the value of each component is limited to 8 bits. Declaration public static Color FromArgb(int alpha, int red, int green, int blue) Parameters Type Name Description System.Int32 alpha The alpha value for the new Color . Valid values are 0 through 255. System.Int32 red The red component value for the new Color . Valid values are 0 through 255. System.Int32 green The green component value for the new Color . Valid values are 0 through 255. System.Int32 blue The blue component value for the new Color . Valid values are 0 through 255. Returns Type Description Color Color See Also FromArgb(Int32) FromArgb(Int32, Color) FromArgb(Int32, Int32, Int32) FromName(String) Creates a Color structure from the specified name of a predefined color. Declaration public static Color FromName(string name) Parameters Type Name Description System.String name Returns Type Description Color Color GetHashCode() Declaration public override int GetHashCode() Returns Type Description System.Int32 GetLuminance() Luminance is a value from 0 (black) to 100 (white) where 50 is the perceptual \"middle grey\". Luminance = 50 is the equivalent of Y = 18.4, or in other words a 18% grey card, representing the middle of a photographic exposure. Declaration public double GetLuminance() Returns Type Description System.Double Preceived Lightness ToArgb() Gets the 32-bit ARGB value of this Color structure. Further Documentation: Code Example Declaration public int ToArgb() Returns Type Description System.Int32 The 32-bit ARGB value of this Color . ToHtmlCssColorCode() Translates the specified Color structure to an HTML string color representation. Declaration public string ToHtmlCssColorCode() Returns Type Description System.String A string containing the hex representation of the color in the format #RRGGBB. ToString() Returns the color as a string in the format: #AARRGGBB. Declaration public override string ToString() Returns Type Description System.String Operators Equality(Color, Color) Tests whether two specified Color structures are equivalent. Declaration public static bool operator ==(Color left, Color right) Parameters Type Name Description Color left The Color that is to the left of the equality operator. Color right The Color that is to the right of the equality operator. Returns Type Description System.Boolean true if the two Color structures are equal; otherwise, false. Implicit(Color to Color) Implicitly casts to Microsoft.Maui.Graphics.Color objects from Color . When your .NET Class methods use Color as parameters or return types, you now automatically support Microsoft.Maui.Graphics.Color as well. Declaration public static implicit operator Color(Color color) Parameters Type Name Description Color color Color is explicitly cast to a Microsoft.Maui.Graphics.Color Returns Type Description Microsoft.Maui.Graphics.Color Implicit(Color to Color) Implicitly casts to SixLabors.ImageSharp.Color objects from Color . When your .NET Class methods use Color as parameters or return types, you now automatically support SixLabors.ImageSharp.Color as well. Declaration public static implicit operator Color(Color color) Parameters Type Name Description Color color Color is explicitly cast to a SixLabors.ImageSharp.Color Returns Type Description SixLabors.ImageSharp.Color Implicit(Color to Abgr32) Implicitly casts to SixLabors.ImageSharp.PixelFormats.Abgr32 objects from Color . When your .NET Class methods use Color as parameters or return types, you now automatically support SixLabors.ImageSharp.PixelFormats.Abgr32 as well. Declaration public static implicit operator Abgr32(Color color) Parameters Type Name Description Color color Color is explicitly cast to a SixLabors.ImageSharp.PixelFormats.Abgr32 Returns Type Description SixLabors.ImageSharp.PixelFormats.Abgr32 Implicit(Color to Argb32) Implicitly casts to SixLabors.ImageSharp.PixelFormats.Argb32 objects from Color . When your .NET Class methods use Color as parameters or return types, you now automatically support SixLabors.ImageSharp.PixelFormats.Argb32 as well. Declaration public static implicit operator Argb32(Color color) Parameters Type Name Description Color color Color is explicitly cast to a SixLabors.ImageSharp.PixelFormats.Argb32 Returns Type Description SixLabors.ImageSharp.PixelFormats.Argb32 Implicit(Color to Bgr24) Implicitly casts to SixLabors.ImageSharp.PixelFormats.Bgr24 objects from Color . When your .NET Class methods use Color as parameters or return types, you now automatically support SixLabors.ImageSharp.PixelFormats.Bgr24 as well. Declaration public static implicit operator Bgr24(Color color) Parameters Type Name Description Color color Color is explicitly cast to a SixLabors.ImageSharp.PixelFormats.Bgr24 Returns Type Description SixLabors.ImageSharp.PixelFormats.Bgr24 Implicit(Color to Bgra32) Implicitly casts to SixLabors.ImageSharp.PixelFormats.Bgra32 objects from Color . When your .NET Class methods use Color as parameters or return types, you now automatically support SixLabors.ImageSharp.PixelFormats.Bgra32 as well. Declaration public static implicit operator Bgra32(Color color) Parameters Type Name Description Color color Color is explicitly cast to a SixLabors.ImageSharp.PixelFormats.Bgra32 Returns Type Description SixLabors.ImageSharp.PixelFormats.Bgra32 Implicit(Color to Rgb24) Implicitly casts to SixLabors.ImageSharp.PixelFormats.Rgb24 objects from Color . When your .NET Class methods use Color as parameters or return types, you now automatically support SixLabors.ImageSharp.PixelFormats.Rgb24 as well. Declaration public static implicit operator Rgb24(Color color) Parameters Type Name Description Color color Color is explicitly cast to a SixLabors.ImageSharp.PixelFormats.Rgb24 Returns Type Description SixLabors.ImageSharp.PixelFormats.Rgb24 Implicit(Color to Rgb48) Implicitly casts to SixLabors.ImageSharp.PixelFormats.Rgb48 objects from Color . When your .NET Class methods use Color as parameters or return types, you now automatically support SixLabors.ImageSharp.PixelFormats.Rgb48 as well. Declaration public static implicit operator Rgb48(Color color) Parameters Type Name Description Color color Color is explicitly cast to a SixLabors.ImageSharp.PixelFormats.Rgb48 Returns Type Description SixLabors.ImageSharp.PixelFormats.Rgb48 Implicit(Color to Rgba32) Implicitly casts to SixLabors.ImageSharp.PixelFormats.Rgba32 objects from Color . When your .NET Class methods use Color as parameters or return types, you now automatically support SixLabors.ImageSharp.PixelFormats.Rgba32 as well. Declaration public static implicit operator Rgba32(Color color) Parameters Type Name Description Color color Color is explicitly cast to a SixLabors.ImageSharp.PixelFormats.Rgba32 Returns Type Description SixLabors.ImageSharp.PixelFormats.Rgba32 Implicit(Color to Rgba64) Implicitly casts to SixLabors.ImageSharp.PixelFormats.Rgba64 objects from Color . When your .NET Class methods use Color as parameters or return types, you now automatically support SixLabors.ImageSharp.PixelFormats.Rgba64 as well. Declaration public static implicit operator Rgba64(Color color) Parameters Type Name Description Color color Color is explicitly cast to a SixLabors.ImageSharp.PixelFormats.Rgba64 Returns Type Description SixLabors.ImageSharp.PixelFormats.Rgba64 Implicit(Color to SKColor) Implicitly casts to SkiaSharp.SKColor objects from Color . When your .NET Class methods use Color as parameters or return types, you now automatically support SkiaSharp.SKColor as well. Declaration public static implicit operator SKColor(Color color) Parameters Type Name Description Color color Color is explicitly cast to a SkiaSharp.SKColor Returns Type Description SkiaSharp.SKColor Implicit(Color to Color) Implicitly casts to System.Drawing.Color objects from Color . When your .NET Class methods use Color as parameters or return types, you now automatically support System.Drawing.Color as well. Declaration public static implicit operator Color(Color color) Parameters Type Name Description Color color Color is explicitly cast to a System.Drawing.Color Returns Type Description System.Drawing.Color Implicit(Color to Color) Implicitly casts Microsoft.Maui.Graphics.Color objects to Color . When your .NET Class methods use Color as parameters or return types, you now automatically support Microsoft.Maui.Graphics.Color as well. Declaration public static implicit operator Color(Color color) Parameters Type Name Description Microsoft.Maui.Graphics.Color color Microsoft.Maui.Graphics.Color will automatically be cast to Color Returns Type Description Color Implicit(Color to Color) Implicitly casts SixLabors.ImageSharp.Color objects to Color . When your .NET Class methods use Color as parameters or return types, you now automatically support SixLabors.ImageSharp.Color as well. Declaration public static implicit operator Color(Color color) Parameters Type Name Description SixLabors.ImageSharp.Color color SixLabors.ImageSharp.Color will automatically be cast to Color Returns Type Description Color Implicit(Abgr32 to Color) Implicitly casts SixLabors.ImageSharp.PixelFormats.Abgr32 objects to Color . When your .NET Class methods use Color as parameters or return types, you now automatically support SixLabors.ImageSharp.PixelFormats.Abgr32 as well. Declaration public static implicit operator Color(Abgr32 color) Parameters Type Name Description SixLabors.ImageSharp.PixelFormats.Abgr32 color SixLabors.ImageSharp.PixelFormats.Abgr32 will automatically be cast to Color Returns Type Description Color Implicit(Argb32 to Color) Implicitly casts SixLabors.ImageSharp.PixelFormats.Argb32 objects to Color . When your .NET Class methods use Color as parameters or return types, you now automatically support SixLabors.ImageSharp.PixelFormats.Argb32 as well. Declaration public static implicit operator Color(Argb32 color) Parameters Type Name Description SixLabors.ImageSharp.PixelFormats.Argb32 color SixLabors.ImageSharp.PixelFormats.Argb32 will automatically be cast to Color Returns Type Description Color Implicit(Bgr24 to Color) Implicitly casts SixLabors.ImageSharp.PixelFormats.Bgr24 objects to Color . When your .NET Class methods use Color as parameters or return types, you now automatically support SixLabors.ImageSharp.PixelFormats.Bgr24 as well. Declaration public static implicit operator Color(Bgr24 color) Parameters Type Name Description SixLabors.ImageSharp.PixelFormats.Bgr24 color SixLabors.ImageSharp.PixelFormats.Bgr24 will automatically be cast to Color Returns Type Description Color Implicit(Bgra32 to Color) Implicitly casts SixLabors.ImageSharp.PixelFormats.Bgra32 objects to Color . When your .NET Class methods use Color as parameters or return types, you now automatically support SixLabors.ImageSharp.PixelFormats.Bgra32 as well. Declaration public static implicit operator Color(Bgra32 color) Parameters Type Name Description SixLabors.ImageSharp.PixelFormats.Bgra32 color SixLabors.ImageSharp.PixelFormats.Bgra32 will automatically be cast to Color Returns Type Description Color Implicit(Rgb24 to Color) Implicitly casts SixLabors.ImageSharp.PixelFormats.Rgb24 objects to Color . When your .NET Class methods use Color as parameters or return types, you now automatically support SixLabors.ImageSharp.PixelFormats.Rgb24 as well. Declaration public static implicit operator Color(Rgb24 color) Parameters Type Name Description SixLabors.ImageSharp.PixelFormats.Rgb24 color SixLabors.ImageSharp.PixelFormats.Rgb24 will automatically be cast to Color Returns Type Description Color Implicit(Rgb48 to Color) Implicitly casts SixLabors.ImageSharp.PixelFormats.Rgb48 objects to Color . When your .NET Class methods use Color as parameters or return types, you now automatically support SixLabors.ImageSharp.PixelFormats.Rgb48 as well. Declaration public static implicit operator Color(Rgb48 color) Parameters Type Name Description SixLabors.ImageSharp.PixelFormats.Rgb48 color SixLabors.ImageSharp.PixelFormats.Rgb48 will automatically be cast to Color Returns Type Description Color Implicit(Rgba32 to Color) Implicitly casts SixLabors.ImageSharp.PixelFormats.Rgba32 objects to Color . When your .NET Class methods use Color as parameters or return types, you now automatically support SixLabors.ImageSharp.PixelFormats.Rgba32 as well. Declaration public static implicit operator Color(Rgba32 color) Parameters Type Name Description SixLabors.ImageSharp.PixelFormats.Rgba32 color SixLabors.ImageSharp.PixelFormats.Rgba32 will automatically be cast to Color Returns Type Description Color Implicit(Rgba64 to Color) Implicitly casts SixLabors.ImageSharp.PixelFormats.Rgba64 objects to Color . When your .NET Class methods use Color as parameters or return types, you now automatically support SixLabors.ImageSharp.PixelFormats.Rgba64 as well. Declaration public static implicit operator Color(Rgba64 color) Parameters Type Name Description SixLabors.ImageSharp.PixelFormats.Rgba64 color SixLabors.ImageSharp.PixelFormats.Rgba64 will automatically be cast to Color Returns Type Description Color Implicit(SKColor to Color) Implicitly casts SkiaSharp.SKColor objects to Color . When your .NET Class methods use Color as parameters or return types, you now automatically support SkiaSharp.SKColor as well. Declaration public static implicit operator Color(SKColor color) Parameters Type Name Description SkiaSharp.SKColor color SkiaSharp.SKColor will automatically be cast to Color Returns Type Description Color Implicit(Color to Color) Implicitly casts System.Drawing.Color objects to Color . When your .NET Class methods use Color as parameters or return types, you now automatically support System.Drawing.Color as well. Declaration public static implicit operator Color(Color color) Parameters Type Name Description System.Drawing.Color color System.Drawing.Color will automatically be cast to Color Returns Type Description Color Inequality(Color, Color) Tests whether two specified Color structures are different. Declaration public static bool operator !=(Color left, Color right) Parameters Type Name Description Color left The Color that is to the left of the inequality operator. Color right The Color that is to the right of the inequality operator. Returns Type Description System.Boolean true if the two Color structures are different; otherwise, false."
  },
  "api/IronSoftware.Drawing.CropRectangle.html": {
    "href": "api/IronSoftware.Drawing.CropRectangle.html",
    "title": "Class CropRectangle | C# IronDrawing API | IronDrawing",
    "keywords": "Class CropRectangle A universally compatible Rectangle for .NET 7, .NET 6, .NET 5, and .NET Core. As well as compatiblity with Windows, NanoServer, IIS, macOS, Mobile, Xamarin, iOS, Android, Google Compute, Azure, AWS, and Linux. Works nicely with popular Image Rectangle such as System.Drawing.Rectangle, SkiaSharp.SKRect, SixLabors.ImageSharp.Rectangle, Microsoft.Maui.Graphics.Rect. Implicit casting means that using this class to input and output Rectangle from public API's gives full compatibility to all Rectangle type fully supported by Microsoft. Inheritance System.Object CropRectangle Namespace : IronSoftware.Drawing Assembly : IronSoftware.Drawing.Common.dll Syntax public class CropRectangle : Object Constructors CropRectangle() Construct a new CropRectangle. Declaration public CropRectangle() See Also CropRectangle CropRectangle(Int32, Int32, Int32, Int32, MeasurementUnits) Construct a new CropRectangle. Declaration public CropRectangle(int x, int y, int width, int height, MeasurementUnits units) Parameters Type Name Description System.Int32 x The x-coordinate of the upper-left corner of this Rectangle System.Int32 y The y-coordinate of the upper-left corner of this Rectangle System.Int32 width The width of this Rectangle System.Int32 height The height of this Rectangle MeasurementUnits units The measurement unit of this Rectangle See Also CropRectangle Properties Bottom Gets the y-coordinate of the bottom edge of this CropRectangle . Declaration public int Bottom { get; } Property Value Type Description System.Int32 Height The height of this Rectangle. The default is 0. Declaration public int Height { get; set; } Property Value Type Description System.Int32 Left Gets the x-coordinate of the left edge of this CropRectangle . Declaration public int Left { get; } Property Value Type Description System.Int32 Right Gets the x-coordinate of the right edge of this CropRectangle . Declaration public int Right { get; } Property Value Type Description System.Int32 Top Gets the y-coordinate of the top edge of this CropRectangle . Declaration public int Top { get; } Property Value Type Description System.Int32 Units The measurement unit of this Rectangle. The default is Pixels Declaration public MeasurementUnits Units { get; set; } Property Value Type Description MeasurementUnits Width The width of this Rectangle. The default is 0. Declaration public int Width { get; set; } Property Value Type Description System.Int32 X The x-coordinate of the upper-left corner of this Rectangle. The default is 0. Declaration public int X { get; set; } Property Value Type Description System.Int32 Y The y-coordinate of the upper-left corner of this Rectangle. The default is 0. Declaration public int Y { get; set; } Property Value Type Description System.Int32 Methods Contains(Int32, Int32) Determines if the specified point is contained within the rectangular region defined by this CropRectangle . Declaration public bool Contains(int x, int y) Parameters Type Name Description System.Int32 x The x-coordinate of the given point. System.Int32 y The y-coordinate of the given point. Returns Type Description System.Boolean ConvertTo(MeasurementUnits, Int32) Convert this crop rectangle to the specified units of measurement using the specified DPI Further Documentation: Code Example Declaration public CropRectangle ConvertTo(MeasurementUnits units, int dpi = 96) Parameters Type Name Description MeasurementUnits units Unit of measurement System.Int32 dpi DPI (Dots per inch) for conversion Returns Type Description CropRectangle A new crop rectangle which uses the desired units of measurement Exceptions Type Condition System.NotImplementedException Conversion not implemented Operators Implicit(CropRectangle to Rect) Implicitly casts to Microsoft.Maui.Graphics.Rect objects from CropRectangle . When your .NET Class methods use CropRectangle as parameters and return types, you now automatically support Microsoft.Maui.Graphics.Rect as well. Declaration public static implicit operator Rect(CropRectangle cropRectangle) Parameters Type Name Description CropRectangle cropRectangle CropRectangle is explicitly cast to a Microsoft.Maui.Graphics.Rect. Returns Type Description Microsoft.Maui.Graphics.Rect Implicit(CropRectangle to RectF) Implicitly casts to Microsoft.Maui.Graphics.RectF objects from CropRectangle . When your .NET Class methods use CropRectangle as parameters and return types, you now automatically support Microsoft.Maui.Graphics.RectF as well. Declaration public static implicit operator RectF(CropRectangle cropRectangle) Parameters Type Name Description CropRectangle cropRectangle CropRectangle is explicitly cast to a Microsoft.Maui.Graphics.RectF. Returns Type Description Microsoft.Maui.Graphics.RectF Implicit(CropRectangle to Rectangle) Implicitly casts to SixLabors.ImageSharp.Rectangle objects from CropRectangle . When your .NET Class methods use CropRectangle as parameters and return types, you now automatically support SixLabors.ImageSharp.Rectangle as well. Declaration public static implicit operator Rectangle(CropRectangle cropRectangle) Parameters Type Name Description CropRectangle cropRectangle CropRectangle is explicitly cast to a SixLabors.ImageSharp.Rectangle. Returns Type Description SixLabors.ImageSharp.Rectangle Implicit(CropRectangle to RectangleF) Implicitly casts to SixLabors.ImageSharp.RectangleF objects from CropRectangle . When your .NET Class methods use CropRectangle as parameters and return types, you now automatically support SixLabors.ImageSharp.RectangleF as well. Declaration public static implicit operator RectangleF(CropRectangle cropRectangle) Parameters Type Name Description CropRectangle cropRectangle CropRectangle is explicitly cast to a SixLabors.ImageSharp.RectangleF. Returns Type Description SixLabors.ImageSharp.RectangleF Implicit(CropRectangle to SKRect) Implicitly casts to SkiaSharp.SKRect objects from CropRectangle . When your .NET Class methods use CropRectangle as parameters and return types, you now automatically support SkiaSharp.SKRect as well. Declaration public static implicit operator SKRect(CropRectangle cropRectangle) Parameters Type Name Description CropRectangle cropRectangle CropRectangle is explicitly cast to a SkiaSharp.SKRect. Returns Type Description SkiaSharp.SKRect Implicit(CropRectangle to SKRectI) Implicitly casts to SkiaSharp.SKRectI objects from CropRectangle . When your .NET Class methods use CropRectangle as parameters and return types, you now automatically support SkiaSharp.SKRectI as well. Declaration public static implicit operator SKRectI(CropRectangle cropRectangle) Parameters Type Name Description CropRectangle cropRectangle CropRectangle is explicitly cast to a SkiaSharp.SKRectI. Returns Type Description SkiaSharp.SKRectI Implicit(CropRectangle to Rectangle) Implicitly casts to System.Drawing.Rectangle objects from CropRectangle . When your .NET Class methods use CropRectangle as parameters and return types, you now automatically support Rectangle as well. Declaration public static implicit operator Rectangle(CropRectangle cropRectangle) Parameters Type Name Description CropRectangle cropRectangle CropRectangle is explicitly cast to a System.Drawing.Rectangle. Returns Type Description System.Drawing.Rectangle Implicit(Rect to CropRectangle) Implicitly casts Microsoft.Maui.Graphics.Rect objects to CropRectangle . When your .NET Class methods use CropRectangle as parameters and return types, you now automatically support Microsoft.Maui.Graphics.Rect as well. Declaration public static implicit operator CropRectangle(Rect rectangle) Parameters Type Name Description Microsoft.Maui.Graphics.Rect rectangle Microsoft.Maui.Graphics.Rect will automatically be cast to CropRectangle . Returns Type Description CropRectangle Implicit(RectF to CropRectangle) Implicitly casts Microsoft.Maui.Graphics.RectF objects to CropRectangle . When your .NET Class methods use CropRectangle as parameters and return types, you now automatically support Microsoft.Maui.Graphics.RectF as well. Declaration public static implicit operator CropRectangle(RectF rectangle) Parameters Type Name Description Microsoft.Maui.Graphics.RectF rectangle Microsoft.Maui.Graphics.RectF will automatically be cast to CropRectangle . Returns Type Description CropRectangle Implicit(Rectangle to CropRectangle) Implicitly casts SixLabors.ImageSharp.Rectangle objects to CropRectangle . When your .NET Class methods use CropRectangle as parameters and return types, you now automatically support SixLabors.ImageSharp.Rectangle as well. Declaration public static implicit operator CropRectangle(Rectangle rectangle) Parameters Type Name Description SixLabors.ImageSharp.Rectangle rectangle SixLabors.ImageSharp.Rectangle will automatically be cast to CropRectangle . Returns Type Description CropRectangle Implicit(RectangleF to CropRectangle) Implicitly casts SixLabors.ImageSharp.RectangleF objects to CropRectangle . When your .NET Class methods use CropRectangle as parameters and return types, you now automatically support SixLabors.ImageSharp.RectangleF as well. Declaration public static implicit operator CropRectangle(RectangleF rectangle) Parameters Type Name Description SixLabors.ImageSharp.RectangleF rectangle SixLabors.ImageSharp.RectangleF will automatically be cast to CropRectangle . Returns Type Description CropRectangle Implicit(SKRect to CropRectangle) Implicitly casts SkiaSharp.SKRect objects to CropRectangle . When your .NET Class methods use CropRectangle as parameters and return types, you now automatically support SkiaSharp.SKRect as well. Declaration public static implicit operator CropRectangle(SKRect sKRect) Parameters Type Name Description SkiaSharp.SKRect sKRect SkiaSharp.SKRect will automatically be cast to CropRectangle . Returns Type Description CropRectangle Implicit(SKRectI to CropRectangle) Implicitly casts SkiaSharp.SKRectI objects to CropRectangle . When your .NET Class methods use CropRectangle as parameters and return types, you now automatically support SkiaSharp.SKRectI as well. Declaration public static implicit operator CropRectangle(SKRectI sKRectI) Parameters Type Name Description SkiaSharp.SKRectI sKRectI SkiaSharp.SKRectI will automatically be cast to CropRectangle . Returns Type Description CropRectangle Implicit(Rectangle to CropRectangle) Implicitly casts System.Drawing.Rectangle objects to CropRectangle . When your .NET Class methods use CropRectangle as parameters and return types, you now automatically support Rectangle as well. Declaration public static implicit operator CropRectangle(Rectangle rectangle) Parameters Type Name Description System.Drawing.Rectangle rectangle System.Drawing.Rectangle will automatically be cast to CropRectangle . Returns Type Description CropRectangle"
  },
  "api/IronSoftware.Drawing.Font.html": {
    "href": "api/IronSoftware.Drawing.Font.html",
    "title": "Class Font | C# IronDrawing API | IronDrawing",
    "keywords": "Class Font Defines a particular format for text, including font face, size, and style attributes. Inheritance System.Object Font Namespace : IronSoftware.Drawing Assembly : IronSoftware.Drawing.Common.dll Syntax public class Font : Object Constructors Font(String) Initializes a new Font that uses the specified existing FamilyName. Further Documentation: Code Example Declaration public Font(string familyName) Parameters Type Name Description System.String familyName The FontFamily of the new Font. Font(String, FontStyle) Initializes a new Font that uses the specified existing FamilyName and FontStyle enumeration. Further Documentation: Code Example Declaration public Font(string familyName, FontStyle style) Parameters Type Name Description System.String familyName The FontFamily of the new Font. FontStyle style The FontStyle to apply to the new Font. Multiple values of the FontStyle enumeration can be combined with the OR operator. Font(String, FontStyle, Single) Initializes a new Font that uses the specified existing FamilyName, FontStyle enumeration, FontWeight, Bold, Italic and Size. Further Documentation: Code Example Declaration public Font(string familyName, FontStyle style, float size) Parameters Type Name Description System.String familyName The FontFamily of the new Font. FontStyle style The FontStyle to apply to the new Font. Multiple values of the FontStyle enumeration can be combined with the OR operator. System.Single size The em-size of the new font in the units specified by the unit parameter. Font(String, Single) Initializes a new Font that uses the specified existing FamilyName, FontWeight, Bold, Italic and Size. Further Documentation: Code Example Declaration public Font(string familyName, float size) Parameters Type Name Description System.String familyName The FontFamily of the new Font. System.Single size The em-size of the new font in the units specified by the unit parameter. Properties Bold Gets a value that indicates whether this Font is bold. Declaration public bool Bold { get; } Property Value Type Description System.Boolean FamilyName Gets the family name for the typeface. Declaration public string FamilyName { get; } Property Value Type Description System.String Italic Gets a value that indicates whether this font has the italic style applied. Declaration public bool Italic { get; } Property Value Type Description System.Boolean Size Gets the \"em-size of this Font measured in the units specified by the Unit property. Declaration public float Size { get; } Property Value Type Description System.Single Strikeout Gets a value that indicates whether this Font specifies a horizontal line through the font. Declaration public bool Strikeout { get; } Property Value Type Description System.Boolean Style Gets the font style for the typeface. Declaration public FontStyle Style { get; } Property Value Type Description FontStyle Underline Gets a value that indicates whether this Font is underlined. Declaration public bool Underline { get; } Property Value Type Description System.Boolean Operators Implicit(Font to Font) Implicitly casts to Microsoft.Maui.Graphics.Font objects from Font . When your .NET Class methods use Font as parameters or return types, you now automatically support Font as well. Declaration public static implicit operator Font(Font font) Parameters Type Name Description Font font Font is explicitly cast to a Microsoft.Maui.Graphics.Font Returns Type Description Microsoft.Maui.Graphics.Font Implicit(Font to Font) Implicitly casts to SixLabors.Fonts.Font objects from Font . When your .NET Class methods use Font as parameters or return types, you now automatically support Font as well. Declaration public static implicit operator Font(Font font) Parameters Type Name Description Font font Font is explicitly cast to a SixLabors.Fonts.Font Returns Type Description SixLabors.Fonts.Font Implicit(Font to SKFont) Implicitly casts to System.Drawing.Font objects from Font . When your .NET Class methods use Font as parameters or return types, you now automatically support Font as well. Declaration public static implicit operator SKFont(Font font) Parameters Type Name Description Font font Font is explicitly cast to a SkiaSharp.SKFont Returns Type Description SkiaSharp.SKFont Implicit(Font to Font) Implicitly casts to System.Drawing.Font objects from Font . When your .NET Class methods use Font as parameters or return types, you now automatically support Font as well. Declaration public static implicit operator Font(Font font) Parameters Type Name Description Font font Font is explicitly cast to a System.Drawing.Font Returns Type Description System.Drawing.Font Implicit(Font to Font) Implicitly casts Microsoft.Maui.Graphics.Font objects to Font . When your .NET Class methods use Font as parameters or return types, you now automatically support Font as well. Declaration public static implicit operator Font(Font font) Parameters Type Name Description Microsoft.Maui.Graphics.Font font Microsoft.Maui.Graphics.Font will automatically be cast to Font Returns Type Description Font Implicit(Font to Font) Implicitly casts SixLabors.Fonts.Font objects to Font . When your .NET Class methods use Font as parameters or return types, you now automatically support Font as well. Declaration public static implicit operator Font(Font font) Parameters Type Name Description SixLabors.Fonts.Font font SixLabors.Fonts.Font will automatically be cast to Font Returns Type Description Font Implicit(SKFont to Font) Implicitly casts SkiaSharp.SKFont objects to Font . When your .NET Class methods use Font as parameters or return types, you now automatically support Font as well. Declaration public static implicit operator Font(SKFont font) Parameters Type Name Description SkiaSharp.SKFont font SkiaSharp.SKFont will automatically be cast to Font Returns Type Description Font Implicit(Font to Font) Implicitly casts System.Drawing.Font objects to Font . When your .NET Class methods use Font as parameters or return types, you now automatically support Font as well. Declaration public static implicit operator Font(Font font) Parameters Type Name Description System.Drawing.Font font System.Drawing.Font will automatically be cast to Font Returns Type Description Font"
  },
  "api/IronSoftware.Drawing.FontStyle.html": {
    "href": "api/IronSoftware.Drawing.FontStyle.html",
    "title": "Class FontStyle | C# IronDrawing API | IronDrawing",
    "keywords": "Class FontStyle Specifies font style information applied to text. Inheritance System.Object FontStyle Namespace : IronSoftware.Drawing Assembly : IronSoftware.Drawing.Common.dll Syntax public sealed class FontStyle : Enum Fields Bold Bold text. Declaration public const FontStyle Bold Field Value Type Description FontStyle Italic Italic text. Declaration public const FontStyle Italic Field Value Type Description FontStyle Regular Normal text. Declaration public const FontStyle Regular Field Value Type Description FontStyle Strikeout Text with a line through the middle. Declaration public const FontStyle Strikeout Field Value Type Description FontStyle Underline Underlined text. Declaration public const FontStyle Underline Field Value Type Description FontStyle value__ Declaration public int value__ Field Value Type Description System.Int32"
  },
  "api/IronSoftware.Drawing.html": {
    "href": "api/IronSoftware.Drawing.html",
    "title": "Namespace IronSoftware.Drawing | C# IronDrawing API | IronDrawing",
    "keywords": "Namespace IronSoftware.Drawing Classes AnyBitmap A universally compatible Bitmap format for .NET 7, .NET 6, .NET 5, and .NET Core. As well as compatibility with Windows, NanoServer, IIS, macOS, Mobile, Xamarin, iOS, Android, Google Cloud, Azure, AWS, and Linux. Works nicely with popular Image and Bitmap formats such as System.Drawing.Bitmap, SkiaSharp, SixLabors.ImageSharp, Microsoft.Maui.Graphics. Implicit casting means that using this class to input and output Bitmap and image types from public API's gives full compatibility to all image type fully supported by Microsoft. Unlike System.Drawing.Bitmap this bitmap object is self-memory-managing and does not need to be explicitly 'used' or 'disposed'. AnyBitmap.FlipMode Provides enumeration over how a image should be flipped. AnyBitmap.ImageFormat Popular image formats which AnyBitmap can read and export. AnyBitmap.RotateFlipType Specifies how much an image is rotated and the axis used to flip the image. This follows the legacy System.Drawing.RotateFlipType notation. AnyBitmap.RotateMode Provides enumeration over how the image should be rotated. Color A universally compatible Color for .NET 7, .NET 6, .NET 5, and .NET Core. As well as compatiblity with Windows, NanoServer, IIS, macOS, Mobile, Xamarin, iOS, Android, Google Compute, Azure, AWS, and Linux. Works nicely with popular Image Color such as System.Drawing.Color , SkiaSharp.SKColor , SixLabors.ImageSharp.Color , Microsoft.Maui.Graphics.Color . Implicit casting means that using this class to input and output Color from public APIs gives full compatibility to all Color-types fully supported by Microsoft. CropRectangle A universally compatible Rectangle for .NET 7, .NET 6, .NET 5, and .NET Core. As well as compatiblity with Windows, NanoServer, IIS, macOS, Mobile, Xamarin, iOS, Android, Google Compute, Azure, AWS, and Linux. Works nicely with popular Image Rectangle such as System.Drawing.Rectangle, SkiaSharp.SKRect, SixLabors.ImageSharp.Rectangle, Microsoft.Maui.Graphics.Rect. Implicit casting means that using this class to input and output Rectangle from public API's gives full compatibility to all Rectangle type fully supported by Microsoft. Font Defines a particular format for text, including font face, size, and style attributes. FontStyle Specifies font style information applied to text. KnownColor MeasurementUnits A defined unit of measurement"
  },
  "api/IronSoftware.Drawing.KnownColor.html": {
    "href": "api/IronSoftware.Drawing.KnownColor.html",
    "title": "Class KnownColor | C# IronDrawing API | IronDrawing",
    "keywords": "Class KnownColor Inheritance System.Object KnownColor Namespace : IronSoftware.Drawing Assembly : IronSoftware.Drawing.Common.dll Syntax public sealed class KnownColor : Enum Fields ActiveBorder Declaration public const KnownColor ActiveBorder Field Value Type Description KnownColor ActiveCaption Declaration public const KnownColor ActiveCaption Field Value Type Description KnownColor ActiveCaptionText Declaration public const KnownColor ActiveCaptionText Field Value Type Description KnownColor AliceBlue Declaration public const KnownColor AliceBlue Field Value Type Description KnownColor AntiqueWhite Declaration public const KnownColor AntiqueWhite Field Value Type Description KnownColor AppWorkspace Declaration public const KnownColor AppWorkspace Field Value Type Description KnownColor Aqua Declaration public const KnownColor Aqua Field Value Type Description KnownColor Aquamarine Declaration public const KnownColor Aquamarine Field Value Type Description KnownColor Azure Declaration public const KnownColor Azure Field Value Type Description KnownColor Beige Declaration public const KnownColor Beige Field Value Type Description KnownColor Bisque Declaration public const KnownColor Bisque Field Value Type Description KnownColor Black Declaration public const KnownColor Black Field Value Type Description KnownColor BlanchedAlmond Declaration public const KnownColor BlanchedAlmond Field Value Type Description KnownColor Blue Declaration public const KnownColor Blue Field Value Type Description KnownColor BlueViolet Declaration public const KnownColor BlueViolet Field Value Type Description KnownColor Brown Declaration public const KnownColor Brown Field Value Type Description KnownColor BurlyWood Declaration public const KnownColor BurlyWood Field Value Type Description KnownColor ButtonFace Declaration public const KnownColor ButtonFace Field Value Type Description KnownColor ButtonHighlight Declaration public const KnownColor ButtonHighlight Field Value Type Description KnownColor ButtonShadow Declaration public const KnownColor ButtonShadow Field Value Type Description KnownColor CadetBlue Declaration public const KnownColor CadetBlue Field Value Type Description KnownColor Chartreuse Declaration public const KnownColor Chartreuse Field Value Type Description KnownColor Chocolate Declaration public const KnownColor Chocolate Field Value Type Description KnownColor Control Declaration public const KnownColor Control Field Value Type Description KnownColor ControlDark Declaration public const KnownColor ControlDark Field Value Type Description KnownColor ControlDarkDark Declaration public const KnownColor ControlDarkDark Field Value Type Description KnownColor ControlLight Declaration public const KnownColor ControlLight Field Value Type Description KnownColor ControlLightLight Declaration public const KnownColor ControlLightLight Field Value Type Description KnownColor ControlText Declaration public const KnownColor ControlText Field Value Type Description KnownColor Coral Declaration public const KnownColor Coral Field Value Type Description KnownColor CornflowerBlue Declaration public const KnownColor CornflowerBlue Field Value Type Description KnownColor Cornsilk Declaration public const KnownColor Cornsilk Field Value Type Description KnownColor Crimson Declaration public const KnownColor Crimson Field Value Type Description KnownColor Cyan Declaration public const KnownColor Cyan Field Value Type Description KnownColor DarkBlue Declaration public const KnownColor DarkBlue Field Value Type Description KnownColor DarkCyan Declaration public const KnownColor DarkCyan Field Value Type Description KnownColor DarkGoldenrod Declaration public const KnownColor DarkGoldenrod Field Value Type Description KnownColor DarkGray Declaration public const KnownColor DarkGray Field Value Type Description KnownColor DarkGreen Declaration public const KnownColor DarkGreen Field Value Type Description KnownColor DarkKhaki Declaration public const KnownColor DarkKhaki Field Value Type Description KnownColor DarkMagenta Declaration public const KnownColor DarkMagenta Field Value Type Description KnownColor DarkOliveGreen Declaration public const KnownColor DarkOliveGreen Field Value Type Description KnownColor DarkOrange Declaration public const KnownColor DarkOrange Field Value Type Description KnownColor DarkOrchid Declaration public const KnownColor DarkOrchid Field Value Type Description KnownColor DarkRed Declaration public const KnownColor DarkRed Field Value Type Description KnownColor DarkSalmon Declaration public const KnownColor DarkSalmon Field Value Type Description KnownColor DarkSeaGreen Declaration public const KnownColor DarkSeaGreen Field Value Type Description KnownColor DarkSlateBlue Declaration public const KnownColor DarkSlateBlue Field Value Type Description KnownColor DarkSlateGray Declaration public const KnownColor DarkSlateGray Field Value Type Description KnownColor DarkTurquoise Declaration public const KnownColor DarkTurquoise Field Value Type Description KnownColor DarkViolet Declaration public const KnownColor DarkViolet Field Value Type Description KnownColor DeepPink Declaration public const KnownColor DeepPink Field Value Type Description KnownColor DeepSkyBlue Declaration public const KnownColor DeepSkyBlue Field Value Type Description KnownColor Desktop Declaration public const KnownColor Desktop Field Value Type Description KnownColor DimGray Declaration public const KnownColor DimGray Field Value Type Description KnownColor DodgerBlue Declaration public const KnownColor DodgerBlue Field Value Type Description KnownColor Firebrick Declaration public const KnownColor Firebrick Field Value Type Description KnownColor FloralWhite Declaration public const KnownColor FloralWhite Field Value Type Description KnownColor ForestGreen Declaration public const KnownColor ForestGreen Field Value Type Description KnownColor Fuchsia Declaration public const KnownColor Fuchsia Field Value Type Description KnownColor Gainsboro Declaration public const KnownColor Gainsboro Field Value Type Description KnownColor GhostWhite Declaration public const KnownColor GhostWhite Field Value Type Description KnownColor Gold Declaration public const KnownColor Gold Field Value Type Description KnownColor Goldenrod Declaration public const KnownColor Goldenrod Field Value Type Description KnownColor GradientActiveCaption Declaration public const KnownColor GradientActiveCaption Field Value Type Description KnownColor GradientInactiveCaption Declaration public const KnownColor GradientInactiveCaption Field Value Type Description KnownColor Gray Declaration public const KnownColor Gray Field Value Type Description KnownColor GrayText Declaration public const KnownColor GrayText Field Value Type Description KnownColor Green Declaration public const KnownColor Green Field Value Type Description KnownColor GreenYellow Declaration public const KnownColor GreenYellow Field Value Type Description KnownColor Highlight Declaration public const KnownColor Highlight Field Value Type Description KnownColor HighlightText Declaration public const KnownColor HighlightText Field Value Type Description KnownColor Honeydew Declaration public const KnownColor Honeydew Field Value Type Description KnownColor HotPink Declaration public const KnownColor HotPink Field Value Type Description KnownColor HotTrack Declaration public const KnownColor HotTrack Field Value Type Description KnownColor InactiveBorder Declaration public const KnownColor InactiveBorder Field Value Type Description KnownColor InactiveCaption Declaration public const KnownColor InactiveCaption Field Value Type Description KnownColor InactiveCaptionText Declaration public const KnownColor InactiveCaptionText Field Value Type Description KnownColor IndianRed Declaration public const KnownColor IndianRed Field Value Type Description KnownColor Indigo Declaration public const KnownColor Indigo Field Value Type Description KnownColor Info Declaration public const KnownColor Info Field Value Type Description KnownColor InfoText Declaration public const KnownColor InfoText Field Value Type Description KnownColor Ivory Declaration public const KnownColor Ivory Field Value Type Description KnownColor Khaki Declaration public const KnownColor Khaki Field Value Type Description KnownColor Lavender Declaration public const KnownColor Lavender Field Value Type Description KnownColor LavenderBlush Declaration public const KnownColor LavenderBlush Field Value Type Description KnownColor LawnGreen Declaration public const KnownColor LawnGreen Field Value Type Description KnownColor LemonChiffon Declaration public const KnownColor LemonChiffon Field Value Type Description KnownColor LightBlue Declaration public const KnownColor LightBlue Field Value Type Description KnownColor LightCoral Declaration public const KnownColor LightCoral Field Value Type Description KnownColor LightCyan Declaration public const KnownColor LightCyan Field Value Type Description KnownColor LightGoldenrodYellow Declaration public const KnownColor LightGoldenrodYellow Field Value Type Description KnownColor LightGray Declaration public const KnownColor LightGray Field Value Type Description KnownColor LightGreen Declaration public const KnownColor LightGreen Field Value Type Description KnownColor LightPink Declaration public const KnownColor LightPink Field Value Type Description KnownColor LightSalmon Declaration public const KnownColor LightSalmon Field Value Type Description KnownColor LightSeaGreen Declaration public const KnownColor LightSeaGreen Field Value Type Description KnownColor LightSkyBlue Declaration public const KnownColor LightSkyBlue Field Value Type Description KnownColor LightSlateGray Declaration public const KnownColor LightSlateGray Field Value Type Description KnownColor LightSteelBlue Declaration public const KnownColor LightSteelBlue Field Value Type Description KnownColor LightYellow Declaration public const KnownColor LightYellow Field Value Type Description KnownColor Lime Declaration public const KnownColor Lime Field Value Type Description KnownColor LimeGreen Declaration public const KnownColor LimeGreen Field Value Type Description KnownColor Linen Declaration public const KnownColor Linen Field Value Type Description KnownColor Magenta Declaration public const KnownColor Magenta Field Value Type Description KnownColor Maroon Declaration public const KnownColor Maroon Field Value Type Description KnownColor MediumAquamarine Declaration public const KnownColor MediumAquamarine Field Value Type Description KnownColor MediumBlue Declaration public const KnownColor MediumBlue Field Value Type Description KnownColor MediumOrchid Declaration public const KnownColor MediumOrchid Field Value Type Description KnownColor MediumPurple Declaration public const KnownColor MediumPurple Field Value Type Description KnownColor MediumSeaGreen Declaration public const KnownColor MediumSeaGreen Field Value Type Description KnownColor MediumSlateBlue Declaration public const KnownColor MediumSlateBlue Field Value Type Description KnownColor MediumSpringGreen Declaration public const KnownColor MediumSpringGreen Field Value Type Description KnownColor MediumTurquoise Declaration public const KnownColor MediumTurquoise Field Value Type Description KnownColor MediumVioletRed Declaration public const KnownColor MediumVioletRed Field Value Type Description KnownColor Menu Declaration public const KnownColor Menu Field Value Type Description KnownColor MenuBar Declaration public const KnownColor MenuBar Field Value Type Description KnownColor MenuHighlight Declaration public const KnownColor MenuHighlight Field Value Type Description KnownColor MenuText Declaration public const KnownColor MenuText Field Value Type Description KnownColor MidnightBlue Declaration public const KnownColor MidnightBlue Field Value Type Description KnownColor MintCream Declaration public const KnownColor MintCream Field Value Type Description KnownColor MistyRose Declaration public const KnownColor MistyRose Field Value Type Description KnownColor Moccasin Declaration public const KnownColor Moccasin Field Value Type Description KnownColor NavajoWhite Declaration public const KnownColor NavajoWhite Field Value Type Description KnownColor Navy Declaration public const KnownColor Navy Field Value Type Description KnownColor OldLace Declaration public const KnownColor OldLace Field Value Type Description KnownColor Olive Declaration public const KnownColor Olive Field Value Type Description KnownColor OliveDrab Declaration public const KnownColor OliveDrab Field Value Type Description KnownColor Orange Declaration public const KnownColor Orange Field Value Type Description KnownColor OrangeRed Declaration public const KnownColor OrangeRed Field Value Type Description KnownColor Orchid Declaration public const KnownColor Orchid Field Value Type Description KnownColor PaleGoldenrod Declaration public const KnownColor PaleGoldenrod Field Value Type Description KnownColor PaleGreen Declaration public const KnownColor PaleGreen Field Value Type Description KnownColor PaleTurquoise Declaration public const KnownColor PaleTurquoise Field Value Type Description KnownColor PaleVioletRed Declaration public const KnownColor PaleVioletRed Field Value Type Description KnownColor PapayaWhip Declaration public const KnownColor PapayaWhip Field Value Type Description KnownColor PeachPuff Declaration public const KnownColor PeachPuff Field Value Type Description KnownColor Peru Declaration public const KnownColor Peru Field Value Type Description KnownColor Pink Declaration public const KnownColor Pink Field Value Type Description KnownColor Plum Declaration public const KnownColor Plum Field Value Type Description KnownColor PowderBlue Declaration public const KnownColor PowderBlue Field Value Type Description KnownColor Purple Declaration public const KnownColor Purple Field Value Type Description KnownColor Red Declaration public const KnownColor Red Field Value Type Description KnownColor RosyBrown Declaration public const KnownColor RosyBrown Field Value Type Description KnownColor RoyalBlue Declaration public const KnownColor RoyalBlue Field Value Type Description KnownColor SaddleBrown Declaration public const KnownColor SaddleBrown Field Value Type Description KnownColor Salmon Declaration public const KnownColor Salmon Field Value Type Description KnownColor SandyBrown Declaration public const KnownColor SandyBrown Field Value Type Description KnownColor ScrollBar Declaration public const KnownColor ScrollBar Field Value Type Description KnownColor SeaGreen Declaration public const KnownColor SeaGreen Field Value Type Description KnownColor SeaShell Declaration public const KnownColor SeaShell Field Value Type Description KnownColor Sienna Declaration public const KnownColor Sienna Field Value Type Description KnownColor Silver Declaration public const KnownColor Silver Field Value Type Description KnownColor SkyBlue Declaration public const KnownColor SkyBlue Field Value Type Description KnownColor SlateBlue Declaration public const KnownColor SlateBlue Field Value Type Description KnownColor SlateGray Declaration public const KnownColor SlateGray Field Value Type Description KnownColor Snow Declaration public const KnownColor Snow Field Value Type Description KnownColor SpringGreen Declaration public const KnownColor SpringGreen Field Value Type Description KnownColor SteelBlue Declaration public const KnownColor SteelBlue Field Value Type Description KnownColor Tan Declaration public const KnownColor Tan Field Value Type Description KnownColor Teal Declaration public const KnownColor Teal Field Value Type Description KnownColor Thistle Declaration public const KnownColor Thistle Field Value Type Description KnownColor Tomato Declaration public const KnownColor Tomato Field Value Type Description KnownColor Transparent Declaration public const KnownColor Transparent Field Value Type Description KnownColor Turquoise Declaration public const KnownColor Turquoise Field Value Type Description KnownColor value__ Declaration public int value__ Field Value Type Description System.Int32 Violet Declaration public const KnownColor Violet Field Value Type Description KnownColor Wheat Declaration public const KnownColor Wheat Field Value Type Description KnownColor White Declaration public const KnownColor White Field Value Type Description KnownColor WhiteSmoke Declaration public const KnownColor WhiteSmoke Field Value Type Description KnownColor Window Declaration public const KnownColor Window Field Value Type Description KnownColor WindowFrame Declaration public const KnownColor WindowFrame Field Value Type Description KnownColor WindowText Declaration public const KnownColor WindowText Field Value Type Description KnownColor Yellow Declaration public const KnownColor Yellow Field Value Type Description KnownColor YellowGreen Declaration public const KnownColor YellowGreen Field Value Type Description KnownColor"
  },
  "api/IronSoftware.Drawing.MeasurementUnits.html": {
    "href": "api/IronSoftware.Drawing.MeasurementUnits.html",
    "title": "Class MeasurementUnits | C# IronDrawing API | IronDrawing",
    "keywords": "Class MeasurementUnits A defined unit of measurement Inheritance System.Object MeasurementUnits Namespace : IronSoftware.Drawing Assembly : IronSoftware.Drawing.Common.dll Syntax public sealed class MeasurementUnits : Enum Fields Millimeters Millimeters Declaration public const MeasurementUnits Millimeters Field Value Type Description MeasurementUnits Pixels Pixels Declaration public const MeasurementUnits Pixels Field Value Type Description MeasurementUnits value__ Declaration public int value__ Field Value Type Description System.Int32"
  }
}
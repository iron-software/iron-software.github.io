{
  "api/index.html": {
    "href": "api/index.html",
    "title": "IronXL - The Excel Library for .Net | C# Excel API | IronXL",
    "keywords": "IronXL - The Excel Library for .Net IronXL is an Excel Library for C# and .Net which allows developers to Read and edit Excel data from XLS and XLSX Documents without using Microsoft.Office.Interop.Excel IronXL allows developers to Read, Generate and Edit Excel (and other Spreadsheet files) in .Net Applications & websites. A fast and natural approach to work with Excel and Other Spreadsheet files in C#. Quickstart Guide: https://ironsoftware.com/csharp/excel/ Nuget Package : https://www.nuget.org/packages/IronXL.Excel/ Key Library Features Intuitive C# & VB.NET Excel Spreadsheet API No need to install MS Office or Excel Interop Read, edit & create Excel spreadsheet files Fully supports .NET Core, Framework, and Azure Import Data from XLS/XLSX/CSV/TSV. Export Work Sheets to XLS/XLSX/CSV/TSV/JSON. Work with Spreadsheets as System.Data.DataSet and System.Data.DataTable objects. Excel Formulas recalculated every time a sheet it edited. Intuitive Ranges setting with a WorkSheet[\"A1:B10\"] syntax. Sort Ranges, Columns and Rows. Style Cells - Font, Size, Background pattern, Border, Alignment and Number formats. Compatibility IronXL works well in C#, VB.NET, MVC, ASP.NET projects for Websites, Console & Desktop APPs. Works with: .NET Core 2 , 3 & 5 .NET Standard 2 & 3 .NET Framework 4.5 and above Xamarin, SharePoint, Mono Azure, AWS, Cloud hosting Windows, Linux, Mac, Mobile Does NOT require Excel or MS office to be installed. C# Excel Code Example using IronXL; //Create new Excel WorkBook document. //The default file format is XLSX, but we can override that for legacy support WorkBook xlsWorkbook = WorkBook.Create(ExcelFileFormat.XLS); xlsWorkbook.Metadata.Author = \"IronXL\"; //Add a blank WorkSheet WorkSheet xlsSheet = xlsWorkbook.CreateWorkSheet(\"new_sheet\"); //Add data and styles to the new worksheet xlsSheet[\"A1\"].Value = \"Hello World\"; xlsSheet[\"A2\"].Style.BottomBorder.SetColor(\"#ff6600\"); xlsSheet[\"A2\"].Style.BottomBorder.Type = IronXL.Styles.BorderType.Double; //Save the excel file xlsWorkbook.SaveAs(\"NewExcelFile.xls\"); Further Documentation Code Samples : https://ironsoftware.com/csharp/excel/examples/read-excel/ Tutorials : https://ironsoftware.com/csharp/excel/tutorials/how-to-read-excel-file-csharp/ Nuget Package Manager : https://www.nuget.org/packages/IronXL.Excel/ Support : developers@ironsoftware.com"
  },
  "api/IronXL.Cells.Cell.html": {
    "href": "api/IronXL.Cells.Cell.html",
    "title": "Class Cell | C# Excel API | IronXL",
    "keywords": "Class Cell Represents a Cell in an Excel WorkSheet. Basic implementation of the ICell interface. Inheritance System.Object Cell Implements ICell IStylable Namespace : IronXL.Cells Assembly : IronXL.dll Syntax public class Cell : Object, ICell, IStylable Properties Address The location of this Cell wit Address of the cell in a WorkSheet represented as a RangeAddress . Declaration public RangeAddress Address { get; } Property Value Type Description RangeAddress BoolValue Gets or sets the boolean value of a cell. Declaration public virtual bool BoolValue { get; set; } Property Value Type Description System.Boolean true if the cell is TRUE, or contains a number greater than zero. false otherwise. CellAddressAsString Gets the cell range address address as string. E.g. \"C12\" or \"BB65\" Declaration public virtual string CellAddressAsString { get; } Property Value Type Description System.String The cell address as string. ColumnIndex Zero-based column index of a column in the sheet that contains this cell. e.g. if this Cell is in Excel col \"A\": ColumnIndex will equal 0 Declaration public int ColumnIndex { get; } Property Value Type Description System.Int32 DateTimeValue Gets or sets the date time value of this Cell . Declaration public Nullable<DateTime> DateTimeValue { get; set; } Property Value Type Description System.Nullable < System.DateTime > The System.DateTime value of this Cell .. null if the cell can not be cast as dateTime; DecimalValue Gets or sets the numeric System.Decimal value of the cell. If the cell is non-numeric - zero will be returned. Declaration public virtual Decimal DecimalValue { get; set; } Property Value Type Description System.Decimal The System.Decimal value of the cell. DoubleValue Gets or sets the numeric System.Double value of the cell. If the cell is non-numeric - zero will be returned. Declaration public virtual double DoubleValue { get; set; } Property Value Type Description System.Double The System.Double value of the cell. FloatValue Gets or sets the numeric System.Single value of the cell. If the cell is non-numeric - zero will be returned. Declaration public virtual float FloatValue { get; set; } Property Value Type Description System.Single The System.Single value of the cell. FormatString The Excel Cell format as a string . E.g. $#.00 or 0.00% or m/d/yyyy Read more about number formats at https://www.ablebits.com/office-addins-blog/2016/07/07/custom-excel-number-format/ Declaration public string FormatString { get; set; } Property Value Type Description System.String FormattedCellValue Returns the Cell value as a human readible string. FormattedCellValue applies cell formating exactly as displayed in Excel, rather than the raw nummerical values that undely the sheet. Declaration public string FormattedCellValue { get; } Property Value Type Description System.String Formula Property to get or set cell's formula. e.g. =A2+A2+A3+A4 Declaration public string Formula { get; set; } Property Value Type Description System.String Hyperlink Property to get or set the cell's value as a hyperlink. Available link types are: A URL starting with http:// , https:// or file:// An Email starting with mailto: An Document containing an abssolute or relative file path Declaration public string Hyperlink { get; set; } Property Value Type Description System.String Int32Value Gets or sets the numeric System.Int32 value of the cell. If the cell is non-numeric - zero will be returned. Synonym of IntValue Declaration public virtual int Int32Value { get; set; } Property Value Type Description System.Int32 The System.Int32 value of the cell. Int64Value Gets or sets the numeric System.Int64 value of the cell. If the cell is non-numeric - zero will be returned. Synonym of LongValue Declaration public virtual long Int64Value { get; set; } Property Value Type Description System.Int64 The System.Int64 value of the cell. IntValue Gets or sets the System.Int32 value of the cell. If the cell is non-numeric - zero will be returned. Declaration public virtual int IntValue { get; set; } Property Value Type Description System.Int32 The System.Int32 value of the cell. IsBoolean Gets a value indicating whether this instance is boolean. Declaration public bool IsBoolean { get; } Property Value Type Description System.Boolean true if this cell is boolean; otherwise, false . IsDateTime Boolean property that indicates if cell contains System.DateTime value. Declaration public bool IsDateTime { get; } Property Value Type Description System.Boolean true if this cell contains a DateTime; otherwise, false . IsEmpty Boolean property that indicates if cell is empty. Declaration public bool IsEmpty { get; } Property Value Type Description System.Boolean IsError Boolean property that indicates if cell has an error in its formula. Declaration public bool IsError { get; } Property Value Type Description System.Boolean IsFormula Boolean property that indicates if cell contains a formula. Declaration public bool IsFormula { get; } Property Value Type Description System.Boolean true if this cell contains a formula; otherwise, false . IsNumeric Boolean property that indicates if this Cell contains a numeric value: E.g. cell contains a number such as decimal, int, long, float, double etc. Declaration public bool IsNumeric { get; } Property Value Type Description System.Boolean true if this cell is a number; otherwise, false . IsText Boolean property that indicates if cell contains a string value. Declaration public bool IsText { get; } Property Value Type Description System.Boolean true if this cell is text; otherwise, false . LongValue Gets or sets the numeric System.Int64 value of the cell. If the cell is non-numeric - zero will be returned. Declaration public virtual long LongValue { get; set; } Property Value Type Description System.Int64 The System.Int64 value of the cell. RowIndex Zero-based row index of the row in the sheet that contains this cell. e.g. if this Cell is in Excel row 3: RowIndex will equal 2 Declaration public int RowIndex { get; } Property Value Type Description System.Int32 StringValue Gets or sets the string value of this Cell. Declaration public virtual string StringValue { get; set; } Property Value Type Description System.String The string value of the cell. Numbers and dates will be rendered into readable strings; as displayed in Excel. Error end NAN cells will return as a null string Style The visual Style of this Cell. Declaration public IStyle Style { get; } Property Value Type Description IStyle See Also IStyle Value Property to Get or Set the cell's value. Cells may be get or set as types: System.Double , System.Decimal , System.Single , System.Int64 , System.Int32 , System.Boolean , System.DateTime or System.String . See IsFormula , IsEmpty , IsDateTime , IsNumeric , IsText and TryGetValue<TType>(out TType) for elegantly parsing sheets with unknown content. When System.DateTime values, the default Excel date display format is 'M/D/YY h:mm'. Use SetDateTimeValue(DateTime, String) to set a custom date display formatt format Declaration public object Value { get; set; } Property Value Type Description System.Object See Also FormattedCellValue Methods GetValue<TType>() An method for getting a strongly-typed cell value which may throw cast exceptions if data is not in the System.Type expected. Throws System.ArgumentException if casting to TType is impossible. Use Try/Catch or TryGetValue<TType>(out TType) to cast cell values without possible exceptions. See Value for the list of valid types. Declaration public TType GetValue<TType>() Returns Type Description TType The value of the cell, cast as TType. E.g: double, decimal, float, long, int, bool, DateTime, string or object. Type Parameters Name Description TType The type of .net object to cast the result as. E.g: double, decimal, float, long, int, bool, DateTime, string or object. Exceptions Type Condition System.ArgumentException Cannot convert cell value to {type.Name} type. Please try another TType argument.\" + $\" You can also use boolean properties IsNumeric/IsText/etc.. to get information about cell value type. SetDateTimeValue(DateTime, String) Method for setting System.DateTime value with custom format. Declaration public void SetDateTimeValue(DateTime value, string format) Parameters Type Name Description System.DateTime value DateTime value System.String format Custom date format as a string. e.g. M/d/yyyy ToString() Gets the text content of this Cell . Declaration public override string ToString() Returns Type Description System.String A System.String that represents the text content of this Cell . TryGetValue<TType>(out TType) Safe method for getting a strongly-typed cell value. See Value for the list of valid types. e.g. bool OK = Cell.TryGetValue<double>(double result); Declaration public bool TryGetValue<TType>(out TType value) Parameters Type Name Description TType value true if the value could be cast successfully as TType. Else false . Returns Type Description System.Boolean The value of the cell, cast as TType. E.g: double, decimal, float, long, int, bool, DateTime, string or object. Type Parameters Name Description TType The type of .net object to cast the result as. E.g: double, decimal, float, long, int, bool, DateTime, string or object. Implements ICell IStylable"
  },
  "api/IronXL.Cells.html": {
    "href": "api/IronXL.Cells.html",
    "title": "Namespace IronXL.Cells | C# Excel API | IronXL",
    "keywords": "Namespace IronXL.Cells Classes Cell Represents a Cell in an Excel WorkSheet. Basic implementation of the ICell interface. Interfaces ICell Interface for a single cell in a spreadsheet. The building block of Excel data."
  },
  "api/IronXL.Cells.ICell.html": {
    "href": "api/IronXL.Cells.ICell.html",
    "title": "Interface ICell | C# Excel API | IronXL",
    "keywords": "Interface ICell Interface for a single cell in a spreadsheet. The building block of Excel data. Inherited Members IStylable.Style Namespace : IronXL.Cells Assembly : IronXL.dll Syntax public interface ICell : IStylable Properties Address Address of the cell in a worksheet. Declaration RangeAddress Address { get; } Property Value Type Description RangeAddress BoolValue Gets or sets the boolean value of a cell. Declaration bool BoolValue { get; set; } Property Value Type Description System.Boolean true if the cell is TRUE, or contains a number greater than zero. false otherwise. ColumnIndex Zero-based column index of a column in the sheet that contains this cell. Declaration int ColumnIndex { get; } Property Value Type Description System.Int32 DateTimeValue Gets or sets the numeric System.DateTime value of the cell. If the cell is not a date-time - null will be returned. Declaration Nullable<DateTime> DateTimeValue { get; set; } Property Value Type Description System.Nullable < System.DateTime > The nullable System.DateTime value of the cell. DecimalValue Gets or sets the numeric System.Decimal value of the cell. If the cell is non-numeric - zero will be returned. Declaration Decimal DecimalValue { get; set; } Property Value Type Description System.Decimal The System.Decimal value of the cell. DoubleValue Gets or sets the numeric System.Double value of the cell. If the cell is non-numeric - zero will be returned. Declaration double DoubleValue { get; set; } Property Value Type Description System.Double The System.Double value of the cell. FloatValue Gets or sets the numeric System.Single value of the cell. If the cell is non-numeric - zero will be returned. Declaration float FloatValue { get; set; } Property Value Type Description System.Single The System.Single value of the cell. FormatString Cell format string. Declaration string FormatString { get; set; } Property Value Type Description System.String FormattedCellValue Cell value after format applying. Declaration string FormattedCellValue { get; } Property Value Type Description System.String Formula Bool property that indicates if cell contains formula. Declaration string Formula { get; set; } Property Value Type Description System.String Hyperlink Property to get or set cell hyperlink. Declaration string Hyperlink { get; set; } Property Value Type Description System.String Int32Value Gets or sets the numeric System.Int32 value of the cell. If the cell is non-numeric - zero will be returned. Synonym of IntValue Declaration int Int32Value { get; set; } Property Value Type Description System.Int32 The System.Int32 value of the cell. Int64Value Gets or sets the numeric System.Int64 value of the cell. If the cell is non-numeric - zero will be returned. Synonym of LongValue Declaration long Int64Value { get; set; } Property Value Type Description System.Int64 The System.Int64 value of the cell. IntValue Gets or sets the System.Int32 value of the cell. If the cell is non-numeric - zero will be returned. Declaration int IntValue { get; set; } Property Value Type Description System.Int32 The System.Int32 value of the cell. IsDateTime Bool property that indicates if cell contains datetime value. Declaration bool IsDateTime { get; } Property Value Type Description System.Boolean IsEmpty Bool property that indicates if cell is empty. Declaration bool IsEmpty { get; } Property Value Type Description System.Boolean IsError Bool property that indicates if cell has error. Declaration bool IsError { get; } Property Value Type Description System.Boolean IsFormula Property to get or set cell formula. Declaration bool IsFormula { get; } Property Value Type Description System.Boolean IsNumeric Bool property that indicates if cell contains numeric value. Declaration bool IsNumeric { get; } Property Value Type Description System.Boolean IsText Bool property that indicates if cell contains string value. Declaration bool IsText { get; } Property Value Type Description System.Boolean LongValue Gets or sets the numeric System.Int64 value of the cell. If the cell is non-numeric - zero will be returned. Declaration long LongValue { get; set; } Property Value Type Description System.Int64 The System.Int64 value of the cell. RowIndex Zero-based row index of a row in the sheet that contains this cell. Declaration int RowIndex { get; } Property Value Type Description System.Int32 StringValue Gets or sets the string value of this Cell. Declaration string StringValue { get; set; } Property Value Type Description System.String The string value of the cell. Numbers and dates will be rendered into readable strings; as displayed in Excel. Error end NAN cells will return as a null string Value Property to get or set cell value. Declaration object Value { get; set; } Property Value Type Description System.Object Methods GetValue<TType>() Unsafe method for getting strongly-typed cell value. Throws System.ArgumentException if casting to TType is impossible. Declaration TType GetValue<TType>() Returns Type Description TType The value of the ICell, cast as TType. E.g: double, decimal, float, long, int, bool, DateTime, string or object. Type Parameters Name Description TType The .net type to cast the cell's value to. SetDateTimeValue(DateTime, String) Method for setting System.DateTime value with custom format. Declaration void SetDateTimeValue(DateTime value, string format) Parameters Type Name Description System.DateTime value DateTime value System.String format Custom date format string TryGetValue<TType>(out TType) Safe method for getting strongly-typed cell value. Declaration bool TryGetValue<TType>(out TType value) Parameters Type Name Description TType value The value of the cell cast as TType Returns Type Description System.Boolean The value of the ICell, cast as TType. E.g: double, decimal, float, long, int, bool, DateTime, string or object. Type Parameters Name Description TType The .net type to cast the cell's value to. Inherited members Style"
  },
  "api/IronXL.Drawing.AnchorType.html": {
    "href": "api/IronXL.Drawing.AnchorType.html",
    "title": "Class AnchorType | C# Excel API | IronXL",
    "keywords": "Class AnchorType Enum that represents type of the anchor of the graphic object to the WorkSheet. Applies to charts, images, and other graphical objects attached to WorkSheets. Inheritance System.Object AnchorType Namespace : IronXL.Drawing Assembly : IronXL.dll Syntax public sealed class AnchorType : Enum Fields DontMoveAndResize Unable to move and resize Declaration public const AnchorType DontMoveAndResize Field Value Type Description AnchorType MoveAndResize Move and resize anchor Declaration public const AnchorType MoveAndResize Field Value Type Description AnchorType MoveDontResize Move but don't resize Declaration public const AnchorType MoveDontResize Field Value Type Description AnchorType value__ Declaration public int value__ Field Value Type Description System.Int32"
  },
  "api/IronXL.Drawing.html": {
    "href": "api/IronXL.Drawing.html",
    "title": "Namespace IronXL.Drawing | C# Excel API | IronXL",
    "keywords": "Namespace IronXL.Drawing Classes AnchorType Enum that represents type of the anchor of the graphic object to the WorkSheet. Applies to charts, images, and other graphical objects attached to WorkSheets. Position Class that represents an image object position within a WorkSheet"
  },
  "api/IronXL.Drawing.Images.html": {
    "href": "api/IronXL.Drawing.Images.html",
    "title": "Namespace IronXL.Drawing.Images | C# Excel API | IronXL",
    "keywords": "Namespace IronXL.Drawing.Images Classes ImageFormat Enum that represents type of the loaded image. Interfaces IImage Interface that represents a picture in a Excel document."
  },
  "api/IronXL.Drawing.Images.IImage.html": {
    "href": "api/IronXL.Drawing.Images.IImage.html",
    "title": "Interface IImage | C# Excel API | IronXL",
    "keywords": "Interface IImage Interface that represents a picture in a Excel document. Namespace : IronXL.Drawing.Images Assembly : IronXL.dll Syntax public interface IImage Properties Data Gets the byte representation of the image. Declaration byte[] Data { get; } Property Value Type Description System.Byte [] Id Gets the index of the image in workbook array. Declaration int Id { get; } Property Value Type Description System.Int32 ImageFormat Gets the format of the image. Declaration ImageFormat ImageFormat { get; } Property Value Type Description ImageFormat Position Gets the position of the image. Declaration Position Position { get; } Property Value Type Description Position Methods Resize() Reset the image to the dimension of the embedded image Declaration void Resize() Resize(Double) Resize the image proportionally. Declaration void Resize(double scale) Parameters Type Name Description System.Double scale The scale percentage. Resize(Double, Double) Resize the image. Please note, that this method works correctly only for workbooks with the default font size (Arial 10pt for .xls and Calibri 11pt for .xlsx). If the default font is changed the resized image can be stretched vertically or horizontally. Declaration void Resize(double scaleX, double scaleY) Parameters Type Name Description System.Double scaleX The scale x (horizontal). 100 is normal scale. System.Double scaleY The scale y (vertical). 100 is normal scale."
  },
  "api/IronXL.Drawing.Images.ImageFormat.html": {
    "href": "api/IronXL.Drawing.Images.ImageFormat.html",
    "title": "Class ImageFormat | C# Excel API | IronXL",
    "keywords": "Class ImageFormat Enum that represents type of the loaded image. Inheritance System.Object ImageFormat Namespace : IronXL.Drawing.Images Assembly : IronXL.dll Syntax public sealed class ImageFormat : Enum Fields BMP Windows Bitmap (.bmp) Declaration public const ImageFormat BMP Field Value Type Description ImageFormat GIF GIF image format Declaration public const ImageFormat GIF Field Value Type Description ImageFormat JPEG JPEG format Declaration public const ImageFormat JPEG Field Value Type Description ImageFormat PNG PNG format Declaration public const ImageFormat PNG Field Value Type Description ImageFormat TIFF Tag Image File (.tiff) Declaration public const ImageFormat TIFF Field Value Type Description ImageFormat value__ Declaration public int value__ Field Value Type Description System.Int32"
  },
  "api/IronXL.Drawing.Position.html": {
    "href": "api/IronXL.Drawing.Position.html",
    "title": "Class Position | C# Excel API | IronXL",
    "keywords": "Class Position Class that represents an image object position within a WorkSheet Inheritance System.Object Position Namespace : IronXL.Drawing Assembly : IronXL.dll Syntax public class Position : Object Properties AnchorType Gets or sets the manor in which the image is anchored to the WorkSheet cells. Declaration public AnchorType AnchorType { get; set; } Property Value Type Description AnchorType See Also AnchorType Col1 Returns the column (0 based) of the first column the image is \"attached\" to. Declaration public int Col1 { get; set; } Property Value Type Description System.Int32 Col2 Returns the column (0 based) of the last column the image is \"attached\" to. Declaration public int Col2 { get; set; } Property Value Type Description System.Int32 Row1 Returns the row (0 based) of the first row the image is \"attached\" to. Declaration public int Row1 { get; set; } Property Value Type Description System.Int32 Row2 Returns the row (0 based) of the last row the image is \"attached\" to. Declaration public int Row2 { get; set; } Property Value Type Description System.Int32"
  },
  "api/IronXL.ExcelFileFormat.html": {
    "href": "api/IronXL.ExcelFileFormat.html",
    "title": "Class ExcelFileFormat | C# Excel API | IronXL",
    "keywords": "Class ExcelFileFormat Enum that represents the Excel file format which will be used for new workbook creation. XLS or XLSX (preferred). Inheritance System.Object ExcelFileFormat Namespace : IronXL Assembly : IronXL.dll Syntax public sealed class ExcelFileFormat : Enum Fields value__ Declaration public int value__ Field Value Type Description System.Int32 XLS Option stands for the old XLS Excel format (1997-2003) Declaration public const ExcelFileFormat XLS Field Value Type Description ExcelFileFormat XLSX Option stands for the new XLSX Excel format (2007+) Declaration public const ExcelFileFormat XLSX Field Value Type Description ExcelFileFormat"
  },
  "api/IronXL.html": {
    "href": "api/IronXL.html",
    "title": "Namespace IronXL | C# Excel API | IronXL",
    "keywords": "Namespace IronXL Classes ExcelFileFormat Enum that represents the Excel file format which will be used for new workbook creation. XLS or XLSX (preferred). License Allows IronXL license keys to be applied globally across an application. Apply your licence using LicenseKey in your code, or add the key IronXL.LicenseKey to Web.Conbfig or App.Config WorkBook Class that stands for a whole Excel file. This is the first object most users will construct whether they are reading or writing a workbook. It is also the top level (home-base) object for creating new sheets and most other Excel programing operations. WorkSheet Class that stands for single sheet within Excel file."
  },
  "api/IronXL.Layout.html": {
    "href": "api/IronXL.Layout.html",
    "title": "Namespace IronXL.Layout | C# Excel API | IronXL",
    "keywords": "Namespace IronXL.Layout Interfaces IFooter Interface for worksheet footer IHeader Interface for worksheet header IHeaderFooter Common interface for"
  },
  "api/IronXL.Layout.IFooter.html": {
    "href": "api/IronXL.Layout.IFooter.html",
    "title": "Interface IFooter | C# Excel API | IronXL",
    "keywords": "Interface IFooter Interface for worksheet footer Inherited Members IHeaderFooter.Left IHeaderFooter.Center IHeaderFooter.Right Namespace : IronXL.Layout Assembly : IronXL.dll Syntax public interface IFooter : IHeaderFooter Inherited members Left Center Right See Also IHeaderFooter"
  },
  "api/IronXL.Layout.IHeader.html": {
    "href": "api/IronXL.Layout.IHeader.html",
    "title": "Interface IHeader | C# Excel API | IronXL",
    "keywords": "Interface IHeader Interface for worksheet header Inherited Members IHeaderFooter.Left IHeaderFooter.Center IHeaderFooter.Right Namespace : IronXL.Layout Assembly : IronXL.dll Syntax public interface IHeader : IHeaderFooter Inherited members Left Center Right See Also IHeaderFooter"
  },
  "api/IronXL.Layout.IHeaderFooter.html": {
    "href": "api/IronXL.Layout.IHeaderFooter.html",
    "title": "Interface IHeaderFooter | C# Excel API | IronXL",
    "keywords": "Interface IHeaderFooter Common interface for Namespace : IronXL.Layout Assembly : IronXL.dll Syntax public interface IHeaderFooter Properties Center Gets or sets the center of the header or footer. Declaration string Center { get; set; } Property Value Type Description System.String The string representing the center. Left Gets or sets the left side of the header or footer. Declaration string Left { get; set; } Property Value Type Description System.String The string representing the left side. Right Gets or sets the right side of the header or footer. Declaration string Right { get; set; } Property Value Type Description System.String The string representing the right side."
  },
  "api/IronXL.License.html": {
    "href": "api/IronXL.License.html",
    "title": "Class License | C# Excel API | IronXL",
    "keywords": "Class License Allows IronXL license keys to be applied globally across an application. Apply your licence using LicenseKey in your code, or add the key IronXL.LicenseKey to Web.Conbfig or App.Config Inheritance System.Object License Namespace : IronXL Assembly : IronXL.dll Syntax public static class License : Object Fields LicenseKey License IronXL for deployment. Get Licensed at http://ironsoftware.com/csharp/excel/licensing/ A License key can also be added to Web.Config or App.Config as IronXL.LicenseKey Declaration public static string LicenseKey Field Value Type Description System.String Methods IsValidLicense(String) Determines whether a license key is valid. Declaration public static bool IsValidLicense(string LicenseKey) Parameters Type Name Description System.String LicenseKey IronXL license key as a string Returns Type Description System.Boolean true if the specified license key is valid; otherwise, false ."
  },
  "api/IronXL.Metadata.html": {
    "href": "api/IronXL.Metadata.html",
    "title": "Namespace IronXL.Metadata | C# Excel API | IronXL",
    "keywords": "Namespace IronXL.Metadata Interfaces IMetadata Interface that represents meta-data for the Excel file such as \"Author\", \"Title\"..."
  },
  "api/IronXL.Metadata.IMetadata.html": {
    "href": "api/IronXL.Metadata.IMetadata.html",
    "title": "Interface IMetadata | C# Excel API | IronXL",
    "keywords": "Interface IMetadata Interface that represents meta-data for the Excel file such as \"Author\", \"Title\"... Namespace : IronXL.Metadata Assembly : IronXL.dll Syntax public interface IMetadata Properties ApplicationName Gets the name of the application with which the file was created. Declaration string ApplicationName { get; } Property Value Type Description System.String Author Gets or sets the author of the file. Declaration string Author { get; set; } Property Value Type Description System.String Category Gets or sets the category of the file. Declaration string Category { get; set; } Property Value Type Description System.String Comments Gets or sets the comments field value. Declaration string Comments { get; set; } Property Value Type Description System.String Company Gets the company field value. Declaration string Company { get; } Property Value Type Description System.String Created Gets or sets the creation time. Declaration Nullable<DateTime> Created { get; set; } Property Value Type Description System.Nullable < System.DateTime > Keywords Gets or sets the keywords field value. Declaration string Keywords { get; set; } Property Value Type Description System.String LastPrinted Gets or sets the last printed time. Declaration Nullable<DateTime> LastPrinted { get; set; } Property Value Type Description System.Nullable < System.DateTime > Manager Gets the manager field value. Declaration string Manager { get; } Property Value Type Description System.String Modified Gets or sets the last modification time. Declaration Nullable<DateTime> Modified { get; set; } Property Value Type Description System.Nullable < System.DateTime > Subject Gets or sets the subject of the file. Declaration string Subject { get; set; } Property Value Type Description System.String Template Gets the template field value. Declaration string Template { get; } Property Value Type Description System.String Title Gets or sets the title of the file. Declaration string Title { get; set; } Property Value Type Description System.String"
  },
  "api/IronXL.Options.CreatingOptions.html": {
    "href": "api/IronXL.Options.CreatingOptions.html",
    "title": "Class CreatingOptions | C# Excel API | IronXL",
    "keywords": "Class CreatingOptions Options for creating new WorkBook object. Inheritance System.Object CreatingOptions Namespace : IronXL.Options Assembly : IronXL.dll Syntax public class CreatingOptions : Object Constructors CreatingOptions() Declaration public CreatingOptions() Properties DefaultFileFormat Property that indicates whether to use XLS or XLSX as new workbook format. XLSX is the default value for new workbook Declaration public ExcelFileFormat DefaultFileFormat { get; set; } Property Value Type Description ExcelFileFormat The default spreadsheet file format."
  },
  "api/IronXL.Options.html": {
    "href": "api/IronXL.Options.html",
    "title": "Namespace IronXL.Options | C# Excel API | IronXL",
    "keywords": "Namespace IronXL.Options Classes CreatingOptions Options for creating new WorkBook object. LoadingOptions Options for loading WorkBook object from file. PanePosition Define the position of active the pane. One of lower/right, upper/right, lower/left and upper/left. SavingOptions Options for saving WorkBook object to file."
  },
  "api/IronXL.Options.LoadingOptions.html": {
    "href": "api/IronXL.Options.LoadingOptions.html",
    "title": "Class LoadingOptions | C# Excel API | IronXL",
    "keywords": "Class LoadingOptions Options for loading WorkBook object from file. Inheritance System.Object LoadingOptions Namespace : IronXL.Options Assembly : IronXL.dll Syntax public class LoadingOptions : Object Constructors LoadingOptions() Declaration public LoadingOptions() Properties CsvListDelimiter Property that indicates CSV file list delimiter. Default value depends on current region. Take a look at System.Globalization.CultureInfo Declaration public string CsvListDelimiter { get; set; } Property Value Type Description System.String DefaultFileFormat Property that indicates whether to use XLS or XLSX as new workbook format when loading CSV/TSV files. XLSX is the default value for new workbook Declaration public ExcelFileFormat DefaultFileFormat { get; set; } Property Value Type Description ExcelFileFormat"
  },
  "api/IronXL.Options.PanePosition.html": {
    "href": "api/IronXL.Options.PanePosition.html",
    "title": "Class PanePosition | C# Excel API | IronXL",
    "keywords": "Class PanePosition Define the position of active the pane. One of lower/right, upper/right, lower/left and upper/left. Inheritance System.Object PanePosition Namespace : IronXL.Options Assembly : IronXL.dll Syntax public sealed class PanePosition : Enum Fields LowerLeft Refers to the lower/left corner Declaration public const PanePosition LowerLeft Field Value Type Description PanePosition LowerRight Refers to the lower/right corner Declaration public const PanePosition LowerRight Field Value Type Description PanePosition UpperLeft Refers to the upper/left corner Declaration public const PanePosition UpperLeft Field Value Type Description PanePosition UpperRight Refers to the upper/right corner Declaration public const PanePosition UpperRight Field Value Type Description PanePosition value__ Declaration public byte value__ Field Value Type Description System.Byte"
  },
  "api/IronXL.Options.SavingOptions.html": {
    "href": "api/IronXL.Options.SavingOptions.html",
    "title": "Class SavingOptions | C# Excel API | IronXL",
    "keywords": "Class SavingOptions Options for saving WorkBook object to file. Inheritance System.Object SavingOptions Namespace : IronXL.Options Assembly : IronXL.dll Syntax public class SavingOptions : Object Constructors SavingOptions() Declaration public SavingOptions() Properties ListDelimiter Property that indicates CSV file list delimiter. Default value depends on current region. Take a look at System.Globalization.CultureInfo Declaration public string ListDelimiter { get; set; } Property Value Type Description System.String"
  },
  "api/IronXL.Printing.html": {
    "href": "api/IronXL.Printing.html",
    "title": "Namespace IronXL.Printing | C# Excel API | IronXL",
    "keywords": "Namespace IronXL.Printing Classes PaperSize An Enum that represents different sizes of paper for Excel document printing and page setup. See https://docs.microsoft.com/en-us/windows/desktop/intl/paper-sizes for more information on windows and Excel paper sizes. PrintOrientation Enum that represents different print orientations Interfaces IPrintSetup Interface that represents list of settings for printing a Excel file."
  },
  "api/IronXL.Printing.IPrintSetup.html": {
    "href": "api/IronXL.Printing.IPrintSetup.html",
    "title": "Interface IPrintSetup | C# Excel API | IronXL",
    "keywords": "Interface IPrintSetup Interface that represents list of settings for printing a Excel file. Namespace : IronXL.Printing Assembly : IronXL.dll Syntax public interface IPrintSetup Properties Copies Returns the number of copies to print. Declaration short Copies { get; set; } Property Value Type Description System.Int16 Draft Returns the draft mode. Declaration bool Draft { get; set; } Property Value Type Description System.Boolean FitHeight Returns the number of pages high to fit the sheet in to. Declaration short FitHeight { get; set; } Property Value Type Description System.Int16 FitWidth Returns the number of pages wide to fit sheet in to. Declaration short FitWidth { get; set; } Property Value Type Description System.Int16 FooterMargin Returns the footer margin. Declaration double FooterMargin { get; set; } Property Value Type Description System.Double HeaderMargin Returns the header margin. Declaration double HeaderMargin { get; set; } Property Value Type Description System.Double HResolution Returns the horizontal resolution. Declaration short HResolution { get; set; } Property Value Type Description System.Int16 LeftToRight Returns the left to right print order. Declaration bool LeftToRight { get; set; } Property Value Type Description System.Boolean NoColor Returns the black and white Setting. Declaration bool NoColor { get; set; } Property Value Type Description System.Boolean Notes Returns the print notes. Declaration bool Notes { get; set; } Property Value Type Description System.Boolean PageStart Returns the page start. Declaration short PageStart { get; set; } Property Value Type Description System.Int16 PaperSize Gets or sets the size of the paper. Declaration PaperSize PaperSize { get; set; } Property Value Type Description PaperSize PrintOrientation Returns the print orientation. Declaration PrintOrientation PrintOrientation { get; set; } Property Value Type Description PrintOrientation Scale Returns the scale. Declaration short Scale { get; set; } Property Value Type Description System.Int16 UsePage Returns the use page numbers. Declaration bool UsePage { get; set; } Property Value Type Description System.Boolean VResolution Returns the vertical resolution. Declaration short VResolution { get; set; } Property Value Type Description System.Int16"
  },
  "api/IronXL.Printing.PaperSize.html": {
    "href": "api/IronXL.Printing.PaperSize.html",
    "title": "Class PaperSize | C# Excel API | IronXL",
    "keywords": "Class PaperSize An Enum that represents different sizes of paper for Excel document printing and page setup. See https://docs.microsoft.com/en-us/windows/desktop/intl/paper-sizes for more information on windows and Excel paper sizes. Inheritance System.Object PaperSize Namespace : IronXL.Printing Assembly : IronXL.dll Syntax public sealed class PaperSize : Enum Fields A3 A3 297 x 420 mm Declaration public const PaperSize A3 Field Value Type Description PaperSize A4 A4 210 x 297 mm Declaration public const PaperSize A4 Field Value Type Description PaperSize A4EExtra A4 Extra 9.27 x 12.69 in Declaration public const PaperSize A4EExtra Field Value Type Description PaperSize A4Plus A4 Plus - 210x330 mm Declaration public const PaperSize A4Plus Field Value Type Description PaperSize A4Rotated A4 Rotated - 297x210 mm Declaration public const PaperSize A4Rotated Field Value Type Description PaperSize A4Small A4 Small 210 x 297 mm Declaration public const PaperSize A4Small Field Value Type Description PaperSize A4Transverse A4 Transverse - 210x297 mm Declaration public const PaperSize A4Transverse Field Value Type Description PaperSize A5 A5 148 x 210 mm Declaration public const PaperSize A5 Field Value Type Description PaperSize B4 B4 (JIS) 257 x 364 mm Declaration public const PaperSize B4 Field Value Type Description PaperSize B5 B5 (JIS) 182 x 257 mm Declaration public const PaperSize B5 Field Value Type Description PaperSize CSizeSheet C size sheet Declaration public const PaperSize CSizeSheet Field Value Type Description PaperSize DSizeSheet D size sheet Declaration public const PaperSize DSizeSheet Field Value Type Description PaperSize ElevenBySeven 11 x 17 in Declaration public const PaperSize ElevenBySeven Field Value Type Description PaperSize Envelope10 US Envelope #10 4 1/8 x 9 1/2 Declaration public const PaperSize Envelope10 Field Value Type Description PaperSize Envelope11 US Envelope #11 4 1/2 x 10 3/8 Declaration public const PaperSize Envelope11 Field Value Type Description PaperSize Envelope12 US Envelope #12 4 3/4 x 11 in Declaration public const PaperSize Envelope12 Field Value Type Description PaperSize Envelope14 US Envelope #14 5 x 11 1/2 Declaration public const PaperSize Envelope14 Field Value Type Description PaperSize Envelope9 US Envelope #9 3 7/8 x 8 7/8 Declaration public const PaperSize Envelope9 Field Value Type Description PaperSize EnvelopeC3 Envelope C3 324 x 458 mm Declaration public const PaperSize EnvelopeC3 Field Value Type Description PaperSize EnvelopeC4 Envelope C4 229 x 324 mm Declaration public const PaperSize EnvelopeC4 Field Value Type Description PaperSize EnvelopeC5 Envelope C5 162 x 229 mm Declaration public const PaperSize EnvelopeC5 Field Value Type Description PaperSize EnvelopeC6 Envelope C6 114 x 162 mm Declaration public const PaperSize EnvelopeC6 Field Value Type Description PaperSize EnvelopeDL Envelope DL 110 x 220mm Declaration public const PaperSize EnvelopeDL Field Value Type Description PaperSize EnvelopeMonarch US Envelope Monarch 3.875 x 7.5 in Declaration public const PaperSize EnvelopeMonarch Field Value Type Description PaperSize ESizeSheet Declaration public const PaperSize ESizeSheet Field Value Type Description PaperSize Executive US Executive 7 1/4 x 10 1/2 in Declaration public const PaperSize Executive Field Value Type Description PaperSize Folio Folio 8 1/2 x 13 in Declaration public const PaperSize Folio Field Value Type Description PaperSize Ledger US Ledger 17 x 11 in Declaration public const PaperSize Ledger Field Value Type Description PaperSize Legal US Legal 8 1/2 x 14 in Declaration public const PaperSize Legal Field Value Type Description PaperSize Letter US Letter Small 8 1/2 x 11 in Declaration public const PaperSize Letter Field Value Type Description PaperSize LetterRotated US Letter Rotated 11 x 8 1/2 in Declaration public const PaperSize LetterRotated Field Value Type Description PaperSize Note US Note 8 1/2 x 11 in Declaration public const PaperSize Note Field Value Type Description PaperSize PrinterDefault Default paper size. Works with each printer's default paper setting. Declaration public const PaperSize PrinterDefault Field Value Type Description PaperSize Quarto Quarto 215 x 275 mm Declaration public const PaperSize Quarto Field Value Type Description PaperSize Statement US Statement 5 1/2 x 8 1/2 in Declaration public const PaperSize Statement Field Value Type Description PaperSize Tabloid US Tabloid 11 x 17 in Declaration public const PaperSize Tabloid Field Value Type Description PaperSize TenByFourteen 10 x 14 in Declaration public const PaperSize TenByFourteen Field Value Type Description PaperSize value__ Declaration public short value__ Field Value Type Description System.Int16"
  },
  "api/IronXL.Printing.PrintOrientation.html": {
    "href": "api/IronXL.Printing.PrintOrientation.html",
    "title": "Class PrintOrientation | C# Excel API | IronXL",
    "keywords": "Class PrintOrientation Enum that represents different print orientations Inheritance System.Object PrintOrientation Namespace : IronXL.Printing Assembly : IronXL.dll Syntax public sealed class PrintOrientation : Enum Fields Default The default print orientation Declaration public const PrintOrientation Default Field Value Type Description PrintOrientation Landscape The landscape print orientation Declaration public const PrintOrientation Landscape Field Value Type Description PrintOrientation Portrait The portrait print orientation Declaration public const PrintOrientation Portrait Field Value Type Description PrintOrientation value__ Declaration public short value__ Field Value Type Description System.Int16"
  },
  "api/IronXL.Ranges.html": {
    "href": "api/IronXL.Ranges.html",
    "title": "Namespace IronXL.Ranges | C# Excel API | IronXL",
    "keywords": "Namespace IronXL.Ranges Classes Range A class that represents a range of cells RangeAddress Class that represents address of the range. RangeColumn Basic implementation of IRangeColumn interface. RangeRow Basic implementation of IRangeRow interface. Interfaces IRange Interface that represents a range of cells. IRangeColumn Interface for a specific column within range IRangeRow Interface for a specific row within range"
  },
  "api/IronXL.Ranges.IRange.html": {
    "href": "api/IronXL.Ranges.IRange.html",
    "title": "Interface IRange | C# Excel API | IronXL",
    "keywords": "Interface IRange Interface that represents a range of cells. Inherited Members IStylable.Style Namespace : IronXL.Ranges Assembly : IronXL.dll Syntax public interface IRange : IStylable Properties BoolValue Gets or sets the System.Boolean value of this Range of cells. Getting the BoolValue will return true only if ALL cells in the range are true. Numeric cells greater than zero are treated as TRUE. [Logical AND Operator Applied] Setting the BoolValue will set all cells in with the same System.Boolean value. Declaration bool BoolValue { get; set; } Property Value Type Description System.Boolean The boolean AND aggregate value of the cells. Error end NAN cells will return as a false . Columns List of columns within the current range. Declaration List<IRangeColumn> Columns { get; } Property Value Type Description System.Collections.Generic.List < IRangeColumn > DateTimeValue Gets or sets the nullable System.DateTime value of this Range of cells. Getting the DateTimeValue will return highest (MAX) DateTime in the Range, or null if no System.DateTime is found. Setting the DateTimeValue will set all cells in with the same System.DateTime value. Declaration Nullable<DateTime> DateTimeValue { get; set; } Property Value Type Description System.Nullable < System.DateTime > The MAX System.DateTime of all of the cells. DecimalValue Gets or sets the System.Decimal value of this Range of cells. Getting the DecimalValue will return the SUM of all numeric cells in the Range. Setting the DecimalValue will set all cells in with the same System.Decimal value. Declaration Decimal DecimalValue { get; set; } Property Value Type Description System.Decimal The System.Decimal SUM of all of the cells. Error end NAN cells will count as 0 FloatValue Gets or sets the System.Single value of this Range of cells. Getting the FloatValue will return the SUM of all numeric cells in the Range. Setting the FloatValue will set all cells in with the same System.Single value. Declaration float FloatValue { get; set; } Property Value Type Description System.Single The System.Single SUM of all of the cells. Error end NAN cells will count as 0 Int32Value Synonym of IntValue Gets or sets the System.Int32 (Int32) value of this Range of cells. Getting the LongValue will return the SUM of all numeric cells in the Range. Setting the LongValue will set all cells in with the same System.Int32 value. Declaration int Int32Value { get; set; } Property Value Type Description System.Int32 The System.Int32 SUM of all of the cells. Error end NAN cells will count as 0 Int64Value Synonym of LongValue Gets or sets the System.Int64 (Int64) value of this Range of cells. Getting the LongValue will return the SUM of all numeric cells in the Range. Setting the LongValue will set all cells in with the same System.Int64 value. Declaration long Int64Value { get; set; } Property Value Type Description System.Int64 The System.Int64 SUM of all of the cells. Error end NAN cells will count as 0 IntValue Gets or sets the System.Int32 value of this Range of cells. Getting the IntValue will return the SUM of all numeric cells in the Range. Setting the IntValue will set all cells in with the same System.Int32 value. Declaration int IntValue { get; set; } Property Value Type Description System.Int32 The System.Int32 SUM of all of the cells. Error end NAN cells will count as 0 IsEmpty Property that indicates if range is empty. Declaration bool IsEmpty { get; } Property Value Type Description System.Boolean LongValue Gets or sets the System.Int64 (Int64) value of this Range of cells. Getting the LongValue will return the SUM of all numeric cells in the Range. Setting the LongValue will set all cells in with the same System.Int64 value. Declaration long LongValue { get; set; } Property Value Type Description System.Int64 The System.Int64 SUM of all of the cells. Error end NAN cells will count as 0 RangeAddressAsString Gets a string representation of this range address. E.g. \"A1:B25\" Declaration string RangeAddressAsString { get; } Property Value Type Description System.String The range address as string. Rows List of rows within the current range. Declaration List<IRangeRow> Rows { get; } Property Value Type Description System.Collections.Generic.List < IRangeRow > StringValue Gets or sets the System.String value of this Range of cells. Getting the StringValue will return formated System.String values. Columns will be delimited by TABS. Rows delimited by NEWLINE Setting the StringValue will set all cells in with the same System.String value. Declaration string StringValue { get; set; } Property Value Type Description System.String The string value of all of the cells. Numbers and dates will be rendered into readable strings; as displayed in Excel. Formulas will be calculated. Error end NAN cells will return as a null string. Value Property to get or set range value. Declaration object Value { get; set; } Property Value Type Description System.Object WorkBook The workbook this range belongs to. Declaration WorkBook WorkBook { get; } Property Value Type Description WorkBook Methods AddRange(IRange) Add range to the current. Declaration IRange AddRange(IRange range) Parameters Type Name Description IRange range The range to add to the current working range. Returns Type Description IRange This Range allowing a fluent coding style. Avg() Returns average value of all numeric cells Declaration Decimal Avg() Returns Type Description System.Decimal The average value as a decimal. Copy(WorkSheet, String) Copies the specified range to the sheet and inserts it at the specified point. Declaration void Copy(WorkSheet sheet, string pointToInsert) Parameters Type Name Description WorkSheet sheet The worksheet to paste this Range into. System.String pointToInsert The cell at which to paste the range. E.g. \"A11\" GetValue<TType>() Unsafe method for getting range value. Declaration TType GetValue<TType>() Returns Type Description TType The value of the cell, cast as TType Type Parameters Name Description TType The .net type to which the cell's value will be cast. Max() Returns maximum value of all numeric cells Declaration Decimal Max() Returns Type Description System.Decimal The max value as a decimal. Min() Returns minimum value of all numeric cells Declaration Decimal Min() Returns Type Description System.Decimal The min value as a decimal. Replace(String, String) Replaces all found occurrences of the old value within range with the specified value. Works with all string and numeric values. Declaration void Replace(string oldValue, string newValue) Parameters Type Name Description System.String oldValue The old value to find. System.String newValue The new value to replace. SetCellValue(Int32, Int32, Object) Set cell value using its row and column indexes. Declaration void SetCellValue(int row, int column, object value) Parameters Type Name Description System.Int32 row The row index. zero based. System.Int32 column The column index. zero based System.Object value The new value for that cell. SortAscending() Sort current range in ascending order. Declaration IRange SortAscending() Returns Type Description IRange This Range, allowing for a fluent code style. SortDescending() Sort current range in descending order. Declaration IRange SortDescending() Returns Type Description IRange This Range, allowing for a fluent code style. SubtractRange(IRange) Subtract range from the current selection. Declaration IRange SubtractRange(IRange range) Parameters Type Name Description IRange range The range to remove from the current working range. Returns Type Description IRange This Range allowing a fluent coding style. Sum() Returns sum of all numeric cells e. Declaration Decimal Sum() Returns Type Description System.Decimal The sum value as a decimal. ToDataTable(Boolean) Creates a System.Data.DataTable representation of current range. Declaration DataTable ToDataTable(bool useFirstRowAsColumnNames) Parameters Type Name Description System.Boolean useFirstRowAsColumnNames Indicates whether to use first row as column names or not Returns Type Description System.Data.DataTable A System.Data.DataTable representation of current range. Trim() Removes all empty rows and columns on the range borders. Declaration IRange Trim() Returns Type Description IRange This Range, allowing for a fluent code style. Inherited members Style"
  },
  "api/IronXL.Ranges.IRangeColumn.html": {
    "href": "api/IronXL.Ranges.IRangeColumn.html",
    "title": "Interface IRangeColumn | C# Excel API | IronXL",
    "keywords": "Interface IRangeColumn Interface for a specific column within range Inherited Members IRange.Sum() IRange.Max() IRange.Min() IRange.Avg() IRange.AddRange(IRange) IRange.SubtractRange(IRange) IRange.ToDataTable(Boolean) IRange.SortAscending() IRange.SortDescending() IRange.Trim() IRange.SetCellValue(Int32, Int32, Object) IRange.GetValue<TType>() IRange.Copy(WorkSheet, String) IRange.Replace(String, String) IRange.Rows IRange.Columns IRange.Value IRange.IsEmpty IRange.WorkBook IRange.StringValue IRange.BoolValue IRange.IntValue IRange.DecimalValue IRange.DateTimeValue IRange.FloatValue IRange.LongValue IRange.Int32Value IRange.Int64Value IRange.RangeAddressAsString IStylable.Style Namespace : IronXL.Ranges Assembly : IronXL.dll Syntax public interface IRangeColumn : IRange, IStylable Properties Hidden Gets or sets a value indicating whether this column is hidden. Declaration bool Hidden { get; set; } Property Value Type Description System.Boolean RangeAddress Address of the column Declaration RangeAddress RangeAddress { get; } Property Value Type Description RangeAddress Width Gets or sets the width of the column. Declaration int Width { get; set; } Property Value Type Description System.Int32 Inherited members Sum() Max() Min() Avg() AddRange(IRange) SubtractRange(IRange) ToDataTable(Boolean) SortAscending() SortDescending() Trim() SetCellValue(Int32, Int32, Object) GetValue<TType>() Copy(WorkSheet, String) Replace(String, String) Rows Columns Value IsEmpty WorkBook StringValue BoolValue IntValue DecimalValue DateTimeValue FloatValue LongValue Int32Value Int64Value RangeAddressAsString Style"
  },
  "api/IronXL.Ranges.IRangeRow.html": {
    "href": "api/IronXL.Ranges.IRangeRow.html",
    "title": "Interface IRangeRow | C# Excel API | IronXL",
    "keywords": "Interface IRangeRow Interface for a specific row within range Inherited Members IRange.Sum() IRange.Max() IRange.Min() IRange.Avg() IRange.AddRange(IRange) IRange.SubtractRange(IRange) IRange.ToDataTable(Boolean) IRange.SortAscending() IRange.SortDescending() IRange.Trim() IRange.SetCellValue(Int32, Int32, Object) IRange.GetValue<TType>() IRange.Copy(WorkSheet, String) IRange.Replace(String, String) IRange.Rows IRange.Columns IRange.Value IRange.IsEmpty IRange.WorkBook IRange.StringValue IRange.BoolValue IRange.IntValue IRange.DecimalValue IRange.DateTimeValue IRange.FloatValue IRange.LongValue IRange.Int32Value IRange.Int64Value IRange.RangeAddressAsString IStylable.Style Namespace : IronXL.Ranges Assembly : IronXL.dll Syntax public interface IRangeRow : IRange, IStylable Properties Height Gets or sets the height of the row. Declaration int Height { get; set; } Property Value Type Description System.Int32 Hidden Gets or sets a value indicating whether this row is hidden. Declaration bool Hidden { get; set; } Property Value Type Description System.Boolean RangeAddress Address of the row Declaration RangeAddress RangeAddress { get; } Property Value Type Description RangeAddress Inherited members Sum() Max() Min() Avg() AddRange(IRange) SubtractRange(IRange) ToDataTable(Boolean) SortAscending() SortDescending() Trim() SetCellValue(Int32, Int32, Object) GetValue<TType>() Copy(WorkSheet, String) Replace(String, String) Rows Columns Value IsEmpty WorkBook StringValue BoolValue IntValue DecimalValue DateTimeValue FloatValue LongValue Int32Value Int64Value RangeAddressAsString Style"
  },
  "api/IronXL.Ranges.Range.html": {
    "href": "api/IronXL.Ranges.Range.html",
    "title": "Class Range | C# Excel API | IronXL",
    "keywords": "Class Range A class that represents a range of cells Inheritance System.Object Range RangeColumn RangeRow WorkSheet Implements IRange System.Collections.Generic.IEnumerable < ICell > System.Collections.IEnumerable IStylable Namespace : IronXL.Ranges Assembly : IronXL.dll Syntax public class Range : Object, IRange, IStylable Properties BoolValue Gets or sets the System.Boolean value of this Range of cells. Getting the BoolValue will return true only if ALL cells in the range are true. Numeric cells greater than zero are treated as TRUE. [Logical AND Operator Applied] Setting the BoolValue will set all cells in with the same System.Boolean value. Declaration public virtual bool BoolValue { get; set; } Property Value Type Description System.Boolean The boolean AND aggregate value of the cells. Error end NAN cells will return as a false . Columns List of Excel columns within the current range. The Columns contains Cell objects. Declaration public List<IRangeColumn> Columns { get; } Property Value Type Description System.Collections.Generic.List < IRangeColumn > DateTimeValue Gets or sets the nullable System.DateTime value of this Range of cells. Getting the DateTimeValue will return highest (MAX) DateTime in the Range, or null if no System.DateTime is found. Setting the DateTimeValue will set all cells in with the same System.DateTime value. Declaration public Nullable<DateTime> DateTimeValue { get; set; } Property Value Type Description System.Nullable < System.DateTime > The MAX System.DateTime of all of the cells. DecimalValue Gets or sets the System.Decimal value of this Range of cells. Getting the DecimalValue will return the SUM of all numeric cells in the Range. Setting the DecimalValue will set all cells in with the same System.Decimal value. Declaration public virtual Decimal DecimalValue { get; set; } Property Value Type Description System.Decimal The System.Decimal SUM of all of the cells. Error end NAN cells will count as 0 DoubleValue Gets or sets the double value of all Cells in this Rance. Declaration public virtual double DoubleValue { get; set; } Property Value Type Description System.Double The double value. FloatValue Gets or sets the System.Single value of this Range of cells. Getting the FloatValue will return the SUM of all numeric cells in the Range. Setting the FloatValue will set all cells in with the same System.Single value. Declaration public virtual float FloatValue { get; set; } Property Value Type Description System.Single The System.Single SUM of all of the cells. Error end NAN cells will count as 0 Int32Value Synonym of IntValue Gets or sets the System.Int32 (Int32) value of this Range of cells. Getting the LongValue will return the SUM of all numeric cells in the Range. Setting the LongValue will set all cells in with the same System.Int32 value. Declaration public virtual int Int32Value { get; set; } Property Value Type Description System.Int32 The System.Int32 SUM of all of the cells. Error end NAN cells will count as 0 Int64Value Synonym of LongValue Gets or sets the System.Int64 (Int64) value of this Range of cells. Getting the LongValue will return the SUM of all numeric cells in the Range. Setting the LongValue will set all cells in with the same System.Int64 value. Declaration public virtual long Int64Value { get; set; } Property Value Type Description System.Int64 The System.Int64 SUM of all of the cells. Error end NAN cells will count as 0 IntValue Gets or sets the System.Int32 value of this Range of cells. Getting the IntValue will return the SUM of all numeric cells in the Range. Setting the IntValue will set all cells in with the same System.Int32 value. Declaration public virtual int IntValue { get; set; } Property Value Type Description System.Int32 The System.Int32 SUM of all of the cells. Error end NAN cells will count as 0 IsEmpty Property that indicates if range is empty. Declaration public bool IsEmpty { get; } Property Value Type Description System.Boolean LongValue Gets or sets the System.Int64 (Int64) value of this Range of cells. Getting the LongValue will return the SUM of all numeric cells in the Range. Setting the LongValue will set all cells in with the same System.Int64 value. Declaration public virtual long LongValue { get; set; } Property Value Type Description System.Int64 The System.Int64 SUM of all of the cells. Error end NAN cells will count as 0 RangeAddressAsString Gets a string representation of this range address. E.g. \"A1:B25\" Declaration public virtual string RangeAddressAsString { get; } Property Value Type Description System.String The range address as string. Rows List of Excel rows within the current range. The Rows contains Cell objects. Declaration public List<IRangeRow> Rows { get; } Property Value Type Description System.Collections.Generic.List < IRangeRow > StringValue Gets or sets the System.String value of this Range of cells. Getting the StringValue will return formated System.String values. Columns will be delimited by TABS. Rows delimited by NEWLINE Setting the StringValue will set all cells in with the same System.String value. Declaration public virtual string StringValue { get; set; } Property Value Type Description System.String The string value of all of the cells. Numbers and dates will be rendered into readable strings; as displayed in Excel. Formulas will be calculated. Error end NAN cells will return as a null string. Style Style of all cells within range. Declaration public IStyle Style { get; } Property Value Type Description IStyle Value Property to get or set range value. If range contains one cell: {get} returns the cell value, {set} changes the cell value If range contains more than one cell: {get} returns the sum of all numeric cells within range, {set} changes the value of every cell within the range. Declaration public object Value { get; set; } Property Value Type Description System.Object WorkBook The workbook this range belongs to. Declaration public WorkBook WorkBook { get; } Property Value Type Description WorkBook Methods AddRange(IRange) Add another range to this current range. Basically, the result is union of two ranges. Declaration public virtual IRange AddRange(IRange range) Parameters Type Name Description IRange range The range to add to the current working range. Returns Type Description IRange This Range allowing a fluent coding style. Avg() Returns average value of all numeric cells Declaration public Decimal Avg() Returns Type Description System.Decimal The average value as a decimal. Column(Int32) Get a column by index Declaration protected IRangeColumn Column(int index) Parameters Type Name Description System.Int32 index Returns Type Description IRangeColumn Copy(WorkSheet, String) Copies the specified range to the sheet and inserts it at the specified point. E.g. Pastes this range to a WorkSheet at a specified cell location Declaration public void Copy(WorkSheet sheet, string pointToInsert) Parameters Type Name Description WorkSheet sheet The worksheet to paste this Range into. System.String pointToInsert The cell at which to paste the range. E.g. \"A11\" GetAllColumns() Get a list of columns Declaration protected List<IRangeColumn> GetAllColumns() Returns Type Description System.Collections.Generic.List < IRangeColumn > GetAllRows() Get a list of rows Declaration protected List<IRangeRow> GetAllRows() Returns Type Description System.Collections.Generic.List < IRangeRow > GetEnumerator() IEnumerable implementation. Declaration public IEnumerator<ICell> GetEnumerator() Returns Type Description System.Collections.Generic.IEnumerator < ICell > An IEnumerator allowing for-each logical iteration of cells with Ranges. GetValue<TType>() Method for getting a range's value. If range contains one cell then method calls GetValue<TType>() of this cell If range contains more than one cell then method tries to cast Sum() of all numeric cells within range to TType Use Try/Catch to avoid possible exceptions from this method if cell content types are inconsistent or contain formula errors. Declaration public TType GetValue<TType>() Returns Type Description TType The value of the cell, cast as TType Type Parameters Name Description TType The .net type to which the cell's value will be cast. Exceptions Type Condition System.ArgumentException Range value cannot be casted to {type.Name} Max() Returns maximum value of all numeric cells Declaration public Decimal Max() Returns Type Description System.Decimal The max value as a decimal. Min() Returns minimum value of all numeric cells within this range. Declaration public Decimal Min() Returns Type Description System.Decimal The min value as a decimal. Replace(String, String) Textual and numeric Find and Replace. Replaces all found occurrences of \"oldValue\" with the \"newValue\". Works with all string and numeric values. Declaration public void Replace(string oldValue, string newValue) Parameters Type Name Description System.String oldValue The string to find. System.String newValue The string to replace oldValue with. Row(Int32) Get a row by index Declaration protected IRangeRow Row(int index) Parameters Type Name Description System.Int32 index The zero based row index. Returns Type Description IRangeRow SetCellValue(Int32, Int32, Object) Set a single cell value using its row and column indexes. Declaration public void SetCellValue(int row, int column, object value) Parameters Type Name Description System.Int32 row Row number within this Range . The first Column is numbered 0. System.Int32 column Column number within this Range . The first row is numbered 0. System.Object value Value for the cell. SortAscending() Sort current range in ascending order. This updates the cell positions within your WorkSheets. Declaration public IRange SortAscending() Returns Type Description IRange This Range, allowing for a fluent code style. SortDescending() Sort current range in descending order. This updates the cell positions within your WorkSheets. Declaration public IRange SortDescending() Returns Type Description IRange This Range, allowing for a fluent code style. SubtractRange(IRange) Subtracts a range from the current. Result is first range without intersection of two ranges. Declaration public virtual IRange SubtractRange(IRange range) Parameters Type Name Description IRange range The range to remove from the current working range. Returns Type Description IRange This Range allowing a fluent coding style. Sum() Returns sum of all numeric cells . Declaration public Decimal Sum() Returns Type Description System.Decimal The sum value as a decimal. ToDataTable(Boolean) Get System.Data.DataTable representation of current range. Useful when working with DataGrids or System.Data or Entity Framework Declaration public DataTable ToDataTable(bool useFirstRowAsColumnNames = false) Parameters Type Name Description System.Boolean useFirstRowAsColumnNames Indicates whether to use first row as column names or not Returns Type Description System.Data.DataTable A System.Data.DataTable representation of current range. ToString() Returns the StringValue of this Range. Declaration public override string ToString() Returns Type Description System.String A System.String that represents this instance. Trim() Removes all empty rows and columns on the range borders. Declaration public IRange Trim() Returns Type Description IRange This Range, allowing for a fluent code style. TryGetValue<TType>(out TType) Method for safely getting a range's total value. If range contains one cell then method calls GetValue<TType>() of this cell If range contains more than one cell then method tries to cast Sum() of all numeric cells within range to TType Use Try/Catch to avoid possible exceptions from this method if cell content types are inconsistent or contain formula errors. Declaration public bool TryGetValue<TType>(out TType value) Parameters Type Name Description TType value The sum value of the range, expressed as TType. Returns Type Description System.Boolean true if the range's content could be cast to TType. Type Parameters Name Description TType The .net type to which the cell's value will be cast. Exceptions Type Condition System.ArgumentException Range value cannot be casted to {type.Name} Operators Addition(Range, Range) Overloaded + operator, see also AddRange(IRange) for IRange interface Declaration public static Range operator +(Range a, Range b) Parameters Type Name Description Range a This Range. Range b Another Range. Both Ranges will be joined in the result. Returns Type Description Range The combination of both ranges' areas. Subtraction(Range, Range) Overloaded - operator, see also SubtractRange(IRange) for IRange interface Declaration public static Range operator -(Range a, Range b) Parameters Type Name Description Range a This Range. Range b Another Range which will be subtracted from the first range. Returns Type Description Range All cells in your Range, with any cells in the second Range removed. Implements IRange System.Collections.Generic.IEnumerable<> System.Collections.IEnumerable IStylable"
  },
  "api/IronXL.Ranges.RangeAddress.html": {
    "href": "api/IronXL.Ranges.RangeAddress.html",
    "title": "Class RangeAddress | C# Excel API | IronXL",
    "keywords": "Class RangeAddress Class that represents address of the range. Inheritance System.Object RangeAddress Namespace : IronXL.Ranges Assembly : IronXL.dll Syntax public class RangeAddress : Object Properties ColumnsCount Amount of columns within this address. Declaration public int ColumnsCount { get; } Property Value Type Description System.Int32 FirstColumn Index of the first column within this address. Declaration public int FirstColumn { get; } Property Value Type Description System.Int32 FirstRow Index of the first row within this address. Declaration public int FirstRow { get; } Property Value Type Description System.Int32 LastColumn Index of the last column within this address. Declaration public int LastColumn { get; } Property Value Type Description System.Int32 LastRow Index of the last row within this address. Declaration public int LastRow { get; } Property Value Type Description System.Int32 RowsCount Amount of rows within this address. Declaration public int RowsCount { get; } Property Value Type Description System.Int32 Methods Includes(Int32, Int32) Check whether this range address contains target cell. Declaration public bool Includes(int row, int col) Parameters Type Name Description System.Int32 row The row of the cell. zero based. System.Int32 col The column of the cell. zero based. E.g. column A is 0 Returns Type Description System.Boolean true if that specified cell falls within this RangeAddress"
  },
  "api/IronXL.Ranges.RangeColumn.html": {
    "href": "api/IronXL.Ranges.RangeColumn.html",
    "title": "Class RangeColumn | C# Excel API | IronXL",
    "keywords": "Class RangeColumn Basic implementation of IRangeColumn interface. Inheritance System.Object Range RangeColumn Implements IRangeColumn IRange System.Collections.Generic.IEnumerable < ICell > System.Collections.IEnumerable IStylable Inherited Members Range.GetEnumerator() Range.Sum() Range.Max() Range.Min() Range.Avg() Range.SortAscending() Range.SortDescending() Range.Trim() Range.ToDataTable(Boolean) Range.SetCellValue(Int32, Int32, Object) Range.GetValue<TType>() Range.TryGetValue<TType>(TType) Range.ToString() Range.Copy(WorkSheet, String) Range.Replace(String, String) Range.GetAllRows() Range.GetAllColumns() Range.Row(Int32) Range.Column(Int32) Range.RangeAddressAsString Range.IsEmpty Range.Value Range.Rows Range.Columns Range.Style Range.WorkBook Range.DateTimeValue Range.StringValue Range.BoolValue Range.IntValue Range.DoubleValue Range.DecimalValue Range.FloatValue Range.Int64Value Range.LongValue Range.Int32Value Namespace : IronXL.Ranges Assembly : IronXL.dll Syntax public class RangeColumn : Range, IRangeColumn, IRange, IStylable Properties Hidden Gets or sets a value indicating whether this column is hidden. Declaration public bool Hidden { get; set; } Property Value Type Description System.Boolean RangeAddress Address of the column. Declaration public RangeAddress RangeAddress { get; } Property Value Type Description RangeAddress Width Gets or sets the width of the column. Declaration public int Width { get; set; } Property Value Type Description System.Int32 Methods AddRange(IRange) Add range to the current column if they can be combined. Declaration public override IRange AddRange(IRange range) Parameters Type Name Description IRange range The range to add to the current working range. Returns Type Description IRange This Range allowing a fluent coding style. Overrides Range.AddRange(IRange) Exceptions Type Condition System.InvalidOperationException This range cannot be added to the current column because they are not on the same line or cannot be combined in one column SubtractRange(IRange) Subtract range from the current column if it can be subtracted. Declaration public override IRange SubtractRange(IRange range) Parameters Type Name Description IRange range The range to remove from the current working range. Returns Type Description IRange This Range allowing a fluent coding style. Overrides Range.SubtractRange(IRange) Exceptions Type Condition System.InvalidOperationException This range cannot be subtracted from the current column because result column isn't continuous Implements IRangeColumn IRange System.Collections.Generic.IEnumerable<> System.Collections.IEnumerable IStylable Inherited members GetEnumerator() Sum() Max() Min() Avg() SortAscending() SortDescending() Trim() ToDataTable(Boolean) SetCellValue(Int32, Int32, Object) GetValue<TType>() TryGetValue<TType>(TType) ToString() Copy(WorkSheet, String) Replace(String, String) GetAllRows() GetAllColumns() Row(Int32) Column(Int32) RangeAddressAsString IsEmpty Value Rows Columns Style WorkBook DateTimeValue StringValue BoolValue IntValue DoubleValue DecimalValue FloatValue Int64Value LongValue Int32Value"
  },
  "api/IronXL.Ranges.RangeRow.html": {
    "href": "api/IronXL.Ranges.RangeRow.html",
    "title": "Class RangeRow | C# Excel API | IronXL",
    "keywords": "Class RangeRow Basic implementation of IRangeRow interface. Inheritance System.Object Range RangeRow Implements IRangeRow IRange System.Collections.Generic.IEnumerable < ICell > System.Collections.IEnumerable IStylable Inherited Members Range.GetEnumerator() Range.Sum() Range.Max() Range.Min() Range.Avg() Range.SortAscending() Range.SortDescending() Range.Trim() Range.ToDataTable(Boolean) Range.SetCellValue(Int32, Int32, Object) Range.GetValue<TType>() Range.TryGetValue<TType>(TType) Range.ToString() Range.Copy(WorkSheet, String) Range.Replace(String, String) Range.GetAllRows() Range.GetAllColumns() Range.Row(Int32) Range.Column(Int32) Range.RangeAddressAsString Range.IsEmpty Range.Value Range.Rows Range.Columns Range.Style Range.WorkBook Range.DateTimeValue Range.StringValue Range.BoolValue Range.IntValue Range.DoubleValue Range.DecimalValue Range.FloatValue Range.Int64Value Range.LongValue Range.Int32Value Namespace : IronXL.Ranges Assembly : IronXL.dll Syntax public class RangeRow : Range, IRangeRow, IRange, IStylable Properties Height Gets or sets the height of the row. Declaration public int Height { get; set; } Property Value Type Description System.Int32 Hidden Gets or sets a value indicating whether this row is hidden. Declaration public bool Hidden { get; set; } Property Value Type Description System.Boolean RangeAddress Address of the row. Declaration public RangeAddress RangeAddress { get; } Property Value Type Description RangeAddress Methods AddRange(IRange) Add range to the current row if they can be combined. Declaration public override IRange AddRange(IRange range) Parameters Type Name Description IRange range The range to add to the current working range. Returns Type Description IRange This Range allowing a fluent coding style. Overrides Range.AddRange(IRange) Exceptions Type Condition System.InvalidOperationException This range cannot be added to the current row because they are not on the same line or cannot be combined in one row SubtractRange(IRange) Subtract range from the current row if it can be subtracted Declaration public override IRange SubtractRange(IRange range) Parameters Type Name Description IRange range The range to remove from the current working range. Returns Type Description IRange This Range allowing a fluent coding style. Overrides Range.SubtractRange(IRange) Exceptions Type Condition System.InvalidOperationException This range cannot be subtracted from the current row because result row isn't continuous Implements IRangeRow IRange System.Collections.Generic.IEnumerable<> System.Collections.IEnumerable IStylable Inherited members GetEnumerator() Sum() Max() Min() Avg() SortAscending() SortDescending() Trim() ToDataTable(Boolean) SetCellValue(Int32, Int32, Object) GetValue<TType>() TryGetValue<TType>(TType) ToString() Copy(WorkSheet, String) Replace(String, String) GetAllRows() GetAllColumns() Row(Int32) Column(Int32) RangeAddressAsString IsEmpty Value Rows Columns Style WorkBook DateTimeValue StringValue BoolValue IntValue DoubleValue DecimalValue FloatValue Int64Value LongValue Int32Value"
  },
  "api/IronXL.Styles.BorderType.html": {
    "href": "api/IronXL.Styles.BorderType.html",
    "title": "Class BorderType | C# Excel API | IronXL",
    "keywords": "Class BorderType The enumeration value indicating the line style of a border in a cell Inheritance System.Object BorderType Namespace : IronXL.Styles Assembly : IronXL.dll Syntax public sealed class BorderType : Enum Fields DashDot dash-dot border Declaration public const BorderType DashDot Field Value Type Description BorderType DashDotDot dash-dot-dot border Declaration public const BorderType DashDotDot Field Value Type Description BorderType Dashed dash border Declaration public const BorderType Dashed Field Value Type Description BorderType Dotted dot border Declaration public const BorderType Dotted Field Value Type Description BorderType Double double-line border Declaration public const BorderType Double Field Value Type Description BorderType Hair hair-line border Declaration public const BorderType Hair Field Value Type Description BorderType Medium Medium border Declaration public const BorderType Medium Field Value Type Description BorderType MediumDashDot medium dash-dot border Declaration public const BorderType MediumDashDot Field Value Type Description BorderType MediumDashDotDot medium dash-dot-dot border Declaration public const BorderType MediumDashDotDot Field Value Type Description BorderType MediumDashed Medium dashed border Declaration public const BorderType MediumDashed Field Value Type Description BorderType None No border Declaration public const BorderType None Field Value Type Description BorderType SlantedDashDot slanted dash-dot border Declaration public const BorderType SlantedDashDot Field Value Type Description BorderType Thick Thick border Declaration public const BorderType Thick Field Value Type Description BorderType Thin Thin border Declaration public const BorderType Thin Field Value Type Description BorderType value__ Declaration public short value__ Field Value Type Description System.Int16"
  },
  "api/IronXL.Styles.DiagonalBorderDirection.html": {
    "href": "api/IronXL.Styles.DiagonalBorderDirection.html",
    "title": "Class DiagonalBorderDirection | C# Excel API | IronXL",
    "keywords": "Class DiagonalBorderDirection Enum that stands for direction of diagonal border inside cell Inheritance System.Object DiagonalBorderDirection Namespace : IronXL.Styles Assembly : IronXL.dll Syntax public sealed class DiagonalBorderDirection : Enum Fields Backward Backward diagonal border, from left-top to right-bottom Declaration public const DiagonalBorderDirection Backward Field Value Type Description DiagonalBorderDirection Both Both forward and backward diagonal border Declaration public const DiagonalBorderDirection Both Field Value Type Description DiagonalBorderDirection Forward Forward diagonal border, from right-top to left-bottom Declaration public const DiagonalBorderDirection Forward Field Value Type Description DiagonalBorderDirection None No diagional border Declaration public const DiagonalBorderDirection None Field Value Type Description DiagonalBorderDirection value__ Declaration public short value__ Field Value Type Description System.Int16"
  },
  "api/IronXL.Styles.FillPattern.html": {
    "href": "api/IronXL.Styles.FillPattern.html",
    "title": "Class FillPattern | C# Excel API | IronXL",
    "keywords": "Class FillPattern The enumeration value indicating the style of fill pattern being used for a cell format. Inheritance System.Object FillPattern Namespace : IronXL.Styles Assembly : IronXL.dll Syntax public sealed class FillPattern : Enum Fields AltBars Wide dots Declaration public const FillPattern AltBars Field Value Type Description FillPattern BigSpots Large spots Declaration public const FillPattern BigSpots Field Value Type Description FillPattern Bricks Brick-like layout Declaration public const FillPattern Bricks Field Value Type Description FillPattern Diamonds Diamonds Declaration public const FillPattern Diamonds Field Value Type Description FillPattern FineDots Small fine dots Declaration public const FillPattern FineDots Field Value Type Description FillPattern LeastDots Least Dots Declaration public const FillPattern LeastDots Field Value Type Description FillPattern LessDots Less Dots Declaration public const FillPattern LessDots Field Value Type Description FillPattern NoFill No background Declaration public const FillPattern NoFill Field Value Type Description FillPattern SolidForeground Solidly Filled Declaration public const FillPattern SolidForeground Field Value Type Description FillPattern SparseDots Sparse dots Declaration public const FillPattern SparseDots Field Value Type Description FillPattern Squares Squares Declaration public const FillPattern Squares Field Value Type Description FillPattern ThickBackwardDiagonals Thick backward facing diagonals Declaration public const FillPattern ThickBackwardDiagonals Field Value Type Description FillPattern ThickForwardDiagonals Thick forward facing diagonals Declaration public const FillPattern ThickForwardDiagonals Field Value Type Description FillPattern ThickHorizontalBands Thick horizontal bands Declaration public const FillPattern ThickHorizontalBands Field Value Type Description FillPattern ThickVerticalBands Thick vertical bands Declaration public const FillPattern ThickVerticalBands Field Value Type Description FillPattern ThinBackwardDiagonals Thin backward diagonal Declaration public const FillPattern ThinBackwardDiagonals Field Value Type Description FillPattern ThinForwardDiagonals Thin forward diagonal Declaration public const FillPattern ThinForwardDiagonals Field Value Type Description FillPattern ThinHorizontalBands Thin horizontal bands Declaration public const FillPattern ThinHorizontalBands Field Value Type Description FillPattern ThinVerticalBands Thin vertical bands Declaration public const FillPattern ThinVerticalBands Field Value Type Description FillPattern value__ Declaration public short value__ Field Value Type Description System.Int16"
  },
  "api/IronXL.Styles.FontScript.html": {
    "href": "api/IronXL.Styles.FontScript.html",
    "title": "Class FontScript | C# Excel API | IronXL",
    "keywords": "Class FontScript Enum that stands for position of the symbol Inheritance System.Object FontScript Namespace : IronXL.Styles Assembly : IronXL.dll Syntax public sealed class FontScript : Enum Fields None Default symbol position Declaration public const FontScript None Field Value Type Description FontScript Sub Stands for position when symbol is at the bottom of the line Declaration public const FontScript Sub Field Value Type Description FontScript Super Stands for position when symbol is on the top of the line Declaration public const FontScript Super Field Value Type Description FontScript value__ Declaration public int value__ Field Value Type Description System.Int32"
  },
  "api/IronXL.Styles.FontUnderlineType.html": {
    "href": "api/IronXL.Styles.FontUnderlineType.html",
    "title": "Class FontUnderlineType | C# Excel API | IronXL",
    "keywords": "Class FontUnderlineType Enum that stands for different types of font underline Inheritance System.Object FontUnderlineType Namespace : IronXL.Styles Assembly : IronXL.dll Syntax public sealed class FontUnderlineType : Enum Fields Double A double underline Declaration public const FontUnderlineType Double Field Value Type Description FontUnderlineType DoubleAccounting An accounting style double underline Declaration public const FontUnderlineType DoubleAccounting Field Value Type Description FontUnderlineType None Not underlined Declaration public const FontUnderlineType None Field Value Type Description FontUnderlineType Single A single (normal) underline as used in word processing Declaration public const FontUnderlineType Single Field Value Type Description FontUnderlineType SingleAccounting An accounting style single underline Declaration public const FontUnderlineType SingleAccounting Field Value Type Description FontUnderlineType value__ Declaration public short value__ Field Value Type Description System.Int16"
  },
  "api/IronXL.Styles.HorizontalAlignment.html": {
    "href": "api/IronXL.Styles.HorizontalAlignment.html",
    "title": "Class HorizontalAlignment | C# Excel API | IronXL",
    "keywords": "Class HorizontalAlignment The enumeration value indicating horizontal alignment of a cell, I.e., whether it is aligned general, left, right, horizontally centered, Filled (replicated), justified, centered across multiple cells, or distributed. Inheritance System.Object HorizontalAlignment Namespace : IronXL.Styles Assembly : IronXL.dll Syntax public sealed class HorizontalAlignment : Enum Fields Center The horizontal alignment is centered, meaning the text is centered across the cell. Declaration public const HorizontalAlignment Center Field Value Type Description HorizontalAlignment CenterSelection The horizontal alignment is centered across multiple cells. The information about how many cells to span is expressed in the Sheet Part, in the row of the cell in question. For each cell that is spanned in the alignment, a cell element needs to be written out, with the same style Id which references the centerContinuous alignment. Declaration public const HorizontalAlignment CenterSelection Field Value Type Description HorizontalAlignment Distributed Indicates that each 'word' in each line of text inside the cell is evenly distributed across the width of the cell, with flush right and left margins. When there is also an indent value to apply, both the left and right side of the cell are pAdded by the indent value. A 'word' is a set of characters with no space character in them. Two lines inside a cell are Separated by a carriage return. Declaration public const HorizontalAlignment Distributed Field Value Type Description HorizontalAlignment Fill Indicates that the value of the cell should be Filled across the entire width of the cell. If blank cells to the right also have the fill alignment, they are also Filled with the value, using a convention similar to centerContinuous. Additional rules: Only whole values can be Appended, not partial values. The column will not be widened to 'best fit' the Filled value If Appending an Additional occurrence of the value exceeds the boundary of the cell left/right edge, don't append the Additional occurrence of the value. The display value of the cell is Filled, not the underlying raw number. Declaration public const HorizontalAlignment Fill Field Value Type Description HorizontalAlignment General The horizontal alignment is general-aligned. Text data is left-aligned. Numbers, dates, and times are right aligned. Boolean types are centered. Changing the alignment does not change the type of data. Declaration public const HorizontalAlignment General Field Value Type Description HorizontalAlignment Justify The horizontal alignment is justified (flush left and right). For each line of text, aligns each line of the wrapped text in a cell to the right and left (except the last line). If no single line of text wraps in the cell, then the text is not justified. Declaration public const HorizontalAlignment Justify Field Value Type Description HorizontalAlignment Left The horizontal alignment is left-aligned, even in Right-to-Left mode. Aligns contents at the left edge of the cell. If an indent amount is specified, the contents of the cell is indented from the left by the specified number of character spaces. The character spaces are based on the default font and font size for the workbook. Declaration public const HorizontalAlignment Left Field Value Type Description HorizontalAlignment Right The horizontal alignment is right-aligned, meaning that cell contents are aligned at the right edge of the cell, even in Right-to-Left mode. Declaration public const HorizontalAlignment Right Field Value Type Description HorizontalAlignment value__ Declaration public int value__ Field Value Type Description System.Int32"
  },
  "api/IronXL.Styles.html": {
    "href": "api/IronXL.Styles.html",
    "title": "Namespace IronXL.Styles | C# Excel API | IronXL",
    "keywords": "Namespace IronXL.Styles Classes BorderType The enumeration value indicating the line style of a border in a cell DiagonalBorderDirection Enum that stands for direction of diagonal border inside cell FillPattern The enumeration value indicating the style of fill pattern being used for a cell format. FontScript Enum that stands for position of the symbol FontUnderlineType Enum that stands for different types of font underline HorizontalAlignment The enumeration value indicating horizontal alignment of a cell, I.e., whether it is aligned general, left, right, horizontally centered, Filled (replicated), justified, centered across multiple cells, or distributed. VerticalAlignment This enumeration value indicates the type of vertical alignment for a cell, i.e., whether it is aligned top, bottom, vertically centered, justified or distributed. Interfaces IBorder Interface for cell border value IFont Interface for cell font value IStylable Interface for indicating that certain Excel unit has it's own style IStyle Interface for cell style"
  },
  "api/IronXL.Styles.IBorder.html": {
    "href": "api/IronXL.Styles.IBorder.html",
    "title": "Interface IBorder | C# Excel API | IronXL",
    "keywords": "Interface IBorder Interface for cell border value Namespace : IronXL.Styles Assembly : IronXL.dll Syntax public interface IBorder Properties Color Property that returns border color in rgb format. Declaration string Color { get; } Property Value Type Description System.String Type Gets or sets the type of the border line. See BorderType Declaration BorderType Type { get; set; } Property Value Type Description BorderType Methods SetColor(Color) Method for setting border color with System.Drawing.Color value Declaration void SetColor(Color color) Parameters Type Name Description System.Drawing.Color color Color value SetColor(String) Method for setting border color with the rgb string. Declaration void SetColor(string rgb) Parameters Type Name Description System.String rgb Color rgb value"
  },
  "api/IronXL.Styles.IFont.html": {
    "href": "api/IronXL.Styles.IFont.html",
    "title": "Interface IFont | C# Excel API | IronXL",
    "keywords": "Interface IFont Interface for cell font value Namespace : IronXL.Styles Assembly : IronXL.dll Syntax public interface IFont Properties Bold Property that indicates if cell font is bold Declaration bool Bold { get; set; } Property Value Type Description System.Boolean Color Property that returns font color in rgb format. Declaration string Color { get; } Property Value Type Description System.String FontScript Gets or sets script property of font. Also take a look at FontScript to get list of available options Declaration FontScript FontScript { get; set; } Property Value Type Description FontScript Height Gets or sets font size in px Declaration short Height { get; set; } Property Value Type Description System.Int16 Italic Property that indicates if cell font is italic Declaration bool Italic { get; set; } Property Value Type Description System.Boolean Name Gets or sets font name Declaration string Name { get; set; } Property Value Type Description System.String Strikeout Get whether to use a strikeout horizontal line through the text or not Declaration bool Strikeout { get; set; } Property Value Type Description System.Boolean Underline Gets or sets underline property of font. Also take a look at FontUnderlineType to get list of available options Declaration FontUnderlineType Underline { get; set; } Property Value Type Description FontUnderlineType Methods SetColor(Color) Method for setting font color with System.Drawing.Color value Declaration void SetColor(Color color) Parameters Type Name Description System.Drawing.Color color Color value SetColor(String) Method for setting font color with the rgb string. Declaration void SetColor(string rgb) Parameters Type Name Description System.String rgb Color rgb value"
  },
  "api/IronXL.Styles.IStylable.html": {
    "href": "api/IronXL.Styles.IStylable.html",
    "title": "Interface IStylable | C# Excel API | IronXL",
    "keywords": "Interface IStylable Interface for indicating that certain Excel unit has it's own style Namespace : IronXL.Styles Assembly : IronXL.dll Syntax public interface IStylable Properties Style Cell style Declaration IStyle Style { get; } Property Value Type Description IStyle"
  },
  "api/IronXL.Styles.IStyle.html": {
    "href": "api/IronXL.Styles.IStyle.html",
    "title": "Interface IStyle | C# Excel API | IronXL",
    "keywords": "Interface IStyle Interface for cell style Namespace : IronXL.Styles Assembly : IronXL.dll Syntax public interface IStyle Properties BackgroundColor Gets the color of the background in rgb format. E.g. #ffffff Declaration string BackgroundColor { get; } Property Value Type Description System.String BottomBorder Property that represents cell bottom border Declaration IBorder BottomBorder { get; } Property Value Type Description IBorder DiagonalBorder Property that represents cell diagonal border Declaration IBorder DiagonalBorder { get; } Property Value Type Description IBorder DiagonalBorderDirection Gets or sets the diagonal border direction value. Declaration DiagonalBorderDirection DiagonalBorderDirection { get; set; } Property Value Type Description DiagonalBorderDirection FillPattern Gets or sets fill pattern of the cell. Declaration FillPattern FillPattern { get; set; } Property Value Type Description FillPattern Font Property that represents cell font value Declaration IFont Font { get; } Property Value Type Description IFont HorizontalAlignment Gets or sets the horizontal alignment of the cell. Declaration HorizontalAlignment HorizontalAlignment { get; set; } Property Value Type Description HorizontalAlignment Indention Get the number of spaces to indent the text in the cell Declaration short Indention { get; set; } Property Value Type Description System.Int16 LeftBorder Property that represents cell left border Declaration IBorder LeftBorder { get; } Property Value Type Description IBorder RightBorder Property that represents cell right border Declaration IBorder RightBorder { get; } Property Value Type Description IBorder Rotation Get the degree of rotation (between -90 and 90 degrees) for the text in the cell Declaration short Rotation { get; set; } Property Value Type Description System.Int16 ShrinkToFit Gets or sets a value indicating whether the cell should be auto-sized to shrink to fit if the text is too long Declaration bool ShrinkToFit { get; set; } Property Value Type Description System.Boolean TopBorder Property that represents cell top border Declaration IBorder TopBorder { get; } Property Value Type Description IBorder VerticalAlignment Gets or sets the vertical alignment of the cell. Declaration VerticalAlignment VerticalAlignment { get; set; } Property Value Type Description VerticalAlignment WrapText Bool property that indicates if text is wrapped Declaration bool WrapText { get; set; } Property Value Type Description System.Boolean Methods SetBackgroundColor(Color) Method for setting cell background color with System.Drawing.Color value Declaration void SetBackgroundColor(Color color) Parameters Type Name Description System.Drawing.Color color Color value SetBackgroundColor(String) Method for setting cell background color with an rgb string. Declaration void SetBackgroundColor(string rgb) Parameters Type Name Description System.String rgb Color RGB value"
  },
  "api/IronXL.Styles.VerticalAlignment.html": {
    "href": "api/IronXL.Styles.VerticalAlignment.html",
    "title": "Class VerticalAlignment | C# Excel API | IronXL",
    "keywords": "Class VerticalAlignment This enumeration value indicates the type of vertical alignment for a cell, i.e., whether it is aligned top, bottom, vertically centered, justified or distributed. Inheritance System.Object VerticalAlignment Namespace : IronXL.Styles Assembly : IronXL.dll Syntax public sealed class VerticalAlignment : Enum Fields Bottom The vertical alignment is aligned-to-bottom. Declaration public const VerticalAlignment Bottom Field Value Type Description VerticalAlignment Center The vertical alignment is centered across the height of the cell. Declaration public const VerticalAlignment Center Field Value Type Description VerticalAlignment Distributed When text direction is horizontal: the vertical alignment of lines of text is distributed vertically, where each line of text inside the cell is evenly distributed across the height of the cell, with flush top When text direction is vertical: behaves exactly as distributed horizontal alignment. The first words in a line of text (appearing at the top of the cell) are flush with the top edge of the cell, and the last words of a line of text are flush with the bottom edge of the cell, and the line of text is distributed evenly from top to bottom. Declaration public const VerticalAlignment Distributed Field Value Type Description VerticalAlignment Justify When text direction is horizontal: the vertical alignment of lines of text is distributed vertically, where each line of text inside the cell is evenly distributed across the height of the cell, with flush top and bottom margins. When text direction is vertical: similar behavior as horizontal justification. The alignment is justified (flush top and bottom in this case). For each line of text, each line of the wrapped text in a cell is aligned to the top and bottom (except the last line). If no single line of text wraps in the cell, then the text is not justified. Declaration public const VerticalAlignment Justify Field Value Type Description VerticalAlignment None The alignment is default Declaration public const VerticalAlignment None Field Value Type Description VerticalAlignment Top The vertical alignment is aligned-to-top. Declaration public const VerticalAlignment Top Field Value Type Description VerticalAlignment value__ Declaration public int value__ Field Value Type Description System.Int32"
  },
  "api/IronXL.WorkBook.html": {
    "href": "api/IronXL.WorkBook.html",
    "title": "Class WorkBook | C# Excel API | IronXL",
    "keywords": "Class WorkBook Class that stands for a whole Excel file. This is the first object most users will construct whether they are reading or writing a workbook. It is also the top level (home-base) object for creating new sheets and most other Excel programing operations. Inheritance System.Object WorkBook Namespace : IronXL Assembly : IronXL.dll Syntax public class WorkBook : Object Constructors WorkBook(ExcelFileFormat) Initializes a new instance of the WorkBook class as a new empty spreadsheet in XLS or XLSX format. /// Declaration public WorkBook(ExcelFileFormat fileFormat) Parameters Type Name Description ExcelFileFormat fileFormat The excel file format. XLS (legacy) or XLSX (preferred). See Also Create() WorkBook(String) Loads a new instance of the WorkBook by loading a CSV, TSV, XLS or XLSX file. Declaration public WorkBook(string spreadSheetFilePath) Parameters Type Name Description System.String spreadSheetFilePath The spread sheet file path to load into IronXL. Properties DefaultWorkSheet First worksheet within this range Declaration public WorkSheet DefaultWorkSheet { get; } Property Value Type Description WorkSheet Metadata Gets the metadata of the document. Declaration public IMetadata Metadata { get; } Property Value Type Description IMetadata WorkSheets List of worksheets within current workbook Declaration public List<WorkSheet> WorkSheets { get; } Property Value Type Description System.Collections.Generic.List < WorkSheet > Methods Create() Create new XLSX Excel WorkBook . Declaration public static WorkBook Create() Returns Type Description WorkBook A new WorkBook Create(ExcelFileFormat) Create new workbook with the specified format. Declaration public static WorkBook Create(ExcelFileFormat fileFormat) Parameters Type Name Description ExcelFileFormat fileFormat The excel file format. XLSX or XLS Returns Type Description WorkBook A new WorkBook Create(CreatingOptions) Create new workbook with the specified options. Declaration public static WorkBook Create(CreatingOptions options) Parameters Type Name Description CreatingOptions options Advanced workbook creation options object. Returns Type Description WorkBook A new WorkBook Exceptions Type Condition System.Exception CreateWorkSheet(String) Create new worksheet with the specified name Declaration public WorkSheet CreateWorkSheet(string name) Parameters Type Name Description System.String name The name of the new worksheet. Returns Type Description WorkSheet A new WorkSheet within this WorkBook . GetWorkSheet(String) Returns a WorkSheet within this WorkBook ; identified by its name. Returns null if the named worksheet would not be found. Declaration public WorkSheet GetWorkSheet(string workSheetName) Parameters Type Name Description System.String workSheetName Name of the work sheet to select. Returns Type Description WorkSheet The specified WorkSheet . Returns null if the named worksheet would not be found. Import(String, ExcelFileFormat) Imports and creates a new workbook from specified CSV, TSV, JSON or XML file. Declaration public static WorkBook Import(string filename, ExcelFileFormat fileFormat) Parameters Type Name Description System.String filename The path of the file to import. ExcelFileFormat fileFormat The excel file format to generate with the imported data. XLS or XLSX. XLSX is preferred and default. Returns Type Description WorkBook The loaded spreadsheet as a WorkBook . Load(String) Load workbook from specified file. Shortcut synonym for LoadExcel(String) Declaration public static WorkBook Load(string filename) Parameters Type Name Description System.String filename The pat of the file to load. Returns Type Description WorkBook A new WorkBook Load(String, LoadingOptions) Load workbook from a specified file. Supported formats are: XLS, XLSX, CSV, TSV, JSON, XML. Declaration public static WorkBook Load(string filename, LoadingOptions options) Parameters Type Name Description System.String filename The path of the file to load. LoadingOptions options Advanced options when importing non Excel formats. Returns Type Description WorkBook An Excel WorkBook object. Exceptions Type Condition System.Exception A general exception with a detailed developer message. System.FormatException Unsupported file extension. Supported formats are: XLS, XLSX, CSV, TSV. LoadCSV(String, ExcelFileFormat, String) Imports and creates a new workbook from specified CSV or TSV file. Declaration public static WorkBook LoadCSV(string filename, ExcelFileFormat fileFormat, string ListDelimiter = null) Parameters Type Name Description System.String filename The path of the file to import. ExcelFileFormat fileFormat The excel file format to generate with the imported data. XLS or XLSX. XLSX is preferred and default. System.String ListDelimiter The column list delimiter. Default (null) will refer to the system default settings. Returns Type Description WorkBook The imported spreadsheet as a WorkBook object LoadExcel(String) Load workbook from specified file. Declaration public static WorkBook LoadExcel(string filename) Parameters Type Name Description System.String filename The pat of the file to load. Returns Type Description WorkBook A new WorkBook SaveAs(String) Save workbook with the specified filename. Supported formats are: XLS, XLSX, CSV, TSV, JSON, XML Declaration public WorkBook SaveAs(string fileName) Parameters Type Name Description System.String fileName A file path to save the spreadsheet to. Returns Type Description WorkBook This WorkBook, allowing for a fluent, in-line coding style. SaveAs(String, SavingOptions) Save workbook with the specified filename. Supported formats are: XLS, XLSX, CSV, TSV, JSON, XML Declaration public WorkBook SaveAs(string fileName, SavingOptions options) Parameters Type Name Description System.String fileName A file path to save the spreadsheet to. SavingOptions options Advanced file saving options. Returns Type Description WorkBook This WorkBook, allowing for a fluent, in-line coding style. Exceptions Type Condition System.FormatException Unsupported file extension. Supported formats are: XLS, XLSX, CSV, TSV, JSON, XML SaveAsCsv(String, String) Exports the Excel file as CSV. Declaration public void SaveAsCsv(string filename, string delimiter = null) Parameters Type Name Description System.String filename The CSV file path. System.String delimiter The CSV column delimiter. Leave this null to use the system default. SaveAsJson(String) Exports the Excel file as JSON. Declaration public void SaveAsJson(string filename) Parameters Type Name Description System.String filename The JSON file path. SaveAsXml(String) Exports the Excel file as XML. Declaration public void SaveAsXml(string filename) Parameters Type Name Description System.String filename The XML file path. ToDataSet(Boolean) Export workbook to a native System.Data System.Data.DataSet . Each worksheet represents a System.Data.DataTable within the System.Data.DataSet . Useful when moving data between Excel and SQL. Declaration public DataSet ToDataSet(bool useFirstRowAsColumnNames = false) Parameters Type Name Description System.Boolean useFirstRowAsColumnNames if set to true [use first row as column names]. Returns Type Description System.Data.DataSet A System.Data.DataSet containing the entire WorkBook."
  },
  "api/IronXL.WorkSheet.html": {
    "href": "api/IronXL.WorkSheet.html",
    "title": "Class WorkSheet | C# Excel API | IronXL",
    "keywords": "Class WorkSheet Class that stands for single sheet within Excel file. Inheritance System.Object Range WorkSheet Implements IRange System.Collections.Generic.IEnumerable < ICell > System.Collections.IEnumerable IStylable Inherited Members Range.GetEnumerator() Range.Sum() Range.Max() Range.Min() Range.Avg() Range.AddRange(IRange) Range.SubtractRange(IRange) Range.SortAscending() Range.SortDescending() Range.Trim() Range.ToDataTable(Boolean) Range.SetCellValue(Int32, Int32, Object) Range.GetValue<TType>() Range.TryGetValue<TType>(TType) Range.ToString() Range.Copy(WorkSheet, String) Range.Replace(String, String) Range.GetAllRows() Range.GetAllColumns() Range.Row(Int32) Range.Column(Int32) Range.RangeAddressAsString Range.IsEmpty Range.Value Range.Rows Range.Columns Range.Style Range.WorkBook Range.DateTimeValue Range.StringValue Range.BoolValue Range.IntValue Range.DoubleValue Range.DecimalValue Range.FloatValue Range.Int64Value Range.LongValue Range.Int32Value Namespace : IronXL Assembly : IronXL.dll Syntax public class WorkSheet : Range, IRange, IStylable Properties DisplayGridlines Gets or sets a value indicating whether to display grid-lines. Declaration public bool DisplayGridlines { get; set; } Property Value Type Description System.Boolean true if the sheet displays grid-lines; otherwise, false . FitToPage Flag indicating whether the Fit to Page print option is enabled. Declaration public bool FitToPage { get; set; } Property Value Type Description System.Boolean Footer Gets the print footer of the worksheet. Declaration public IFooter Footer { get; } Property Value Type Description IFooter The Footer . Header Gets the print header of the worksheet. Declaration public IHeader Header { get; } Property Value Type Description IHeader The Header . HorizontallyCenter Determine whether printed output for this sheet will be horizontally centered. Declaration public bool HorizontallyCenter { get; set; } Property Value Type Description System.Boolean Images A list of images contained within the sheet. Declaration public List<IImage> Images { get; } Property Value Type Description System.Collections.Generic.List < IImage > IsPrintGridlines Gets or sets a value indicating whether to display grid-lines when printing. Declaration public bool IsPrintGridlines { get; set; } Property Value Type Description System.Boolean true if this sheet displays print grid-lines; otherwise, false . Item[String] Indexer for getting range with specified range address. <para.>Range MyRange = workSheet[\"A12:B18\"]</para.> Declaration public Range this[string rangeAddress] { get; } Parameters Type Name Description System.String rangeAddress E.g. A12:B18 Property Value Type Description Range The Range . Name Worksheet name Declaration public string Name { get; set; } Property Value Type Description System.String PrintSetup Gets the print setup object. Declaration public IPrintSetup PrintSetup { get; } Property Value Type Description IPrintSetup The PrintSetup for this WorkSheet. VerticallyCenter Determine whether printed output for this sheet will be vertically centered. Declaration public bool VerticallyCenter { get; set; } Property Value Type Description System.Boolean true if the sheet is vertically centered; otherwise, false . Methods CopySheet(String) Duplicates this WorkSheet within the same excel WorkBook . Declaration public WorkSheet CopySheet(string name) Parameters Type Name Description System.String name The name of the new WorkSheet Returns Type Description WorkSheet This WorkSheet allowing for a fluent, in-line coding style. Exceptions Type Condition System.ArgumentException Duplicate sheet names are not allowed. CopyTo(WorkBook, String) Copies worksheet to another workbook with the specified name. Declaration public void CopyTo(WorkBook workBook, string name) Parameters Type Name Description WorkBook workBook The WorkBook where this worksheet will be copied to. System.String name The new name of the copied worksheet. Exceptions Type Condition System.ArgumentException Duplicate sheet names are not allowed. CreateFreezePane(Int32, Int32) Creates a freeze pane. Any existing freeze pane or split pane is overwritten. Declaration public void CreateFreezePane(int colSplit, int rowSplit) Parameters Type Name Description System.Int32 colSplit Horizontal position of split. System.Int32 rowSplit Vertical position of split. CreateFreezePane(Int32, Int32, Int32, Int32) Creates a freeze pane. Any existing freeze pane or split pane is overwritten. Declaration public void CreateFreezePane(int colSplit, int rowSplit, int leftmostColumn, int topRow) Parameters Type Name Description System.Int32 colSplit Horizontal position of split. System.Int32 rowSplit Vertical position of split. System.Int32 leftmostColumn Top row visible in bottom pane System.Int32 topRow Left column visible in right pane. CreateSplitPane(Int32, Int32, Int32, Int32, PanePosition) Creates a split pane. Any existing freeze pane or split pane is overwritten. Declaration public void CreateSplitPane(int xSplitPos, int ySplitPos, int leftmostColumn, int topRow, PanePosition activePane) Parameters Type Name Description System.Int32 xSplitPos Horizontal position of split in px. System.Int32 ySplitPos Vertical position of split in px. System.Int32 leftmostColumn Left column visible in right pane. System.Int32 topRow Top row visible in bottom pane. PanePosition activePane Active pane. GetRange(String) Get range with specified range address E.g. Range myRange = mySheet.GetRange(\"A1:C62\") Declaration public Range GetRange(string range) Parameters Type Name Description System.String range The range address within the sheet. E.g. \"B12:B29\" Returns Type Description Range The specified Range InsertImage(String, Int32, Int32, Int32, Int32) Inserts image from the specified path to the worksheet. The size of the picture is defined by col/row coordinates. Declaration public IImage InsertImage(string path, int col1, int row1, int col2, int row2) Parameters Type Name Description System.String path The path to the image file. System.Int32 col1 The left column to place the image. System.Int32 row1 The top row to place the image. System.Int32 col2 The right column to place the image. System.Int32 row2 The bottom row to place the image. Returns Type Description IImage The inserted IronXL.Drawing.Images.Image object. Exceptions Type Condition System.ArgumentException Unsupported image format. Supported formats are: JPG/JPEG, BMP, PNG, GIF, TIFF Merge(String) Merges the specified range into a single cell. Declaration public int Merge(string range) Parameters Type Name Description System.String range The Excel range selector as a string. E.g. \"B1:C1\" Returns Type Description System.Int32 Index of the created merged region. See Unmerge(Int32) . RemoveImage(Int32) Removes the image by its id. Id can be retrieved from the IImage object Declaration public void RemoveImage(int id) Parameters Type Name Description System.Int32 id The image id [identifier]. RemovePane() Removes the freeze or the split pane. Declaration public void RemovePane() SaveAs(String) Exports the worksheet with as a new worksheet to: CSV, TSV, JSON, Excel or XML Declaration public WorkSheet SaveAs(string filename) Parameters Type Name Description System.String filename The new filename. Export format will be detected by the file extension specified. Returns Type Description WorkSheet This WorkSheet, allowing for an in-line fluent coding style. Exceptions Type Condition System.FormatException Unsupported extension. Supported formats for worksheet are: CSV, TSV, JSON, XML SaveAsCsv(String, String) Saves the worksheet into a new CSV file. Declaration public void SaveAsCsv(string filename, string delimiter = null) Parameters Type Name Description System.String filename The new CSV filename. System.String delimiter The CSV column delimiter. leave this null for default system behavior. SaveAsJson(String) Saves the worksheet into a new JSON file. Declaration public void SaveAsJson(string filename) Parameters Type Name Description System.String filename The new JSON filename. SaveAsNewExcelFile(String, ExcelFileFormat) Saves the worksheet into a new excel file on disk. Declaration public void SaveAsNewExcelFile(string filename, ExcelFileFormat excelFormat) Parameters Type Name Description System.String filename The new Excel filename. ExcelFileFormat excelFormat The Excel format. XLSX is preferred and default. SaveAsXml(String) Saves the worksheet into a new XML file. Declaration public void SaveAsXml(string filename) Parameters Type Name Description System.String filename The new XML filename. SetPrintArea(String) Sets the print area for this worksheet. E.g. \"A1:X82\" Declaration public void SetPrintArea(string range) Parameters Type Name Description System.String range The cell range to specify as the print area. E.g. \"A1:X82\" SetZoom(Int32) Sets the zoom scale for this worksheet. 100 is normal zoom. Declaration public void SetZoom(int scale) Parameters Type Name Description System.Int32 scale The scale percentage. 100 is normal zoom. ToArray() Converts the worksheet to flattened array of cells. Declaration public ICell[] ToArray() Returns Type Description ICell [] An array of Cell objects. ToMultiDimensionalArray() Convert worksheet to two-dimensional array of cells Declaration public ICell[][] ToMultiDimensionalArray() Returns Type Description ICell [][] An 2 dimensional array of Cell objects. Unmerge(Int32) Un-Merges the specified merge region by index. To learn about indexes, see Merge(String) . Declaration public void Unmerge(int index) Parameters Type Name Description System.Int32 index The index. To learn about indexes see Merge(String) Unmerge(String) Un-Merges a specified range of cells. Declaration public void Unmerge(string range) Parameters Type Name Description System.String range The Excel range selector for the merged region as a string. E.g. \"B1:C1\" Exceptions Type Condition System.ArgumentException Merged region was not found. Implements IRange System.Collections.Generic.IEnumerable<> System.Collections.IEnumerable IStylable Inherited members GetEnumerator() Sum() Max() Min() Avg() AddRange(IRange) SubtractRange(IRange) SortAscending() SortDescending() Trim() ToDataTable(Boolean) SetCellValue(Int32, Int32, Object) GetValue<TType>() TryGetValue<TType>(TType) ToString() Copy(WorkSheet, String) Replace(String, String) GetAllRows() GetAllColumns() Row(Int32) Column(Int32) RangeAddressAsString IsEmpty Value Rows Columns Style WorkBook DateTimeValue StringValue BoolValue IntValue DoubleValue DecimalValue FloatValue Int64Value LongValue Int32Value"
  },
  "api/NPOI.OpenXmlFormats.CT_AdditionalCharacteristics.html": {
    "href": "api/NPOI.OpenXmlFormats.CT_AdditionalCharacteristics.html",
    "title": "Class CT_AdditionalCharacteristics | C# Excel API | IronXL",
    "keywords": "Class CT_AdditionalCharacteristics Inheritance System.Object CT_AdditionalCharacteristics Namespace : NPOI.OpenXmlFormats Assembly : IronXL.dll Syntax public class CT_AdditionalCharacteristics : Object Constructors CT_AdditionalCharacteristics() Declaration public CT_AdditionalCharacteristics() Properties characteristic Declaration public List<CT_Characteristic> characteristic { get; set; } Property Value Type Description System.Collections.Generic.List < CT_Characteristic >"
  },
  "api/NPOI.OpenXmlFormats.CT_Array.html": {
    "href": "api/NPOI.OpenXmlFormats.CT_Array.html",
    "title": "Class CT_Array | C# Excel API | IronXL",
    "keywords": "Class CT_Array Inheritance System.Object CT_Array Namespace : NPOI.OpenXmlFormats Assembly : IronXL.dll Syntax public class CT_Array : Object Constructors CT_Array() Declaration public CT_Array() Properties baseType Declaration public ST_ArrayBaseType baseType { get; set; } Property Value Type Description ST_ArrayBaseType Items Declaration public object[] Items { get; set; } Property Value Type Description System.Object [] ItemsElementName Declaration public < 0655 a5bb - a204 - 4 c01 - bb92 - ccefadfffa33 > ItemsChoiceType [ ] ItemsElementName { get; set; } Property Value Type Description NPOI.OpenXmlFormats.<0655a5bb-a204-4c01-bb92-ccefadfffa33>ItemsChoiceType [] lBounds Declaration public int lBounds { get; set; } Property Value Type Description System.Int32 uBounds Declaration public int uBounds { get; set; } Property Value Type Description System.Int32"
  },
  "api/NPOI.OpenXmlFormats.CT_AuthorType.html": {
    "href": "api/NPOI.OpenXmlFormats.CT_AuthorType.html",
    "title": "Class CT_AuthorType | C# Excel API | IronXL",
    "keywords": "Class CT_AuthorType Inheritance System.Object CT_AuthorType Namespace : NPOI.OpenXmlFormats Assembly : IronXL.dll Syntax public class CT_AuthorType : Object Constructors CT_AuthorType() Declaration public CT_AuthorType() Properties Items Declaration public List<object> Items { get; set; } Property Value Type Description System.Collections.Generic.List < System.Object > ItemsElementName Declaration public List << 0655 a5bb - a204 - 4 c01 - bb92 - ccefadfffa33 > ItemsChoiceType >ItemsElementName { get; set; } Property Value Type Description System.Collections.Generic.List < NPOI.OpenXmlFormats.<0655a5bb-a204-4c01-bb92-ccefadfffa33>ItemsChoiceType >"
  },
  "api/NPOI.OpenXmlFormats.CT_Cf.html": {
    "href": "api/NPOI.OpenXmlFormats.CT_Cf.html",
    "title": "Class CT_Cf | C# Excel API | IronXL",
    "keywords": "Class CT_Cf Inheritance System.Object CT_Cf Namespace : NPOI.OpenXmlFormats Assembly : IronXL.dll Syntax public class CT_Cf : Object Constructors CT_Cf() Declaration public CT_Cf() Properties format Declaration public string format { get; set; } Property Value Type Description System.String Value Declaration public byte[] Value { get; set; } Property Value Type Description System.Byte []"
  },
  "api/NPOI.OpenXmlFormats.CT_Characteristic.html": {
    "href": "api/NPOI.OpenXmlFormats.CT_Characteristic.html",
    "title": "Class CT_Characteristic | C# Excel API | IronXL",
    "keywords": "Class CT_Characteristic Inheritance System.Object CT_Characteristic Namespace : NPOI.OpenXmlFormats Assembly : IronXL.dll Syntax public class CT_Characteristic : Object Constructors CT_Characteristic() Declaration public CT_Characteristic() Properties name Declaration public string name { get; set; } Property Value Type Description System.String relation Declaration public ST_Relation relation { get; set; } Property Value Type Description ST_Relation val Declaration public string val { get; set; } Property Value Type Description System.String vocabulary Declaration public string vocabulary { get; set; } Property Value Type Description System.String"
  },
  "api/NPOI.OpenXmlFormats.CT_Connection.html": {
    "href": "api/NPOI.OpenXmlFormats.CT_Connection.html",
    "title": "Class CT_Connection | C# Excel API | IronXL",
    "keywords": "Class CT_Connection Inheritance System.Object CT_Connection Namespace : NPOI.OpenXmlFormats Assembly : IronXL.dll Syntax public class CT_Connection : Object Constructors CT_Connection() Declaration public CT_Connection() Properties background Declaration public bool background { get; set; } Property Value Type Description System.Boolean credentials Declaration public ST_CredMethod credentials { get; set; } Property Value Type Description ST_CredMethod dbPr Declaration public CT_DbPr dbPr { get; set; } Property Value Type Description CT_DbPr deleted Declaration public bool deleted { get; set; } Property Value Type Description System.Boolean description Declaration public string description { get; set; } Property Value Type Description System.String extLst Declaration public CT_ExtensionList extLst { get; set; } Property Value Type Description CT_ExtensionList id Declaration public uint id { get; set; } Property Value Type Description System.UInt32 interval Declaration public uint interval { get; set; } Property Value Type Description System.UInt32 keepAlive Declaration public bool keepAlive { get; set; } Property Value Type Description System.Boolean minRefreshableVersion Declaration public byte minRefreshableVersion { get; set; } Property Value Type Description System.Byte name Declaration public string name { get; set; } Property Value Type Description System.String new Declaration public bool new { get; set; } Property Value Type Description System.Boolean odcFile Declaration public string odcFile { get; set; } Property Value Type Description System.String olapPr Declaration public CT_OlapPr olapPr { get; set; } Property Value Type Description CT_OlapPr onlyUseConnectionFile Declaration public bool onlyUseConnectionFile { get; set; } Property Value Type Description System.Boolean parameters Declaration public CT_Parameters parameters { get; set; } Property Value Type Description CT_Parameters reconnectionMethod Declaration public uint reconnectionMethod { get; set; } Property Value Type Description System.UInt32 refreshedVersion Declaration public byte refreshedVersion { get; set; } Property Value Type Description System.Byte refreshOnLoad Declaration public bool refreshOnLoad { get; set; } Property Value Type Description System.Boolean saveData Declaration public bool saveData { get; set; } Property Value Type Description System.Boolean savePassword Declaration public bool savePassword { get; set; } Property Value Type Description System.Boolean singleSignOnId Declaration public string singleSignOnId { get; set; } Property Value Type Description System.String sourceFile Declaration public string sourceFile { get; set; } Property Value Type Description System.String textPr Declaration public CT_TextPr textPr { get; set; } Property Value Type Description CT_TextPr type Declaration public uint type { get; set; } Property Value Type Description System.UInt32 typeSpecified Declaration public bool typeSpecified { get; set; } Property Value Type Description System.Boolean webPr Declaration public CT_WebPr webPr { get; set; } Property Value Type Description CT_WebPr"
  },
  "api/NPOI.OpenXmlFormats.CT_Connections.html": {
    "href": "api/NPOI.OpenXmlFormats.CT_Connections.html",
    "title": "Class CT_Connections | C# Excel API | IronXL",
    "keywords": "Class CT_Connections Inheritance System.Object CT_Connections Namespace : NPOI.OpenXmlFormats Assembly : IronXL.dll Syntax public class CT_Connections : Object Constructors CT_Connections() Declaration public CT_Connections() Properties connection Declaration public CT_Connection[] connection { get; set; } Property Value Type Description CT_Connection []"
  },
  "api/NPOI.OpenXmlFormats.CT_CustomProperties.html": {
    "href": "api/NPOI.OpenXmlFormats.CT_CustomProperties.html",
    "title": "Class CT_CustomProperties | C# Excel API | IronXL",
    "keywords": "Class CT_CustomProperties Inheritance System.Object CT_CustomProperties Namespace : NPOI.OpenXmlFormats Assembly : IronXL.dll Syntax public class CT_CustomProperties : Object Constructors CT_CustomProperties() Declaration public CT_CustomProperties() Properties property Declaration public List<CT_Property> property { get; set; } Property Value Type Description System.Collections.Generic.List < CT_Property > Methods AddNewProperty() Declaration public CT_Property AddNewProperty() Returns Type Description CT_Property Copy() Declaration public CT_CustomProperties Copy() Returns Type Description CT_CustomProperties GetProperty(String) Declaration public CT_Property GetProperty(string name) Parameters Type Name Description System.String name Returns Type Description CT_Property GetPropertyArray(Int32) Declaration public CT_Property GetPropertyArray(int index) Parameters Type Name Description System.Int32 index Returns Type Description CT_Property GetPropertyList() Declaration public List<CT_Property> GetPropertyList() Returns Type Description System.Collections.Generic.List < CT_Property > sizeOfPropertyArray() Declaration public int sizeOfPropertyArray() Returns Type Description System.Int32"
  },
  "api/NPOI.OpenXmlFormats.CT_DatastoreItem.html": {
    "href": "api/NPOI.OpenXmlFormats.CT_DatastoreItem.html",
    "title": "Class CT_DatastoreItem | C# Excel API | IronXL",
    "keywords": "Class CT_DatastoreItem Inheritance System.Object CT_DatastoreItem Namespace : NPOI.OpenXmlFormats Assembly : IronXL.dll Syntax public class CT_DatastoreItem : Object Constructors CT_DatastoreItem() Declaration public CT_DatastoreItem() Properties itemID Declaration public string itemID { get; set; } Property Value Type Description System.String schemaRefs Declaration public List<CT_DatastoreSchemaRef> schemaRefs { get; set; } Property Value Type Description System.Collections.Generic.List < CT_DatastoreSchemaRef >"
  },
  "api/NPOI.OpenXmlFormats.CT_DatastoreSchemaRef.html": {
    "href": "api/NPOI.OpenXmlFormats.CT_DatastoreSchemaRef.html",
    "title": "Class CT_DatastoreSchemaRef | C# Excel API | IronXL",
    "keywords": "Class CT_DatastoreSchemaRef Inheritance System.Object CT_DatastoreSchemaRef Namespace : NPOI.OpenXmlFormats Assembly : IronXL.dll Syntax public class CT_DatastoreSchemaRef : Object Constructors CT_DatastoreSchemaRef() Declaration public CT_DatastoreSchemaRef() Properties uri Declaration public string uri { get; set; } Property Value Type Description System.String"
  },
  "api/NPOI.OpenXmlFormats.CT_DatastoreSchemaRefs.html": {
    "href": "api/NPOI.OpenXmlFormats.CT_DatastoreSchemaRefs.html",
    "title": "Class CT_DatastoreSchemaRefs | C# Excel API | IronXL",
    "keywords": "Class CT_DatastoreSchemaRefs Inheritance System.Object CT_DatastoreSchemaRefs Namespace : NPOI.OpenXmlFormats Assembly : IronXL.dll Syntax public class CT_DatastoreSchemaRefs : Object Constructors CT_DatastoreSchemaRefs() Declaration public CT_DatastoreSchemaRefs() Properties schemaRef Declaration public List<CT_DatastoreSchemaRef> schemaRef { get; set; } Property Value Type Description System.Collections.Generic.List < CT_DatastoreSchemaRef >"
  },
  "api/NPOI.OpenXmlFormats.CT_DbPr.html": {
    "href": "api/NPOI.OpenXmlFormats.CT_DbPr.html",
    "title": "Class CT_DbPr | C# Excel API | IronXL",
    "keywords": "Class CT_DbPr Inheritance System.Object CT_DbPr Namespace : NPOI.OpenXmlFormats Assembly : IronXL.dll Syntax public class CT_DbPr : Object Constructors CT_DbPr() Declaration public CT_DbPr() Properties command Declaration public string command { get; set; } Property Value Type Description System.String commandType Declaration public uint commandType { get; set; } Property Value Type Description System.UInt32 connection Declaration public string connection { get; set; } Property Value Type Description System.String serverCommand Declaration public string serverCommand { get; set; } Property Value Type Description System.String"
  },
  "api/NPOI.OpenXmlFormats.CT_DigSigBlob.html": {
    "href": "api/NPOI.OpenXmlFormats.CT_DigSigBlob.html",
    "title": "Class CT_DigSigBlob | C# Excel API | IronXL",
    "keywords": "Class CT_DigSigBlob Inheritance System.Object CT_DigSigBlob Namespace : NPOI.OpenXmlFormats Assembly : IronXL.dll Syntax public class CT_DigSigBlob : Object Constructors CT_DigSigBlob() Declaration public CT_DigSigBlob() Properties blob Declaration public byte[] blob { get; set; } Property Value Type Description System.Byte []"
  },
  "api/NPOI.OpenXmlFormats.CT_Empty.html": {
    "href": "api/NPOI.OpenXmlFormats.CT_Empty.html",
    "title": "Class CT_Empty | C# Excel API | IronXL",
    "keywords": "Class CT_Empty Inheritance System.Object CT_Empty Namespace : NPOI.OpenXmlFormats Assembly : IronXL.dll Syntax public class CT_Empty : Object Constructors CT_Empty() Declaration public CT_Empty()"
  },
  "api/NPOI.OpenXmlFormats.CT_ExtendedProperties.html": {
    "href": "api/NPOI.OpenXmlFormats.CT_ExtendedProperties.html",
    "title": "Class CT_ExtendedProperties | C# Excel API | IronXL",
    "keywords": "Class CT_ExtendedProperties Inheritance System.Object CT_ExtendedProperties Namespace : NPOI.OpenXmlFormats Assembly : IronXL.dll Syntax public class CT_ExtendedProperties : Object Constructors CT_ExtendedProperties() Declaration public CT_ExtendedProperties() Properties Application Declaration public string Application { get; set; } Property Value Type Description System.String AppVersion Declaration public string AppVersion { get; set; } Property Value Type Description System.String Characters Declaration public int Characters { get; set; } Property Value Type Description System.Int32 CharactersSpecified Declaration public bool CharactersSpecified { get; set; } Property Value Type Description System.Boolean CharactersWithSpaces Declaration public int CharactersWithSpaces { get; set; } Property Value Type Description System.Int32 CharactersWithSpacesSpecified Declaration public bool CharactersWithSpacesSpecified { get; set; } Property Value Type Description System.Boolean Company Declaration public string Company { get; set; } Property Value Type Description System.String DigSig Declaration public CT_DigSigBlob DigSig { get; set; } Property Value Type Description CT_DigSigBlob DocSecurity Declaration public int DocSecurity { get; set; } Property Value Type Description System.Int32 DocSecuritySpecified Declaration public bool DocSecuritySpecified { get; set; } Property Value Type Description System.Boolean HeadingPairs Declaration public CT_VectorVariant HeadingPairs { get; set; } Property Value Type Description CT_VectorVariant HiddenSlides Declaration public int HiddenSlides { get; set; } Property Value Type Description System.Int32 HiddenSlidesSpecified Declaration public bool HiddenSlidesSpecified { get; set; } Property Value Type Description System.Boolean HLinks Declaration public CT_VectorVariant HLinks { get; set; } Property Value Type Description CT_VectorVariant HyperlinkBase Declaration public string HyperlinkBase { get; set; } Property Value Type Description System.String HyperlinksChanged Declaration public bool HyperlinksChanged { get; set; } Property Value Type Description System.Boolean HyperlinksChangedSpecified Declaration public bool HyperlinksChangedSpecified { get; set; } Property Value Type Description System.Boolean Lines Declaration public int Lines { get; set; } Property Value Type Description System.Int32 LinesSpecified Declaration public bool LinesSpecified { get; set; } Property Value Type Description System.Boolean LinksUpToDate Declaration public bool LinksUpToDate { get; set; } Property Value Type Description System.Boolean LinksUpToDateSpecified Declaration public bool LinksUpToDateSpecified { get; set; } Property Value Type Description System.Boolean Manager Declaration public string Manager { get; set; } Property Value Type Description System.String MMClips Declaration public int MMClips { get; set; } Property Value Type Description System.Int32 MMClipsSpecified Declaration public bool MMClipsSpecified { get; set; } Property Value Type Description System.Boolean Notes Declaration public int Notes { get; set; } Property Value Type Description System.Int32 NotesSpecified Declaration public bool NotesSpecified { get; set; } Property Value Type Description System.Boolean Pages Declaration public int Pages { get; set; } Property Value Type Description System.Int32 PagesSpecified Declaration public bool PagesSpecified { get; set; } Property Value Type Description System.Boolean Paragraphs Declaration public int Paragraphs { get; set; } Property Value Type Description System.Int32 ParagraphsSpecified Declaration public bool ParagraphsSpecified { get; set; } Property Value Type Description System.Boolean PresentationFormat Declaration public string PresentationFormat { get; set; } Property Value Type Description System.String ScaleCrop Declaration public bool ScaleCrop { get; set; } Property Value Type Description System.Boolean ScaleCropSpecified Declaration public bool ScaleCropSpecified { get; set; } Property Value Type Description System.Boolean SharedDoc Declaration public bool SharedDoc { get; set; } Property Value Type Description System.Boolean SharedDocSpecified Declaration public bool SharedDocSpecified { get; set; } Property Value Type Description System.Boolean Slides Declaration public int Slides { get; set; } Property Value Type Description System.Int32 SlidesSpecified Declaration public bool SlidesSpecified { get; set; } Property Value Type Description System.Boolean Template Declaration public string Template { get; set; } Property Value Type Description System.String TitlesOfParts Declaration public CT_VectorLpstr TitlesOfParts { get; set; } Property Value Type Description CT_VectorLpstr TotalTime Declaration public int TotalTime { get; set; } Property Value Type Description System.Int32 TotalTimeSpecified Declaration public bool TotalTimeSpecified { get; set; } Property Value Type Description System.Boolean Words Declaration public int Words { get; set; } Property Value Type Description System.Int32 WordsSpecified Declaration public bool WordsSpecified { get; set; } Property Value Type Description System.Boolean Methods Copy() Declaration public CT_ExtendedProperties Copy() Returns Type Description CT_ExtendedProperties GetHeadingPairs() Declaration public CT_VectorVariant GetHeadingPairs() Returns Type Description CT_VectorVariant IsSetApplication() Declaration public bool IsSetApplication() Returns Type Description System.Boolean IsSetAppVersion() Declaration public bool IsSetAppVersion() Returns Type Description System.Boolean IsSetCharacters() Declaration public bool IsSetCharacters() Returns Type Description System.Boolean IsSetCharactersWithSpaces() Declaration public bool IsSetCharactersWithSpaces() Returns Type Description System.Boolean IsSetCompany() Declaration public bool IsSetCompany() Returns Type Description System.Boolean IsSetHiddenSlides() Declaration public bool IsSetHiddenSlides() Returns Type Description System.Boolean IsSetHLinks() Declaration public bool IsSetHLinks() Returns Type Description System.Boolean IsSetHyperlinkBase() Declaration public bool IsSetHyperlinkBase() Returns Type Description System.Boolean IsSetHyperlinksChanged() Declaration public bool IsSetHyperlinksChanged() Returns Type Description System.Boolean IsSetLines() Declaration public bool IsSetLines() Returns Type Description System.Boolean IsSetLinksUpToDate() Declaration public bool IsSetLinksUpToDate() Returns Type Description System.Boolean IsSetManager() Declaration public bool IsSetManager() Returns Type Description System.Boolean IsSetMMClips() Declaration public bool IsSetMMClips() Returns Type Description System.Boolean IsSetNotes() Declaration public bool IsSetNotes() Returns Type Description System.Boolean IsSetPages() Declaration public bool IsSetPages() Returns Type Description System.Boolean IsSetParagraphs() Declaration public bool IsSetParagraphs() Returns Type Description System.Boolean IsSetPresentationFormat() Declaration public bool IsSetPresentationFormat() Returns Type Description System.Boolean IsSetScaleCrop() Declaration public bool IsSetScaleCrop() Returns Type Description System.Boolean IsSetSharedDoc() Declaration public bool IsSetSharedDoc() Returns Type Description System.Boolean IsSetSlides() Declaration public bool IsSetSlides() Returns Type Description System.Boolean IsSetTemplate() Declaration public bool IsSetTemplate() Returns Type Description System.Boolean IsSetTotalTime() Declaration public bool IsSetTotalTime() Returns Type Description System.Boolean IsSetWords() Declaration public bool IsSetWords() Returns Type Description System.Boolean"
  },
  "api/NPOI.OpenXmlFormats.CT_Extension.html": {
    "href": "api/NPOI.OpenXmlFormats.CT_Extension.html",
    "title": "Class CT_Extension | C# Excel API | IronXL",
    "keywords": "Class CT_Extension Inheritance System.Object CT_Extension Namespace : NPOI.OpenXmlFormats Assembly : IronXL.dll Syntax public class CT_Extension : Object Constructors CT_Extension() Declaration public CT_Extension() Properties Any Declaration public XmlElement Any { get; set; } Property Value Type Description System.Xml.XmlElement uri Declaration public string uri { get; set; } Property Value Type Description System.String"
  },
  "api/NPOI.OpenXmlFormats.CT_ExtensionList.html": {
    "href": "api/NPOI.OpenXmlFormats.CT_ExtensionList.html",
    "title": "Class CT_ExtensionList | C# Excel API | IronXL",
    "keywords": "Class CT_ExtensionList Inheritance System.Object CT_ExtensionList Namespace : NPOI.OpenXmlFormats Assembly : IronXL.dll Syntax public class CT_ExtensionList : Object Constructors CT_ExtensionList() Declaration public CT_ExtensionList() Properties ext Declaration public CT_Extension[] ext { get; set; } Property Value Type Description CT_Extension []"
  },
  "api/NPOI.OpenXmlFormats.CT_Index.html": {
    "href": "api/NPOI.OpenXmlFormats.CT_Index.html",
    "title": "Class CT_Index | C# Excel API | IronXL",
    "keywords": "Class CT_Index Inheritance System.Object CT_Index Namespace : NPOI.OpenXmlFormats Assembly : IronXL.dll Syntax public class CT_Index : Object Constructors CT_Index() Declaration public CT_Index() Properties v Declaration public uint v { get; set; } Property Value Type Description System.UInt32 Methods Parse(XmlNode, XmlNamespaceManager) Declaration public static CT_Index Parse(XmlNode node, XmlNamespaceManager namespaceManager) Parameters Type Name Description System.Xml.XmlNode node System.Xml.XmlNamespaceManager namespaceManager Returns Type Description CT_Index"
  },
  "api/NPOI.OpenXmlFormats.CT_NameListType.html": {
    "href": "api/NPOI.OpenXmlFormats.CT_NameListType.html",
    "title": "Class CT_NameListType | C# Excel API | IronXL",
    "keywords": "Class CT_NameListType Inheritance System.Object CT_NameListType Namespace : NPOI.OpenXmlFormats Assembly : IronXL.dll Syntax public class CT_NameListType : Object Constructors CT_NameListType() Declaration public CT_NameListType() Properties Person Declaration public List<CT_PersonType> Person { get; set; } Property Value Type Description System.Collections.Generic.List < CT_PersonType >"
  },
  "api/NPOI.OpenXmlFormats.CT_NameOrCorporateType.html": {
    "href": "api/NPOI.OpenXmlFormats.CT_NameOrCorporateType.html",
    "title": "Class CT_NameOrCorporateType | C# Excel API | IronXL",
    "keywords": "Class CT_NameOrCorporateType Inheritance System.Object CT_NameOrCorporateType Namespace : NPOI.OpenXmlFormats Assembly : IronXL.dll Syntax public class CT_NameOrCorporateType : Object Constructors CT_NameOrCorporateType() Declaration public CT_NameOrCorporateType() Properties Item Declaration public object Item { get; set; } Property Value Type Description System.Object"
  },
  "api/NPOI.OpenXmlFormats.CT_NameType.html": {
    "href": "api/NPOI.OpenXmlFormats.CT_NameType.html",
    "title": "Class CT_NameType | C# Excel API | IronXL",
    "keywords": "Class CT_NameType Inheritance System.Object CT_NameType Namespace : NPOI.OpenXmlFormats Assembly : IronXL.dll Syntax public class CT_NameType : Object Constructors CT_NameType() Declaration public CT_NameType() Properties NameList Declaration public List<CT_PersonType> NameList { get; set; } Property Value Type Description System.Collections.Generic.List < CT_PersonType >"
  },
  "api/NPOI.OpenXmlFormats.CT_Null.html": {
    "href": "api/NPOI.OpenXmlFormats.CT_Null.html",
    "title": "Class CT_Null | C# Excel API | IronXL",
    "keywords": "Class CT_Null Inheritance System.Object CT_Null Namespace : NPOI.OpenXmlFormats Assembly : IronXL.dll Syntax public class CT_Null : Object Constructors CT_Null() Declaration public CT_Null()"
  },
  "api/NPOI.OpenXmlFormats.CT_OlapPr.html": {
    "href": "api/NPOI.OpenXmlFormats.CT_OlapPr.html",
    "title": "Class CT_OlapPr | C# Excel API | IronXL",
    "keywords": "Class CT_OlapPr Inheritance System.Object CT_OlapPr Namespace : NPOI.OpenXmlFormats Assembly : IronXL.dll Syntax public class CT_OlapPr : Object Constructors CT_OlapPr() Declaration public CT_OlapPr() Properties local Declaration public bool local { get; set; } Property Value Type Description System.Boolean localConnection Declaration public string localConnection { get; set; } Property Value Type Description System.String localRefresh Declaration public bool localRefresh { get; set; } Property Value Type Description System.Boolean rowDrillCount Declaration public uint rowDrillCount { get; set; } Property Value Type Description System.UInt32 rowDrillCountSpecified Declaration public bool rowDrillCountSpecified { get; set; } Property Value Type Description System.Boolean sendLocale Declaration public bool sendLocale { get; set; } Property Value Type Description System.Boolean serverFill Declaration public bool serverFill { get; set; } Property Value Type Description System.Boolean serverFont Declaration public bool serverFont { get; set; } Property Value Type Description System.Boolean serverFontColor Declaration public bool serverFontColor { get; set; } Property Value Type Description System.Boolean serverNumberFormat Declaration public bool serverNumberFormat { get; set; } Property Value Type Description System.Boolean"
  },
  "api/NPOI.OpenXmlFormats.CT_Parameter.html": {
    "href": "api/NPOI.OpenXmlFormats.CT_Parameter.html",
    "title": "Class CT_Parameter | C# Excel API | IronXL",
    "keywords": "Class CT_Parameter Inheritance System.Object CT_Parameter Namespace : NPOI.OpenXmlFormats Assembly : IronXL.dll Syntax public class CT_Parameter : Object Constructors CT_Parameter() Declaration public CT_Parameter() Properties boolean Declaration public bool boolean { get; set; } Property Value Type Description System.Boolean booleanSpecified Declaration public bool booleanSpecified { get; set; } Property Value Type Description System.Boolean cell Declaration public string cell { get; set; } Property Value Type Description System.String double Declaration public double double { get; set; } Property Value Type Description System.Double doubleSpecified Declaration public bool doubleSpecified { get; set; } Property Value Type Description System.Boolean integer Declaration public int integer { get; set; } Property Value Type Description System.Int32 integerSpecified Declaration public bool integerSpecified { get; set; } Property Value Type Description System.Boolean name Declaration public string name { get; set; } Property Value Type Description System.String parameterType Declaration public ST_ParameterType parameterType { get; set; } Property Value Type Description ST_ParameterType prompt Declaration public string prompt { get; set; } Property Value Type Description System.String refreshOnChange Declaration public bool refreshOnChange { get; set; } Property Value Type Description System.Boolean sqlType Declaration public int sqlType { get; set; } Property Value Type Description System.Int32 string Declaration public string string { get; set; } Property Value Type Description System.String"
  },
  "api/NPOI.OpenXmlFormats.CT_Parameters.html": {
    "href": "api/NPOI.OpenXmlFormats.CT_Parameters.html",
    "title": "Class CT_Parameters | C# Excel API | IronXL",
    "keywords": "Class CT_Parameters Inheritance System.Object CT_Parameters Namespace : NPOI.OpenXmlFormats Assembly : IronXL.dll Syntax public class CT_Parameters : Object Constructors CT_Parameters() Declaration public CT_Parameters() Properties count Declaration public uint count { get; set; } Property Value Type Description System.UInt32 countSpecified Declaration public bool countSpecified { get; set; } Property Value Type Description System.Boolean parameter Declaration public CT_Parameter[] parameter { get; set; } Property Value Type Description CT_Parameter []"
  },
  "api/NPOI.OpenXmlFormats.CT_PersonType.html": {
    "href": "api/NPOI.OpenXmlFormats.CT_PersonType.html",
    "title": "Class CT_PersonType | C# Excel API | IronXL",
    "keywords": "Class CT_PersonType Inheritance System.Object CT_PersonType Namespace : NPOI.OpenXmlFormats Assembly : IronXL.dll Syntax public class CT_PersonType : Object Constructors CT_PersonType() Declaration public CT_PersonType() Properties First Declaration public List<string> First { get; set; } Property Value Type Description System.Collections.Generic.List < System.String > Last Declaration public List<string> Last { get; set; } Property Value Type Description System.Collections.Generic.List < System.String > Middle Declaration public List<string> Middle { get; set; } Property Value Type Description System.Collections.Generic.List < System.String >"
  },
  "api/NPOI.OpenXmlFormats.CT_Property.html": {
    "href": "api/NPOI.OpenXmlFormats.CT_Property.html",
    "title": "Class CT_Property | C# Excel API | IronXL",
    "keywords": "Class CT_Property Inheritance System.Object CT_Property Namespace : NPOI.OpenXmlFormats Assembly : IronXL.dll Syntax public class CT_Property : Object Constructors CT_Property() Declaration public CT_Property() Properties fmtid Declaration public string fmtid { get; set; } Property Value Type Description System.String Item Declaration public object Item { get; set; } Property Value Type Description System.Object ItemElementName Declaration public < 16 ac5659 - 8182 - 4 ccd - a561 - 70660 a1c2d7c > ItemChoiceType ItemElementName { get; set; } Property Value Type Description NPOI.OpenXmlFormats.<16ac5659-8182-4ccd-a561-70660a1c2d7c>ItemChoiceType linkTarget Declaration public string linkTarget { get; set; } Property Value Type Description System.String name Declaration public string name { get; set; } Property Value Type Description System.String pid Declaration public int pid { get; set; } Property Value Type Description System.Int32 Methods Equals(Object) Declaration public override bool Equals(object obj) Parameters Type Name Description System.Object obj Returns Type Description System.Boolean GetHashCode() Declaration public override int GetHashCode() Returns Type Description System.Int32 IsSetLpwstr() Declaration public bool IsSetLpwstr() Returns Type Description System.Boolean ToString() Declaration public override string ToString() Returns Type Description System.String"
  },
  "api/NPOI.OpenXmlFormats.CT_Schema.html": {
    "href": "api/NPOI.OpenXmlFormats.CT_Schema.html",
    "title": "Class CT_Schema | C# Excel API | IronXL",
    "keywords": "Class CT_Schema Inheritance System.Object CT_Schema Namespace : NPOI.OpenXmlFormats Assembly : IronXL.dll Syntax public class CT_Schema : Object Constructors CT_Schema() Declaration public CT_Schema() Properties manifestLocation Declaration public string manifestLocation { get; set; } Property Value Type Description System.String schemaLocation Declaration public string schemaLocation { get; set; } Property Value Type Description System.String uri Declaration public string uri { get; set; } Property Value Type Description System.String Methods Parse(XmlNode, XmlNamespaceManager) Declaration public static CT_Schema Parse(XmlNode node, XmlNamespaceManager namespaceManager) Parameters Type Name Description System.Xml.XmlNode node System.Xml.XmlNamespaceManager namespaceManager Returns Type Description CT_Schema"
  },
  "api/NPOI.OpenXmlFormats.CT_SchemaLibrary.html": {
    "href": "api/NPOI.OpenXmlFormats.CT_SchemaLibrary.html",
    "title": "Class CT_SchemaLibrary | C# Excel API | IronXL",
    "keywords": "Class CT_SchemaLibrary Inheritance System.Object CT_SchemaLibrary Namespace : NPOI.OpenXmlFormats Assembly : IronXL.dll Syntax public class CT_SchemaLibrary : Object Constructors CT_SchemaLibrary() Declaration public CT_SchemaLibrary() Properties schema Declaration public List<CT_Schema> schema { get; set; } Property Value Type Description System.Collections.Generic.List < CT_Schema >"
  },
  "api/NPOI.OpenXmlFormats.CT_Sources.html": {
    "href": "api/NPOI.OpenXmlFormats.CT_Sources.html",
    "title": "Class CT_Sources | C# Excel API | IronXL",
    "keywords": "Class CT_Sources Inheritance System.Object CT_Sources Namespace : NPOI.OpenXmlFormats Assembly : IronXL.dll Syntax public class CT_Sources : Object Constructors CT_Sources() Declaration public CT_Sources() Properties SelectedStyle Declaration public string SelectedStyle { get; set; } Property Value Type Description System.String Source Declaration public List<CT_SourceType> Source { get; set; } Property Value Type Description System.Collections.Generic.List < CT_SourceType > StyleName Declaration public string StyleName { get; set; } Property Value Type Description System.String URI Declaration public string URI { get; set; } Property Value Type Description System.String"
  },
  "api/NPOI.OpenXmlFormats.CT_SourceType.html": {
    "href": "api/NPOI.OpenXmlFormats.CT_SourceType.html",
    "title": "Class CT_SourceType | C# Excel API | IronXL",
    "keywords": "Class CT_SourceType Inheritance System.Object CT_SourceType Namespace : NPOI.OpenXmlFormats Assembly : IronXL.dll Syntax public class CT_SourceType : Object Constructors CT_SourceType() Declaration public CT_SourceType() Properties Items Declaration public List<object> Items { get; set; } Property Value Type Description System.Collections.Generic.List < System.Object > ItemsElementName Declaration public List << 26 aea93b - 5838 - 4f 35 - afd2 - 391967d 32 c20 > ItemsChoiceType1 >ItemsElementName { get; set; } Property Value Type Description System.Collections.Generic.List < NPOI.OpenXmlFormats.<26aea93b-5838-4f35-afd2-391967d32c20>ItemsChoiceType1 >"
  },
  "api/NPOI.OpenXmlFormats.CT_TableMissing.html": {
    "href": "api/NPOI.OpenXmlFormats.CT_TableMissing.html",
    "title": "Class CT_TableMissing | C# Excel API | IronXL",
    "keywords": "Class CT_TableMissing Inheritance System.Object CT_TableMissing Namespace : NPOI.OpenXmlFormats Assembly : IronXL.dll Syntax public class CT_TableMissing : Object Constructors CT_TableMissing() Declaration public CT_TableMissing()"
  },
  "api/NPOI.OpenXmlFormats.CT_Tables.html": {
    "href": "api/NPOI.OpenXmlFormats.CT_Tables.html",
    "title": "Class CT_Tables | C# Excel API | IronXL",
    "keywords": "Class CT_Tables Inheritance System.Object CT_Tables Namespace : NPOI.OpenXmlFormats Assembly : IronXL.dll Syntax public class CT_Tables : Object Constructors CT_Tables() Declaration public CT_Tables() Properties count Declaration public uint count { get; set; } Property Value Type Description System.UInt32 countSpecified Declaration public bool countSpecified { get; set; } Property Value Type Description System.Boolean Items Declaration public List<object> Items { get; set; } Property Value Type Description System.Collections.Generic.List < System.Object >"
  },
  "api/NPOI.OpenXmlFormats.CT_TextField.html": {
    "href": "api/NPOI.OpenXmlFormats.CT_TextField.html",
    "title": "Class CT_TextField | C# Excel API | IronXL",
    "keywords": "Class CT_TextField Inheritance System.Object CT_TextField Namespace : NPOI.OpenXmlFormats Assembly : IronXL.dll Syntax public class CT_TextField : Object Constructors CT_TextField() Declaration public CT_TextField() Properties position Declaration public uint position { get; set; } Property Value Type Description System.UInt32 type Declaration public ST_ExternalConnectionType type { get; set; } Property Value Type Description ST_ExternalConnectionType"
  },
  "api/NPOI.OpenXmlFormats.CT_TextFields.html": {
    "href": "api/NPOI.OpenXmlFormats.CT_TextFields.html",
    "title": "Class CT_TextFields | C# Excel API | IronXL",
    "keywords": "Class CT_TextFields Inheritance System.Object CT_TextFields Namespace : NPOI.OpenXmlFormats Assembly : IronXL.dll Syntax public class CT_TextFields : Object Constructors CT_TextFields() Declaration public CT_TextFields() Properties count Declaration public uint count { get; set; } Property Value Type Description System.UInt32 textField Declaration public CT_TextField[] textField { get; set; } Property Value Type Description CT_TextField []"
  },
  "api/NPOI.OpenXmlFormats.CT_TextPr.html": {
    "href": "api/NPOI.OpenXmlFormats.CT_TextPr.html",
    "title": "Class CT_TextPr | C# Excel API | IronXL",
    "keywords": "Class CT_TextPr Inheritance System.Object CT_TextPr Namespace : NPOI.OpenXmlFormats Assembly : IronXL.dll Syntax public class CT_TextPr : Object Constructors CT_TextPr() Declaration public CT_TextPr() Properties codePage Declaration public uint codePage { get; set; } Property Value Type Description System.UInt32 comma Declaration public bool comma { get; set; } Property Value Type Description System.Boolean consecutive Declaration public bool consecutive { get; set; } Property Value Type Description System.Boolean decimal Declaration public string decimal { get; set; } Property Value Type Description System.String delimited Declaration public bool delimited { get; set; } Property Value Type Description System.Boolean delimiter Declaration public string delimiter { get; set; } Property Value Type Description System.String fileType Declaration public ST_FileType fileType { get; set; } Property Value Type Description ST_FileType firstRow Declaration public uint firstRow { get; set; } Property Value Type Description System.UInt32 prompt Declaration public bool prompt { get; set; } Property Value Type Description System.Boolean qualifier Declaration public ST_Qualifier qualifier { get; set; } Property Value Type Description ST_Qualifier semicolon Declaration public bool semicolon { get; set; } Property Value Type Description System.Boolean sourceFile Declaration public string sourceFile { get; set; } Property Value Type Description System.String space Declaration public bool space { get; set; } Property Value Type Description System.Boolean tab Declaration public bool tab { get; set; } Property Value Type Description System.Boolean textFields Declaration public CT_TextFields textFields { get; set; } Property Value Type Description CT_TextFields thousands Declaration public string thousands { get; set; } Property Value Type Description System.String"
  },
  "api/NPOI.OpenXmlFormats.CT_Variant.html": {
    "href": "api/NPOI.OpenXmlFormats.CT_Variant.html",
    "title": "Class CT_Variant | C# Excel API | IronXL",
    "keywords": "Class CT_Variant Inheritance System.Object CT_Variant Namespace : NPOI.OpenXmlFormats Assembly : IronXL.dll Syntax public class CT_Variant : Object Constructors CT_Variant() Declaration public CT_Variant() Properties i2 Declaration public short i2 { get; set; } Property Value Type Description System.Int16 i2Specified Declaration public bool i2Specified { get; set; } Property Value Type Description System.Boolean i4 Declaration public int i4 { get; set; } Property Value Type Description System.Int32 i4Specified Declaration public bool i4Specified { get; set; } Property Value Type Description System.Boolean i8 Declaration public long i8 { get; set; } Property Value Type Description System.Int64 i8Specified Declaration public bool i8Specified { get; set; } Property Value Type Description System.Boolean lpstr Declaration public string lpstr { get; set; } Property Value Type Description System.String lpwstr Declaration public string lpwstr { get; set; } Property Value Type Description System.String r4 Declaration public float r4 { get; set; } Property Value Type Description System.Single r4Specified Declaration public bool r4Specified { get; set; } Property Value Type Description System.Boolean r8 Declaration public double r8 { get; set; } Property Value Type Description System.Double r8Specified Declaration public bool r8Specified { get; set; } Property Value Type Description System.Boolean"
  },
  "api/NPOI.OpenXmlFormats.CT_Vector.html": {
    "href": "api/NPOI.OpenXmlFormats.CT_Vector.html",
    "title": "Class CT_Vector | C# Excel API | IronXL",
    "keywords": "Class CT_Vector Inheritance System.Object CT_Vector Namespace : NPOI.OpenXmlFormats Assembly : IronXL.dll Syntax public class CT_Vector : Object Constructors CT_Vector() Declaration public CT_Vector() Properties baseType Declaration public ST_VectorBaseType baseType { get; set; } Property Value Type Description ST_VectorBaseType Items Declaration public object[] Items { get; set; } Property Value Type Description System.Object [] ItemsElementName Declaration public ST_VectorBaseType[] ItemsElementName { get; set; } Property Value Type Description ST_VectorBaseType [] size Declaration public uint size { get; set; } Property Value Type Description System.UInt32 Methods GetLpstrArray(Int32) Declaration public string GetLpstrArray(int p) Parameters Type Name Description System.Int32 p Returns Type Description System.String GetVariantArray(Int32) Declaration public CT_Variant GetVariantArray(int p) Parameters Type Name Description System.Int32 p Returns Type Description CT_Variant SizeOfLpstrArray() Declaration public int SizeOfLpstrArray() Returns Type Description System.Int32 SizeOfVariantArray() Declaration public int SizeOfVariantArray() Returns Type Description System.Int32"
  },
  "api/NPOI.OpenXmlFormats.CT_VectorLpstr.html": {
    "href": "api/NPOI.OpenXmlFormats.CT_VectorLpstr.html",
    "title": "Class CT_VectorLpstr | C# Excel API | IronXL",
    "keywords": "Class CT_VectorLpstr Inheritance System.Object CT_VectorLpstr Namespace : NPOI.OpenXmlFormats Assembly : IronXL.dll Syntax public class CT_VectorLpstr : Object Constructors CT_VectorLpstr() Declaration public CT_VectorLpstr() Properties vector Declaration public CT_Vector vector { get; set; } Property Value Type Description CT_Vector"
  },
  "api/NPOI.OpenXmlFormats.CT_VectorVariant.html": {
    "href": "api/NPOI.OpenXmlFormats.CT_VectorVariant.html",
    "title": "Class CT_VectorVariant | C# Excel API | IronXL",
    "keywords": "Class CT_VectorVariant Inheritance System.Object CT_VectorVariant Namespace : NPOI.OpenXmlFormats Assembly : IronXL.dll Syntax public class CT_VectorVariant : Object Constructors CT_VectorVariant() Declaration public CT_VectorVariant() Properties vector Declaration public CT_Vector vector { get; set; } Property Value Type Description CT_Vector"
  },
  "api/NPOI.OpenXmlFormats.CT_Vstream.html": {
    "href": "api/NPOI.OpenXmlFormats.CT_Vstream.html",
    "title": "Class CT_Vstream | C# Excel API | IronXL",
    "keywords": "Class CT_Vstream Inheritance System.Object CT_Vstream Namespace : NPOI.OpenXmlFormats Assembly : IronXL.dll Syntax public class CT_Vstream : Object Constructors CT_Vstream() Declaration public CT_Vstream() Properties Value Declaration public byte[] Value { get; set; } Property Value Type Description System.Byte [] version Declaration public string version { get; set; } Property Value Type Description System.String"
  },
  "api/NPOI.OpenXmlFormats.CT_WebPr.html": {
    "href": "api/NPOI.OpenXmlFormats.CT_WebPr.html",
    "title": "Class CT_WebPr | C# Excel API | IronXL",
    "keywords": "Class CT_WebPr Inheritance System.Object CT_WebPr Namespace : NPOI.OpenXmlFormats Assembly : IronXL.dll Syntax public class CT_WebPr : Object Constructors CT_WebPr() Declaration public CT_WebPr() Properties consecutive Declaration public bool consecutive { get; set; } Property Value Type Description System.Boolean editPage Declaration public string editPage { get; set; } Property Value Type Description System.String firstRow Declaration public bool firstRow { get; set; } Property Value Type Description System.Boolean htmlFormat Declaration public ST_HtmlFmt htmlFormat { get; set; } Property Value Type Description ST_HtmlFmt htmlTables Declaration public bool htmlTables { get; set; } Property Value Type Description System.Boolean parsePre Declaration public bool parsePre { get; set; } Property Value Type Description System.Boolean post Declaration public string post { get; set; } Property Value Type Description System.String sourceData Declaration public bool sourceData { get; set; } Property Value Type Description System.Boolean tables Declaration public CT_Tables tables { get; set; } Property Value Type Description CT_Tables textDates Declaration public bool textDates { get; set; } Property Value Type Description System.Boolean url Declaration public string url { get; set; } Property Value Type Description System.String xl2000 Declaration public bool xl2000 { get; set; } Property Value Type Description System.Boolean xl97 Declaration public bool xl97 { get; set; } Property Value Type Description System.Boolean xml Declaration public bool xml { get; set; } Property Value Type Description System.Boolean"
  },
  "api/NPOI.OpenXmlFormats.CT_XStringElement.html": {
    "href": "api/NPOI.OpenXmlFormats.CT_XStringElement.html",
    "title": "Class CT_XStringElement | C# Excel API | IronXL",
    "keywords": "Class CT_XStringElement Inheritance System.Object CT_XStringElement Namespace : NPOI.OpenXmlFormats Assembly : IronXL.dll Syntax public class CT_XStringElement : Object Constructors CT_XStringElement() Declaration public CT_XStringElement() Properties v Declaration public string v { get; set; } Property Value Type Description System.String"
  },
  "api/NPOI.OpenXmlFormats.html": {
    "href": "api/NPOI.OpenXmlFormats.html",
    "title": "Namespace NPOI.OpenXmlFormats | C# Excel API | IronXL",
    "keywords": "Namespace NPOI.OpenXmlFormats Classes CT_AdditionalCharacteristics CT_Array CT_AuthorType CT_Cf CT_Characteristic CT_Connection CT_Connections CT_CustomProperties CT_DatastoreItem CT_DatastoreSchemaRef CT_DatastoreSchemaRefs CT_DbPr CT_DigSigBlob CT_Empty CT_ExtendedProperties CT_Extension CT_ExtensionList CT_Index CT_NameListType CT_NameOrCorporateType CT_NameType CT_Null CT_OlapPr CT_Parameter CT_Parameters CT_PersonType CT_Property CT_Schema CT_SchemaLibrary CT_Sources CT_SourceType CT_TableMissing CT_Tables CT_TextField CT_TextFields CT_TextPr CT_Variant CT_Vector CT_VectorLpstr CT_VectorVariant CT_Vstream CT_WebPr CT_XStringElement ST_ArrayBaseType ST_CredMethod ST_ExternalConnectionType ST_FileType ST_HtmlFmt ST_ParameterType ST_Qualifier ST_Relation ST_RelationshipId ST_SourceType ST_VectorBaseType"
  },
  "api/NPOI.OpenXmlFormats.ST_ArrayBaseType.html": {
    "href": "api/NPOI.OpenXmlFormats.ST_ArrayBaseType.html",
    "title": "Class ST_ArrayBaseType | C# Excel API | IronXL",
    "keywords": "Class ST_ArrayBaseType Inheritance System.Object ST_ArrayBaseType Namespace : NPOI.OpenXmlFormats Assembly : IronXL.dll Syntax public sealed class ST_ArrayBaseType : Enum Fields bool Declaration public const ST_ArrayBaseType bool Field Value Type Description ST_ArrayBaseType bstr Declaration public const ST_ArrayBaseType bstr Field Value Type Description ST_ArrayBaseType cy Declaration public const ST_ArrayBaseType cy Field Value Type Description ST_ArrayBaseType date Declaration public const ST_ArrayBaseType date Field Value Type Description ST_ArrayBaseType decimal Declaration public const ST_ArrayBaseType decimal Field Value Type Description ST_ArrayBaseType error Declaration public const ST_ArrayBaseType error Field Value Type Description ST_ArrayBaseType i1 Declaration public const ST_ArrayBaseType i1 Field Value Type Description ST_ArrayBaseType i2 Declaration public const ST_ArrayBaseType i2 Field Value Type Description ST_ArrayBaseType i4 Declaration public const ST_ArrayBaseType i4 Field Value Type Description ST_ArrayBaseType int Declaration public const ST_ArrayBaseType int Field Value Type Description ST_ArrayBaseType r4 Declaration public const ST_ArrayBaseType r4 Field Value Type Description ST_ArrayBaseType r8 Declaration public const ST_ArrayBaseType r8 Field Value Type Description ST_ArrayBaseType ui1 Declaration public const ST_ArrayBaseType ui1 Field Value Type Description ST_ArrayBaseType ui2 Declaration public const ST_ArrayBaseType ui2 Field Value Type Description ST_ArrayBaseType ui4 Declaration public const ST_ArrayBaseType ui4 Field Value Type Description ST_ArrayBaseType uint Declaration public const ST_ArrayBaseType uint Field Value Type Description ST_ArrayBaseType value__ Declaration public int value__ Field Value Type Description System.Int32 variant Declaration public const ST_ArrayBaseType variant Field Value Type Description ST_ArrayBaseType"
  },
  "api/NPOI.OpenXmlFormats.ST_CredMethod.html": {
    "href": "api/NPOI.OpenXmlFormats.ST_CredMethod.html",
    "title": "Class ST_CredMethod | C# Excel API | IronXL",
    "keywords": "Class ST_CredMethod Inheritance System.Object ST_CredMethod Namespace : NPOI.OpenXmlFormats Assembly : IronXL.dll Syntax public sealed class ST_CredMethod : Enum Fields integrated Declaration public const ST_CredMethod integrated Field Value Type Description ST_CredMethod none Declaration public const ST_CredMethod none Field Value Type Description ST_CredMethod prompt Declaration public const ST_CredMethod prompt Field Value Type Description ST_CredMethod stored Declaration public const ST_CredMethod stored Field Value Type Description ST_CredMethod value__ Declaration public int value__ Field Value Type Description System.Int32"
  },
  "api/NPOI.OpenXmlFormats.ST_ExternalConnectionType.html": {
    "href": "api/NPOI.OpenXmlFormats.ST_ExternalConnectionType.html",
    "title": "Class ST_ExternalConnectionType | C# Excel API | IronXL",
    "keywords": "Class ST_ExternalConnectionType Inheritance System.Object ST_ExternalConnectionType Namespace : NPOI.OpenXmlFormats Assembly : IronXL.dll Syntax public sealed class ST_ExternalConnectionType : Enum Fields DMY Declaration public const ST_ExternalConnectionType DMY Field Value Type Description ST_ExternalConnectionType DYM Declaration public const ST_ExternalConnectionType DYM Field Value Type Description ST_ExternalConnectionType EMD Declaration public const ST_ExternalConnectionType EMD Field Value Type Description ST_ExternalConnectionType general Declaration public const ST_ExternalConnectionType general Field Value Type Description ST_ExternalConnectionType MDY Declaration public const ST_ExternalConnectionType MDY Field Value Type Description ST_ExternalConnectionType MYD Declaration public const ST_ExternalConnectionType MYD Field Value Type Description ST_ExternalConnectionType skip Declaration public const ST_ExternalConnectionType skip Field Value Type Description ST_ExternalConnectionType text Declaration public const ST_ExternalConnectionType text Field Value Type Description ST_ExternalConnectionType value__ Declaration public int value__ Field Value Type Description System.Int32 YDM Declaration public const ST_ExternalConnectionType YDM Field Value Type Description ST_ExternalConnectionType YMD Declaration public const ST_ExternalConnectionType YMD Field Value Type Description ST_ExternalConnectionType"
  },
  "api/NPOI.OpenXmlFormats.ST_FileType.html": {
    "href": "api/NPOI.OpenXmlFormats.ST_FileType.html",
    "title": "Class ST_FileType | C# Excel API | IronXL",
    "keywords": "Class ST_FileType Inheritance System.Object ST_FileType Namespace : NPOI.OpenXmlFormats Assembly : IronXL.dll Syntax public sealed class ST_FileType : Enum Fields dos Declaration public const ST_FileType dos Field Value Type Description ST_FileType mac Declaration public const ST_FileType mac Field Value Type Description ST_FileType value__ Declaration public int value__ Field Value Type Description System.Int32 win Declaration public const ST_FileType win Field Value Type Description ST_FileType"
  },
  "api/NPOI.OpenXmlFormats.ST_HtmlFmt.html": {
    "href": "api/NPOI.OpenXmlFormats.ST_HtmlFmt.html",
    "title": "Class ST_HtmlFmt | C# Excel API | IronXL",
    "keywords": "Class ST_HtmlFmt Inheritance System.Object ST_HtmlFmt Namespace : NPOI.OpenXmlFormats Assembly : IronXL.dll Syntax public sealed class ST_HtmlFmt : Enum Fields all Declaration public const ST_HtmlFmt all Field Value Type Description ST_HtmlFmt none Declaration public const ST_HtmlFmt none Field Value Type Description ST_HtmlFmt rtf Declaration public const ST_HtmlFmt rtf Field Value Type Description ST_HtmlFmt value__ Declaration public int value__ Field Value Type Description System.Int32"
  },
  "api/NPOI.OpenXmlFormats.ST_ParameterType.html": {
    "href": "api/NPOI.OpenXmlFormats.ST_ParameterType.html",
    "title": "Class ST_ParameterType | C# Excel API | IronXL",
    "keywords": "Class ST_ParameterType Inheritance System.Object ST_ParameterType Namespace : NPOI.OpenXmlFormats Assembly : IronXL.dll Syntax public sealed class ST_ParameterType : Enum Fields cell Declaration public const ST_ParameterType cell Field Value Type Description ST_ParameterType prompt Declaration public const ST_ParameterType prompt Field Value Type Description ST_ParameterType value Declaration public const ST_ParameterType value Field Value Type Description ST_ParameterType value__ Declaration public int value__ Field Value Type Description System.Int32"
  },
  "api/NPOI.OpenXmlFormats.ST_Qualifier.html": {
    "href": "api/NPOI.OpenXmlFormats.ST_Qualifier.html",
    "title": "Class ST_Qualifier | C# Excel API | IronXL",
    "keywords": "Class ST_Qualifier Inheritance System.Object ST_Qualifier Namespace : NPOI.OpenXmlFormats Assembly : IronXL.dll Syntax public sealed class ST_Qualifier : Enum Fields doubleQuote Declaration public const ST_Qualifier doubleQuote Field Value Type Description ST_Qualifier none Declaration public const ST_Qualifier none Field Value Type Description ST_Qualifier singleQuote Declaration public const ST_Qualifier singleQuote Field Value Type Description ST_Qualifier value__ Declaration public int value__ Field Value Type Description System.Int32"
  },
  "api/NPOI.OpenXmlFormats.ST_Relation.html": {
    "href": "api/NPOI.OpenXmlFormats.ST_Relation.html",
    "title": "Class ST_Relation | C# Excel API | IronXL",
    "keywords": "Class ST_Relation Inheritance System.Object ST_Relation Namespace : NPOI.OpenXmlFormats Assembly : IronXL.dll Syntax public sealed class ST_Relation : Enum Fields eq Declaration public const ST_Relation eq Field Value Type Description ST_Relation ge Declaration public const ST_Relation ge Field Value Type Description ST_Relation gt Declaration public const ST_Relation gt Field Value Type Description ST_Relation le Declaration public const ST_Relation le Field Value Type Description ST_Relation lt Declaration public const ST_Relation lt Field Value Type Description ST_Relation value__ Declaration public int value__ Field Value Type Description System.Int32"
  },
  "api/NPOI.OpenXmlFormats.ST_RelationshipId.html": {
    "href": "api/NPOI.OpenXmlFormats.ST_RelationshipId.html",
    "title": "Class ST_RelationshipId | C# Excel API | IronXL",
    "keywords": "Class ST_RelationshipId Inheritance System.Object ST_RelationshipId Namespace : NPOI.OpenXmlFormats Assembly : IronXL.dll Syntax public class ST_RelationshipId : Object Constructors ST_RelationshipId() Declaration public ST_RelationshipId() Properties NamespaceURI Declaration public static string NamespaceURI { get; } Property Value Type Description System.String"
  },
  "api/NPOI.OpenXmlFormats.ST_SourceType.html": {
    "href": "api/NPOI.OpenXmlFormats.ST_SourceType.html",
    "title": "Class ST_SourceType | C# Excel API | IronXL",
    "keywords": "Class ST_SourceType Inheritance System.Object ST_SourceType Namespace : NPOI.OpenXmlFormats Assembly : IronXL.dll Syntax public sealed class ST_SourceType : Enum Fields Art Declaration public const ST_SourceType Art Field Value Type Description ST_SourceType ArticleInAPeriodical Declaration public const ST_SourceType ArticleInAPeriodical Field Value Type Description ST_SourceType Book Declaration public const ST_SourceType Book Field Value Type Description ST_SourceType BookSection Declaration public const ST_SourceType BookSection Field Value Type Description ST_SourceType Case Declaration public const ST_SourceType Case Field Value Type Description ST_SourceType ConferenceProceedings Declaration public const ST_SourceType ConferenceProceedings Field Value Type Description ST_SourceType DocumentFromInternetSite Declaration public const ST_SourceType DocumentFromInternetSite Field Value Type Description ST_SourceType ElectronicSource Declaration public const ST_SourceType ElectronicSource Field Value Type Description ST_SourceType Film Declaration public const ST_SourceType Film Field Value Type Description ST_SourceType InternetSite Declaration public const ST_SourceType InternetSite Field Value Type Description ST_SourceType Interview Declaration public const ST_SourceType Interview Field Value Type Description ST_SourceType JournalArticle Declaration public const ST_SourceType JournalArticle Field Value Type Description ST_SourceType Misc Declaration public const ST_SourceType Misc Field Value Type Description ST_SourceType Patent Declaration public const ST_SourceType Patent Field Value Type Description ST_SourceType Performance Declaration public const ST_SourceType Performance Field Value Type Description ST_SourceType Report Declaration public const ST_SourceType Report Field Value Type Description ST_SourceType SoundRecording Declaration public const ST_SourceType SoundRecording Field Value Type Description ST_SourceType value__ Declaration public int value__ Field Value Type Description System.Int32"
  },
  "api/NPOI.OpenXmlFormats.ST_VectorBaseType.html": {
    "href": "api/NPOI.OpenXmlFormats.ST_VectorBaseType.html",
    "title": "Class ST_VectorBaseType | C# Excel API | IronXL",
    "keywords": "Class ST_VectorBaseType Inheritance System.Object ST_VectorBaseType Namespace : NPOI.OpenXmlFormats Assembly : IronXL.dll Syntax public sealed class ST_VectorBaseType : Enum Fields bool Declaration public const ST_VectorBaseType bool Field Value Type Description ST_VectorBaseType bstr Declaration public const ST_VectorBaseType bstr Field Value Type Description ST_VectorBaseType cf Declaration public const ST_VectorBaseType cf Field Value Type Description ST_VectorBaseType clsid Declaration public const ST_VectorBaseType clsid Field Value Type Description ST_VectorBaseType cy Declaration public const ST_VectorBaseType cy Field Value Type Description ST_VectorBaseType date Declaration public const ST_VectorBaseType date Field Value Type Description ST_VectorBaseType error Declaration public const ST_VectorBaseType error Field Value Type Description ST_VectorBaseType filetime Declaration public const ST_VectorBaseType filetime Field Value Type Description ST_VectorBaseType i1 Declaration public const ST_VectorBaseType i1 Field Value Type Description ST_VectorBaseType i2 Declaration public const ST_VectorBaseType i2 Field Value Type Description ST_VectorBaseType i4 Declaration public const ST_VectorBaseType i4 Field Value Type Description ST_VectorBaseType i8 Declaration public const ST_VectorBaseType i8 Field Value Type Description ST_VectorBaseType lpstr Declaration public const ST_VectorBaseType lpstr Field Value Type Description ST_VectorBaseType lpwstr Declaration public const ST_VectorBaseType lpwstr Field Value Type Description ST_VectorBaseType r4 Declaration public const ST_VectorBaseType r4 Field Value Type Description ST_VectorBaseType r8 Declaration public const ST_VectorBaseType r8 Field Value Type Description ST_VectorBaseType ui1 Declaration public const ST_VectorBaseType ui1 Field Value Type Description ST_VectorBaseType ui2 Declaration public const ST_VectorBaseType ui2 Field Value Type Description ST_VectorBaseType ui4 Declaration public const ST_VectorBaseType ui4 Field Value Type Description ST_VectorBaseType ui8 Declaration public const ST_VectorBaseType ui8 Field Value Type Description ST_VectorBaseType value__ Declaration public int value__ Field Value Type Description System.Int32 variant Declaration public const ST_VectorBaseType variant Field Value Type Description ST_VectorBaseType"
  }
}